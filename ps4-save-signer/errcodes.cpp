#include "errcodes.hpp"

const char * errorCodeToString(int32_t errorCode) {
    if (errorCode == -2137128957) return "SCE_ABSTRACTSTORAGE_ERROR_ALREADY";
    if (errorCode == -2137128447) return "SCE_ABSTRACTSTORAGE_ERROR_GET_ACCESSTOKEN";
    if (errorCode == -2137128446) return "SCE_ABSTRACTSTORAGE_ERROR_HTTP";
    if (errorCode == -2137128445) return "SCE_ABSTRACTSTORAGE_ERROR_INVALID_PARAM";
    if (errorCode == -2137128959) return "SCE_ABSTRACTSTORAGE_ERROR_NG";
    if (errorCode == -2137128958) return "SCE_ABSTRACTSTORAGE_ERROR_NO_IMPL";
    if (errorCode == -2137128954) return "SCE_ABSTRACTSTORAGE_ERROR_NOMEM";
    if (errorCode == -2137128955) return "SCE_ABSTRACTSTORAGE_ERROR_NOSUPPORT";
    if (errorCode == -2137128703) return "SCE_ABSTRACTSTORAGE_ERROR_NOTFOUND";
    if (errorCode == -2137128953) return "SCE_ABSTRACTSTORAGE_ERROR_SERVICE";
    if (errorCode == -2137128956) return "SCE_ABSTRACTSTORAGE_ERROR_UNREGIST";
    if (errorCode == -2133262333) return "SCE_APP_CONTENT_ERROR_BUSY";
    if (errorCode == -2133262322) return "SCE_APP_CONTENT_ERROR_CREATE_FULL";
    if (errorCode == -2133262325) return "SCE_APP_CONTENT_ERROR_DOWNLOAD_ENTRY_FULL";
    if (errorCode == -2133262329) return "SCE_APP_CONTENT_ERROR_DRM_NO_ENTITLEMENT";
    if (errorCode == -2133258240) return "SCE_APP_CONTENT_ERROR_GET_STORE_COUNTRY";
    if (errorCode == -2133262326) return "SCE_APP_CONTENT_ERROR_INTERNAL";
    if (errorCode == -2133262324) return "SCE_APP_CONTENT_ERROR_INVALID_PKG";
    if (errorCode == -2133262330) return "SCE_APP_CONTENT_ERROR_MOUNT_FULL";
    if (errorCode == -2133262321) return "SCE_APP_CONTENT_ERROR_MOUNT_OTHER_APP";
    if (errorCode == -2133262328) return "SCE_APP_CONTENT_ERROR_NO_SPACE";
    if (errorCode == -2133262331) return "SCE_APP_CONTENT_ERROR_NOT_FOUND";
    if (errorCode == -2133262335) return "SCE_APP_CONTENT_ERROR_NOT_INITIALIZED";
    if (errorCode == -2133262332) return "SCE_APP_CONTENT_ERROR_NOT_MOUNTED";
    if (errorCode == -2133262327) return "SCE_APP_CONTENT_ERROR_NOT_SUPPORTED";
    if (errorCode == -2133262323) return "SCE_APP_CONTENT_ERROR_OTHER_APPLICATION_PKG";
    if (errorCode == -2133262334) return "SCE_APP_CONTENT_ERROR_PARAMETER";
    if (errorCode == -2136797184) return "SCE_APP_INST_UTIL_ERROR_NOT_INITIALIZED";
    if (errorCode == -2136797183) return "SCE_APP_INST_UTIL_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2136801269) return "SCE_APP_INSTALLER_ERROR_ADDCONT_BROKEN";
    if (errorCode == -2136801272) return "SCE_APP_INSTALLER_ERROR_APP_BROKEN";
    if (errorCode == -2136801268) return "SCE_APP_INSTALLER_ERROR_APP_IS_RUNNING";
    if (errorCode == -2136801276) return "SCE_APP_INSTALLER_ERROR_APP_NOT_FOUND";
    if (errorCode == -2136801263) return "SCE_APP_INSTALLER_ERROR_APP_VER";
    if (errorCode == -2136801261) return "SCE_APP_INSTALLER_ERROR_CANCELED";
    if (errorCode == -2136801265) return "SCE_APP_INSTALLER_ERROR_CONTENT_ID_DISAGREE";
    if (errorCode == -2136801262) return "SCE_APP_INSTALLER_ERROR_DB_DISABLE";
    if (errorCode == -2136801275) return "SCE_APP_INSTALLER_ERROR_DISC_NOT_INSERTED";
    if (errorCode == -2136801260) return "SCE_APP_INSTALLER_ERROR_ENTRYDIGEST";
    if (errorCode == -2136801278) return "SCE_APP_INSTALLER_ERROR_NOSPACE";
    if (errorCode == -2136801264) return "SCE_APP_INSTALLER_ERROR_NOSPACE_KERNEL";
    if (errorCode == -2136801266) return "SCE_APP_INSTALLER_ERROR_NOT_INSTALL";
    if (errorCode == -2136801273) return "SCE_APP_INSTALLER_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2136801277) return "SCE_APP_INSTALLER_ERROR_PARAM";
    if (errorCode == -2136801271) return "SCE_APP_INSTALLER_ERROR_PKG_INVALID_CONTENT_TYPE";
    if (errorCode == -2136801274) return "SCE_APP_INSTALLER_ERROR_PKG_INVALID_DRM_TYPE";
    if (errorCode == -2136801267) return "SCE_APP_INSTALLER_ERROR_SYSTEM_VERSION";
    if (errorCode == -2136801279) return "SCE_APP_INSTALLER_ERROR_UNKNOWN";
    if (errorCode == -2136801270) return "SCE_APP_INSTALLER_ERROR_USED_APP_NOT_FOUND";
    if (errorCode == -2134573055) return "SCE_APP_MESSAGING_ERROR_INTERNAL";
    if (errorCode == -2134573050) return "SCE_APP_MESSAGING_ERROR_NO_MEMORY";
    if (errorCode == -2134573051) return "SCE_APP_MESSAGING_ERROR_NO_MESSAGE";
    if (errorCode == -2134573049) return "SCE_APP_MESSAGING_ERROR_NO_SUCH_APP";
    if (errorCode == -2134573052) return "SCE_APP_MESSAGING_ERROR_NULL_POINTER";
    if (errorCode == -2134573053) return "SCE_APP_MESSAGING_ERROR_PAYLOAD_SIZE_TOO_LARGE";
    if (errorCode == -2134573054) return "SCE_APP_MESSAGING_ERROR_UNAVAILABLE";
    if (errorCode == -2131492861) return "SCE_AUTO_MOUNTER_ERROR_BUSY";
    if (errorCode == -2131492862) return "SCE_AUTO_MOUNTER_ERROR_INVAL";
    if (errorCode == -2131492858) return "SCE_AUTO_MOUNTER_ERROR_IO";
    if (errorCode == -2131492857) return "SCE_AUTO_MOUNTER_ERROR_NODEV";
    if (errorCode == -2131492860) return "SCE_AUTO_MOUNTER_ERROR_NOENT";
    if (errorCode == -2131492863) return "SCE_AUTO_MOUNTER_ERROR_NOMEM";
    if (errorCode == -2131492859) return "SCE_AUTO_MOUNTER_ERROR_NOTSUP";
    if (errorCode == -2131492856) return "SCE_AUTO_MOUNTER_ERROR_SRCH";
    if (errorCode == -2137456512) return "SCE_BGFT_ERROR_ABSSTORAGE_UNINTENDED_OBJECT_TYPE";
    if (errorCode == -2137456639) return "SCE_BGFT_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2137456633) return "SCE_BGFT_ERROR_API_NOT_PERMITTED";
    if (errorCode == -2137456550) return "SCE_BGFT_ERROR_BAD_PFS_BITMAP_FILE_MAGIC";
    if (errorCode == -2137456549) return "SCE_BGFT_ERROR_BAD_PFS_BITMAP_FILE_VERSION";
    if (errorCode == -2137456548) return "SCE_BGFT_ERROR_BITMAP_BACKUP_FILE_FAILED_TO_CREATE";
    if (errorCode == -2137456547) return "SCE_BGFT_ERROR_BITMAP_BACKUP_FILE_FAILED_TO_READ";
    if (errorCode == -2137456553) return "SCE_BGFT_ERROR_BITMAP_CORRUPTED";
    if (errorCode == -2137456635) return "SCE_BGFT_ERROR_BROKEN_PACKET";
    if (errorCode == -2137456546) return "SCE_BGFT_ERROR_CHUNK_COUNT_IS_ZERO";
    if (errorCode == -2137456584) return "SCE_BGFT_ERROR_CONTENTID_UNMATCH";
    if (errorCode == -2137456579) return "SCE_BGFT_ERROR_CONTENTTYPE_UNMATCH";
    if (errorCode == -2137456583) return "SCE_BGFT_ERROR_DEVICE_NOSPC";
    if (errorCode == -2137456545) return "SCE_BGFT_ERROR_FAILED_TO_RENAME_PATCH_FILE";
    if (errorCode == -2137456560) return "SCE_BGFT_ERROR_FATAL";
    if (errorCode == -2137456557) return "SCE_BGFT_ERROR_FILE_BROKEN";
    if (errorCode == -2137456530) return "SCE_BGFT_ERROR_FILE_OFFSET_TOO_LARGE";
    if (errorCode == -2137456582) return "SCE_BGFT_ERROR_FILE_READ_IO";
    if (errorCode == -2137456559) return "SCE_BGFT_ERROR_FILE_SEEK";
    if (errorCode == -2137456556) return "SCE_BGFT_ERROR_FILE_WRITE_IO";
    if (errorCode == -2137456623) return "SCE_BGFT_ERROR_HEAP_NOMEM";
    if (errorCode == -2137456600) return "SCE_BGFT_ERROR_HTTP_CONTENT_LENGTH";
    if (errorCode == -2137456587) return "SCE_BGFT_ERROR_HTTP_FILE_NAME";
    if (errorCode == -2137456590) return "SCE_BGFT_ERROR_HTTP_MIME_UNMATCH";
    if (errorCode == -2137456571) return "SCE_BGFT_ERROR_HTTP_NOT_CONNECTED";
    if (errorCode == -2137456580) return "SCE_BGFT_ERROR_HTTP_RANGE";
    if (errorCode == -2137456596) return "SCE_BGFT_ERROR_HTTP_RECV_IO";
    if (errorCode == -2137456593) return "SCE_BGFT_ERROR_HTTP_RESPONSE_ERROR";
    if (errorCode == -2137456586) return "SCE_BGFT_ERROR_HTTP_SSL_VERIFY";
    if (errorCode == -2137456601) return "SCE_BGFT_ERROR_HTTP_STATUS";
    if (errorCode == -2137456589) return "SCE_BGFT_ERROR_HTTP_UNACCEPTABLE_EXT";
    if (errorCode == -2137456544) return "SCE_BGFT_ERROR_INCONSISTENT_IMAGE_NUM";
    if (errorCode == -2137456543) return "SCE_BGFT_ERROR_INCONSISTENT_PACKAGE_FILE_SIZE";
    if (errorCode == -2137456632) return "SCE_BGFT_ERROR_INTERNAL";
    if (errorCode == -2137456631) return "SCE_BGFT_ERROR_INVALID_APIID";
    if (errorCode == -2137456636) return "SCE_BGFT_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2137456528) return "SCE_BGFT_ERROR_INVALID_BLOCK_NUMBER";
    if (errorCode == -2137456555) return "SCE_BGFT_ERROR_INVALID_CONTENTID";
    if (errorCode == -2137456552) return "SCE_BGFT_ERROR_INVALID_METADATA_PARAM";
    if (errorCode == -2137456542) return "SCE_BGFT_ERROR_INVALID_PACKAGE_DIGEST_HEX_CHECK";
    if (errorCode == -2137456541) return "SCE_BGFT_ERROR_INVALID_PACKAGE_DIGEST_SIZE_OF_PACKAGE_MANIFEST";
    if (errorCode == -2137456526) return "SCE_BGFT_ERROR_INVALID_PLAYGO_64KIB_ALIGNMENT";
    if (errorCode == -2137456514) return "SCE_BGFT_ERROR_INVALID_PLAYGO_CHUNK_DAT";
    if (errorCode == -2137456516) return "SCE_BGFT_ERROR_KAMAJI_BEFORE_DOWNLOADABLE_DATE";
    if (errorCode == -2137456515) return "SCE_BGFT_ERROR_KAMAJI_DOWNLOADABLE_DATE_EMPTY";
    if (errorCode == -2137456517) return "SCE_BGFT_ERROR_KAMAJI_NO_ENTITLEMENT";
    if (errorCode == -2137456523) return "SCE_BGFT_ERROR_KAMAJI_NO_METADATA";
    if (errorCode == -2137456581) return "SCE_BGFT_ERROR_METADATA_FILE_READ_IO";
    if (errorCode == -2137456540) return "SCE_BGFT_ERROR_MISMATCH_CHUNK_COUNT_BETWEEN_APP_AND_PATCH";
    if (errorCode == -2137456539) return "SCE_BGFT_ERROR_MISMATCH_PACKAGE_DIGEST";
    if (errorCode == -2137456520) return "SCE_BGFT_ERROR_MISMATCHED_PACKAGE_SIZE";
    if (errorCode == -2137456538) return "SCE_BGFT_ERROR_MISSING_APP_PLAYGO_CHUNK_DAT";
    if (errorCode == -2137456537) return "SCE_BGFT_ERROR_MISSING_PATCH_PLAYGO_APP_CHUNK_DAT";
    if (errorCode == -2137456536) return "SCE_BGFT_ERROR_MISSING_PATCH_PLAYGO_PATCH_CHUNK_DAT";
    if (errorCode == -2137456527) return "SCE_BGFT_ERROR_MISSING_PLAYGO_CHUNK_SHA";
    if (errorCode == -2137456529) return "SCE_BGFT_ERROR_NO_SHA_VALUE";
    if (errorCode == -2137456551) return "SCE_BGFT_ERROR_NOT_FOUND_CONTENT_TO_UPLOAD";
    if (errorCode == -2137456638) return "SCE_BGFT_ERROR_NOT_INITIALIZED";
    if (errorCode == -2137456558) return "SCE_BGFT_ERROR_NOT_READY";
    if (errorCode == -2137456634) return "SCE_BGFT_ERROR_NOT_SUPPORTED";
    if (errorCode == -2137456637) return "SCE_BGFT_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2137456534) return "SCE_BGFT_ERROR_PACKAGE_FILE_IS_NOT_FOUND";
    if (errorCode == -2137456535) return "SCE_BGFT_ERROR_PACKAGE_FILE_SIZE_IS_ZERO";
    if (errorCode == -2137456606) return "SCE_BGFT_ERROR_PARAM_BADFILE";
    if (errorCode == -2137456604) return "SCE_BGFT_ERROR_PARAM_BADSIZE";
    if (errorCode == -2137456605) return "SCE_BGFT_ERROR_PARAM_IO";
    if (errorCode == -2137456608) return "SCE_BGFT_ERROR_PARAM_NOENT";
    if (errorCode == -2137456607) return "SCE_BGFT_ERROR_PARAM_NOSPC";
    if (errorCode == -2137456613) return "SCE_BGFT_ERROR_PARAM_URI_NOENT";
    if (errorCode == -2137456554) return "SCE_BGFT_ERROR_PFS_BITMAP_CORRUPTED";
    if (errorCode == -2137456521) return "SCE_BGFT_ERROR_PLAYGO_SHA_DIGEST";
    if (errorCode == -2137456524) return "SCE_BGFT_ERROR_PLAYGO_SHA_READ_ERROR";
    if (errorCode == -2137456525) return "SCE_BGFT_ERROR_SHA_RESOLVER_INVALID_4BYTES_ALIGNMENT";
    if (errorCode == -2137456619) return "SCE_BGFT_ERROR_TASK_DUPLICATED";
    if (errorCode == -2137456616) return "SCE_BGFT_ERROR_TASK_ENTRY_NOSPC";
    if (errorCode == -2137456620) return "SCE_BGFT_ERROR_TASK_ID_INVALID_FORMAT";
    if (errorCode == -2137456615) return "SCE_BGFT_ERROR_TASK_NOENT";
    if (errorCode == -2137456522) return "SCE_BGFT_ERROR_TIME_IS_PAST";
    if (errorCode == -2137456533) return "SCE_BGFT_ERROR_UNEXPECTED_EOF";
    if (errorCode == -2137456518) return "SCE_BGFT_ERROR_UNSUPPORTED_DELTA_PACKAGE";
    if (errorCode == -2137456519) return "SCE_BGFT_ERROR_UNSUPPORTED_PACKAGE";
    if (errorCode == -2137456513) return "SCE_BGFT_ERROR_UNSUPPORTED_PLAYGO_CHUNK_DAT";
    if (errorCode == -2137456629) return "SCE_BGFT_ERROR_USER_CANCELLED";
    if (errorCode == -2137456532) return "SCE_BGFT_ERROR_VERIFICATION_ERROR_BITMAP_FILE_DIGEST";
    if (errorCode == -2137456531) return "SCE_BGFT_ERROR_VERIFICATION_ERROR_PFS_BITMAP_FILE_DIGEST";
    if (errorCode == -2137456630) return "SCE_BGFT_ERROR_XML_FORMAT_ERROR";
    if (errorCode == -2138762742) return "SCE_BXCE_ERROR_DOM_EMPTY_ELEMENT_ERROR";
    if (errorCode == -2138762738) return "SCE_BXCE_ERROR_DOM_ENITITY_ERROR";
    if (errorCode == -2138762736) return "SCE_BXCE_ERROR_DOM_EXCEED_LIMIT";
    if (errorCode == -2138762752) return "SCE_BXCE_ERROR_DOM_HIERARCHY_REQUEST_ERROR";
    if (errorCode == -2138762751) return "SCE_BXCE_ERROR_DOM_INDEX_SIZE_ERROR";
    if (errorCode == -2138762750) return "SCE_BXCE_ERROR_DOM_INVALID_ACCESS_ERROR";
    if (errorCode == -2138762749) return "SCE_BXCE_ERROR_DOM_INVALID_STATE_ERROR";
    if (errorCode == -2138762741) return "SCE_BXCE_ERROR_DOM_MAX_NUM_OF_ATTR_ERROR";
    if (errorCode == -2138762739) return "SCE_BXCE_ERROR_DOM_MAX_UNIQUE_ATTR_ERROR";
    if (errorCode == -2138762740) return "SCE_BXCE_ERROR_DOM_MAX_UNIQUE_ELEMENT_ERROR";
    if (errorCode == -2138762748) return "SCE_BXCE_ERROR_DOM_NO_MODIFICATION_ALLOWED_ERROR";
    if (errorCode == -2138762745) return "SCE_BXCE_ERROR_DOM_NO_REFERENCE_GIVEN";
    if (errorCode == -2138762737) return "SCE_BXCE_ERROR_DOM_NOT_ALLOWED_NODE_TYPE";
    if (errorCode == -2138762747) return "SCE_BXCE_ERROR_DOM_NOT_FOUND_ERROR";
    if (errorCode == -2138762746) return "SCE_BXCE_ERROR_DOM_NOT_SUPPORTED_ERROR";
    if (errorCode == -2138762743) return "SCE_BXCE_ERROR_DOM_READ_ONLY_ERROR";
    if (errorCode == -2138762744) return "SCE_BXCE_ERROR_DOM_WRONG_DOCUMENT_ERROR";
    if (errorCode == -2138763258) return "SCE_BXCE_ERROR_INIT_FAILED";
    if (errorCode == -2138763259) return "SCE_BXCE_ERROR_INTERNAL_ERROR";
    if (errorCode == -2138763262) return "SCE_BXCE_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2138763257) return "SCE_BXCE_ERROR_INVALID_BX";
    if (errorCode == -2138761472) return "SCE_BXCE_ERROR_MEM_RETRY";
    if (errorCode == -2138762224) return "SCE_BXCE_ERROR_MX_API_TIMEOUT";
    if (errorCode == -2138762215) return "SCE_BXCE_ERROR_MX_BAD_XML";
    if (errorCode == -2138762214) return "SCE_BXCE_ERROR_MX_BUSY";
    if (errorCode == -2138762222) return "SCE_BXCE_ERROR_MX_CANCEL_FAILED";
    if (errorCode == -2138762233) return "SCE_BXCE_ERROR_MX_CB_FUNC_NOT_FOUND_ERROR";
    if (errorCode == -2138762234) return "SCE_BXCE_ERROR_MX_CONNECTION_CLOSE_ERROR";
    if (errorCode == -2138762236) return "SCE_BXCE_ERROR_MX_CONNECTION_ESTABLISH_ERROR";
    if (errorCode == -2138762235) return "SCE_BXCE_ERROR_MX_CONNECTION_START_ERROR";
    if (errorCode == -2138762230) return "SCE_BXCE_ERROR_MX_DATA_READING_ERROR";
    if (errorCode == -2138762229) return "SCE_BXCE_ERROR_MX_DATA_READING_TIMEOUT";
    if (errorCode == -2138762232) return "SCE_BXCE_ERROR_MX_DATA_WRITING_ERROR";
    if (errorCode == -2138762231) return "SCE_BXCE_ERROR_MX_DATA_WRITING_TIMEOUT";
    if (errorCode == -2138762240) return "SCE_BXCE_ERROR_MX_ERROR";
    if (errorCode == -2138762221) return "SCE_BXCE_ERROR_MX_HTTP_CONNECT_FATAL_ERROR";
    if (errorCode == -2138762219) return "SCE_BXCE_ERROR_MX_HTTP_DATA_REMAINING";
    if (errorCode == -2138762220) return "SCE_BXCE_ERROR_MX_HTTP_SOCKET_OPEN_ERROR";
    if (errorCode == -2138762218) return "SCE_BXCE_ERROR_MX_HTTPS_AUTHENTICATION_ERROR";
    if (errorCode == -2138762217) return "SCE_BXCE_ERROR_MX_HTTPS_CERTIFICATION_NOT_FOUND";
    if (errorCode == -2138762225) return "SCE_BXCE_ERROR_MX_INVALID_MESSAGE";
    if (errorCode == -2138762239) return "SCE_BXCE_ERROR_MX_INVALID_USAGE";
    if (errorCode == -2138762238) return "SCE_BXCE_ERROR_MX_MULTIPLE_INIT";
    if (errorCode == -2138762237) return "SCE_BXCE_ERROR_MX_NO_SUCH_DESTINATION";
    if (errorCode == -2138762216) return "SCE_BXCE_ERROR_MX_REMOTE_SIDE_NOT_RESPOND";
    if (errorCode == -2138762223) return "SCE_BXCE_ERROR_MX_REQUEST_CANCELED";
    if (errorCode == -2138762226) return "SCE_BXCE_ERROR_MX_SERVER_INTERNAL_ERROR";
    if (errorCode == -2138762227) return "SCE_BXCE_ERROR_MX_SERVER_NOT_ALLOWED_ERROR";
    if (errorCode == -2138762228) return "SCE_BXCE_ERROR_MX_SERVER_REJECT_ERROR";
    if (errorCode == -2138762213) return "SCE_BXCE_ERROR_MX_THREAD_CREATE_ERROR";
    if (errorCode == -2138763264) return "SCE_BXCE_ERROR_NO_MEMORY";
    if (errorCode == -2138763263) return "SCE_BXCE_ERROR_NOT_INITIALIZED";
    if (errorCode == -2138763260) return "SCE_BXCE_ERROR_NOT_SUPPORTED";
    if (errorCode == -2138763256) return "SCE_BXCE_ERROR_PARSER_BUSY";
    if (errorCode == -2138763261) return "SCE_BXCE_ERROR_UNKOWN_ERROR";
    if (errorCode == -2138761982) return "SCE_BXCE_ERROR_UTILS_INVALID_ASCII_DIGIT";
    if (errorCode == -2138761981) return "SCE_BXCE_ERROR_UTILS_INVALID_HEX_VALUE";
    if (errorCode == -2138761984) return "SCE_BXCE_ERROR_UTILS_INVALID_XML_CHAR";
    if (errorCode == -2138761983) return "SCE_BXCE_ERROR_UTILS_INVALID_XML_NAME";
    if (errorCode == -2138761728) return "SCE_BXCE_ERROR_UTILS_SERIALIZER_BUFFER_TOO_SMALL";
    if (errorCode == -2138761727) return "SCE_BXCE_ERROR_UTILS_SERIALIZER_CONTINUE";
    if (errorCode == -2138761726) return "SCE_BXCE_ERROR_UTILS_SERIALIZER_FINA";
    if (errorCode == -2138763225) return "SCE_BXCE_ERROR_XML_DOCUMENT_ELEMENT_NOT_FOUND";
    if (errorCode == -2138763222) return "SCE_BXCE_ERROR_XML_DUPLICATE_ATTRIBUTE_NAME";
    if (errorCode == -2138763241) return "SCE_BXCE_ERROR_XML_END_OF_CD_SECT_NOT_FOUND";
    if (errorCode == -2138763242) return "SCE_BXCE_ERROR_XML_END_OF_COMMENT_NOT_FOUND";
    if (errorCode == -2138763224) return "SCE_BXCE_ERROR_XML_END_OF_DECL_NOT_FOUND";
    if (errorCode == -2138763223) return "SCE_BXCE_ERROR_XML_END_OF_DTD_NOT_FOUND";
    if (errorCode == -2138763251) return "SCE_BXCE_ERROR_XML_END_TAG_MISMATCH";
    if (errorCode == -2138763255) return "SCE_BXCE_ERROR_XML_ERROR";
    if (errorCode == -2138763236) return "SCE_BXCE_ERROR_XML_EXPECTED_ATTRIBUTE_NAME";
    if (errorCode == -2138763234) return "SCE_BXCE_ERROR_XML_EXPECTED_ATTRIBUTE_VALUE";
    if (errorCode == -2138763245) return "SCE_BXCE_ERROR_XML_EXPECTED_CLOSING_ANGLE_BRACKET";
    if (errorCode == -2138763246) return "SCE_BXCE_ERROR_XML_EXPECTED_CLOSING_SQUARE_BRACKET";
    if (errorCode == -2138763231) return "SCE_BXCE_ERROR_XML_EXPECTED_DOCUMENT_ELEMENT";
    if (errorCode == -2138763237) return "SCE_BXCE_ERROR_XML_EXPECTED_ELEMENT_NAME";
    if (errorCode == -2138763244) return "SCE_BXCE_ERROR_XML_EXPECTED_EQUALITY_OPERATOR";
    if (errorCode == -2138763235) return "SCE_BXCE_ERROR_XML_EXPECTED_POSITIVE_INTEGER";
    if (errorCode == -2138763239) return "SCE_BXCE_ERROR_XML_EXPECTED_QUOTE";
    if (errorCode == -2138763243) return "SCE_BXCE_ERROR_XML_EXPECTED_SEMI_COLON";
    if (errorCode == -2138763238) return "SCE_BXCE_ERROR_XML_EXPECTED_SPACE";
    if (errorCode == -2138763005) return "SCE_BXCE_ERROR_XML_INVALID_CONTEXT";
    if (errorCode == -2138763230) return "SCE_BXCE_ERROR_XML_INVALID_CONTEXT_ID";
    if (errorCode == -2138763226) return "SCE_BXCE_ERROR_XML_INVALID_DOCUMENT_ELEMENT";
    if (errorCode == -2138763227) return "SCE_BXCE_ERROR_XML_INVALID_PI";
    if (errorCode == -2138763228) return "SCE_BXCE_ERROR_XML_NULL_HANDLER";
    if (errorCode == -2138763007) return "SCE_BXCE_ERROR_XML_PARSE_ABORTED";
    if (errorCode == -2138763008) return "SCE_BXCE_ERROR_XML_PARSE_IN_PROGRESS";
    if (errorCode == -2138763006) return "SCE_BXCE_ERROR_XML_PARSE_SUSPENDED";
    if (errorCode == -2138763229) return "SCE_BXCE_ERROR_XML_PROBLEMS_OPENING_STREAM";
    if (errorCode == -2138763253) return "SCE_BXCE_ERROR_XML_SYNTAX_ERROR";
    if (errorCode == -2138763252) return "SCE_BXCE_ERROR_XML_TAG_NOT_CLOSED";
    if (errorCode == -2138763247) return "SCE_BXCE_ERROR_XML_UNEXPECTED_CHAR";
    if (errorCode == -2138763233) return "SCE_BXCE_ERROR_XML_UNEXPECTED_CHARACTER";
    if (errorCode == -2138763250) return "SCE_BXCE_ERROR_XML_UNEXPECTED_END_TAG";
    if (errorCode == -2138763240) return "SCE_BXCE_ERROR_XML_UNEXPECTED_SPACE";
    if (errorCode == -2138763248) return "SCE_BXCE_ERROR_XML_UNEXPECTED_TOKEN";
    if (errorCode == -2138763254) return "SCE_BXCE_ERROR_XML_UNEXPEXTED_EOF";
    if (errorCode == -2138763232) return "SCE_BXCE_ERROR_XML_UNKNOWN_ENCODING";
    if (errorCode == -2138763249) return "SCE_BXCE_ERROR_XML_UNKNOWN_TOKEN";
    if (errorCode == -2138762496) return "SCE_BXCE_ERROR_XPATH_EXPRESSION_ERROR";
    if (errorCode == -2129002491) return "SCE_CLOUD_CLIENT_ERROR_ALLOCATE_SLOT_FAILED";
    if (errorCode == -2129002492) return "SCE_CLOUD_CLIENT_ERROR_AUTHORIZATION_FAILED";
    if (errorCode == -2129002479) return "SCE_CLOUD_CLIENT_ERROR_BANDWIDTH_TEST_FAILED";
    if (errorCode == -2129002489) return "SCE_CLOUD_CLIENT_ERROR_FAILED_TO_CONNECT_TO_STREAMING_SERVER";
    if (errorCode == -2129002487) return "SCE_CLOUD_CLIENT_ERROR_FSM_ALREADY_EXISTS";
    if (errorCode == -2129002472) return "SCE_CLOUD_CLIENT_ERROR_GENERIC_INSTANCE_FAILED_START";
    if (errorCode == -2129002471) return "SCE_CLOUD_CLIENT_ERROR_GENERIC_REMOTE_START_PROCESS_FAILED";
    if (errorCode == -2129002475) return "SCE_CLOUD_CLIENT_ERROR_GENERIC_START_SLOT_FAILED";
    if (errorCode == -2129002473) return "SCE_CLOUD_CLIENT_ERROR_GENERIC_START_STREAMING_SESSION_CRITICAL";
    if (errorCode == -2129002474) return "SCE_CLOUD_CLIENT_ERROR_GENERIC_START_STREAMING_SESSION_FAILED";
    if (errorCode == -2129002476) return "SCE_CLOUD_CLIENT_ERROR_GENERIC_STATUS_CHECK_FAILED";
    if (errorCode == -2129002477) return "SCE_CLOUD_CLIENT_ERROR_GENERIC_UNKNOWN_TIMEOUT_REASON";
    if (errorCode == -2129002483) return "SCE_CLOUD_CLIENT_ERROR_GET_DATA_CENTERS_FAILED";
    if (errorCode == -2129002484) return "SCE_CLOUD_CLIENT_ERROR_GET_LOCK_FAILED";
    if (errorCode == -2129002488) return "SCE_CLOUD_CLIENT_ERROR_HANDSHAKE_FAILED";
    if (errorCode == -2129002485) return "SCE_CLOUD_CLIENT_ERROR_HTTP_NOT_INITIALIZED";
    if (errorCode == -2129002495) return "SCE_CLOUD_CLIENT_ERROR_INTERNAL";
    if (errorCode == -2129002493) return "SCE_CLOUD_CLIENT_ERROR_INVALID_SEQUENCE";
    if (errorCode == -2129002494) return "SCE_CLOUD_CLIENT_ERROR_INVALID_SESSION";
    if (errorCode == -2129002486) return "SCE_CLOUD_CLIENT_ERROR_MISSING_REQUIRED_LAUNCH_PARAM";
    if (errorCode == -2129002480) return "SCE_CLOUD_CLIENT_ERROR_MTU_TEST_FAILED";
    if (errorCode == -2129002482) return "SCE_CLOUD_CLIENT_ERROR_RTT_TEST_FAILED";
    if (errorCode == -2129002481) return "SCE_CLOUD_CLIENT_ERROR_SELECT_DATA_CENTER_FAILED";
    if (errorCode == -2129002478) return "SCE_CLOUD_CLIENT_ERROR_STREAM_TEST_CHECK_FAILED";
    if (errorCode == -2129002490) return "SCE_CLOUD_CLIENT_ERROR_UNABLE_TO_CONNECT_TO_CLOUD";
    if (errorCode == -2135425012) return "SCE_COMMON_DIALOG_ERROR_ALREADY_CLOSE";
    if (errorCode == -2135425020) return "SCE_COMMON_DIALOG_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2135425022) return "SCE_COMMON_DIALOG_ERROR_ALREADY_SYSTEM_INITIALIZED";
    if (errorCode == -2135425011) return "SCE_COMMON_DIALOG_ERROR_ARG_NULL";
    if (errorCode == -2135425016) return "SCE_COMMON_DIALOG_ERROR_BUSY";
    if (errorCode == -2135425018) return "SCE_COMMON_DIALOG_ERROR_INVALID_STATE";
    if (errorCode == -2135425019) return "SCE_COMMON_DIALOG_ERROR_NOT_FINISHED";
    if (errorCode == -2135425021) return "SCE_COMMON_DIALOG_ERROR_NOT_INITIALIZED";
    if (errorCode == -2135425013) return "SCE_COMMON_DIALOG_ERROR_NOT_RUNNING";
    if (errorCode == -2135425009) return "SCE_COMMON_DIALOG_ERROR_NOT_SUPPORTED";
    if (errorCode == -2135425023) return "SCE_COMMON_DIALOG_ERROR_NOT_SYSTEM_INITIALIZED";
    if (errorCode == -2135425015) return "SCE_COMMON_DIALOG_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2135425014) return "SCE_COMMON_DIALOG_ERROR_PARAM_INVALID";
    if (errorCode == -2135425017) return "SCE_COMMON_DIALOG_ERROR_RESULT_NONE";
    if (errorCode == -2135425010) return "SCE_COMMON_DIALOG_ERROR_UNEXPECTED_FATAL";
    if (errorCode == -2134507519) return "SCE_COMMON_DIALOG_SERVER_ERROR_ALREADY_FINISHED";
    if (errorCode == -2134507520) return "SCE_COMMON_DIALOG_SERVER_ERROR_NOT_SETDATA";
    if (errorCode == -2136276980) return "SCE_COMP_APP_PROXY_IPMI_ERROR_ALREADY_CONNECTED";
    if (errorCode == -2136276978) return "SCE_COMP_APP_PROXY_IPMI_ERROR_CAN_NOT_CONNECT";
    if (errorCode == -2136276977) return "SCE_COMP_APP_PROXY_IPMI_ERROR_CAN_NOT_DISCONNECT";
    if (errorCode == -2136276987) return "SCE_COMP_APP_PROXY_IPMI_ERROR_DEVICE_NOT_CONNECTED";
    if (errorCode == -2136276988) return "SCE_COMP_APP_PROXY_IPMI_ERROR_DEVICE_NOT_FOUND";
    if (errorCode == -2136276990) return "SCE_COMP_APP_PROXY_IPMI_ERROR_FATAL";
    if (errorCode == -2136276991) return "SCE_COMP_APP_PROXY_IPMI_ERROR_GENERIC";
    if (errorCode == -2136276984) return "SCE_COMP_APP_PROXY_IPMI_ERROR_HANDLE_DISABLED";
    if (errorCode == -2136276985) return "SCE_COMP_APP_PROXY_IPMI_ERROR_HANDLE_ENABLED";
    if (errorCode == -2136276983) return "SCE_COMP_APP_PROXY_IPMI_ERROR_HANDLE_NOT_FOUND";
    if (errorCode == -2136276989) return "SCE_COMP_APP_PROXY_IPMI_ERROR_INVALID_PARAM";
    if (errorCode == -2136276986) return "SCE_COMP_APP_PROXY_IPMI_ERROR_INVALID_PORT";
    if (errorCode == -2136276982) return "SCE_COMP_APP_PROXY_IPMI_ERROR_NOT_INITIALIZED";
    if (errorCode == -2136276979) return "SCE_COMP_APP_PROXY_IPMI_ERROR_UNCONNECTED";
    if (errorCode == -2136276981) return "SCE_COMP_APP_PROXY_IPMI_ERROR_UNMATCH_FUNCTION_TYPE";
    if (errorCode == -2132541433) return "SCE_COMPANION_HTTPD_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2132541428) return "SCE_COMPANION_HTTPD_ERROR_ALREADY_REGISTERED";
    if (errorCode == -2132541430) return "SCE_COMPANION_HTTPD_ERROR_ALREADY_STARTED";
    if (errorCode == -2132541438) return "SCE_COMPANION_HTTPD_ERROR_FATAL";
    if (errorCode == -2132541435) return "SCE_COMPANION_HTTPD_ERROR_INVALID_OPERATION";
    if (errorCode == -2132541436) return "SCE_COMPANION_HTTPD_ERROR_INVALID_PARAM";
    if (errorCode == -2132541432) return "SCE_COMPANION_HTTPD_ERROR_NO_EVENT";
    if (errorCode == -2132541437) return "SCE_COMPANION_HTTPD_ERROR_NOMEM";
    if (errorCode == -2132541431) return "SCE_COMPANION_HTTPD_ERROR_NOT_GENERATE_RESPONSE";
    if (errorCode == -2132541434) return "SCE_COMPANION_HTTPD_ERROR_NOT_INITIALIZED";
    if (errorCode == -2132541429) return "SCE_COMPANION_HTTPD_ERROR_NOT_STARTED";
    if (errorCode == -2132541439) return "SCE_COMPANION_HTTPD_ERROR_UNKNOWN";
    if (errorCode == -2136145913) return "SCE_COMPANION_UTIL_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2136145918) return "SCE_COMPANION_UTIL_ERROR_FATAL";
    if (errorCode == -2136145915) return "SCE_COMPANION_UTIL_ERROR_INVALID_OPERATION";
    if (errorCode == -2136145916) return "SCE_COMPANION_UTIL_ERROR_INVALID_PARAM";
    if (errorCode == -2136145912) return "SCE_COMPANION_UTIL_ERROR_NO_EVENT";
    if (errorCode == -2136145917) return "SCE_COMPANION_UTIL_ERROR_NOMEM";
    if (errorCode == -2136145914) return "SCE_COMPANION_UTIL_ERROR_NOT_INITIALIZED";
    if (errorCode == -2136145919) return "SCE_COMPANION_UTIL_ERROR_UNKNOWN";
    if (errorCode == -2137182205) return "SCE_CONTENT_EXPORT_ERROR_BUSY";
    if (errorCode == -2137182207) return "SCE_CONTENT_EXPORT_ERROR_CANCELED";
    if (errorCode == -2137182185) return "SCE_CONTENT_EXPORT_ERROR_DISKFULL";
    if (errorCode == -2137182184) return "SCE_CONTENT_EXPORT_ERROR_EXECUTION_MAX";
    if (errorCode == -2137182191) return "SCE_CONTENT_EXPORT_ERROR_FILE_NOT_FOUND";
    if (errorCode == -2137182186) return "SCE_CONTENT_EXPORT_ERROR_INVALDPARAM";
    if (errorCode == -2137182187) return "SCE_CONTENT_EXPORT_ERROR_LARGE_COMMENT";
    if (errorCode == -2137182189) return "SCE_CONTENT_EXPORT_ERROR_LARGE_TITLE";
    if (errorCode == -2137182203) return "SCE_CONTENT_EXPORT_ERROR_MULTIPLEINIT";
    if (errorCode == -2137182204) return "SCE_CONTENT_EXPORT_ERROR_NOINIT";
    if (errorCode == -2137182202) return "SCE_CONTENT_EXPORT_ERROR_NOMEM";
    if (errorCode == -2137178113) return "SCE_CONTENT_EXPORT_ERROR_NOT_IMPLEMENTED";
    if (errorCode == -2137182183) return "SCE_CONTENT_EXPORT_ERROR_NOT_SUPPORT_FORMAT_THUNBNAIL";
    if (errorCode == -2137182190) return "SCE_CONTENT_EXPORT_ERROR_NOT_SUPPORTED_FORMAT";
    if (errorCode == -2137182206) return "SCE_CONTENT_EXPORT_ERROR_NOTACCEPT";
    if (errorCode == -2137194475) return "SCE_CONTENT_MANAGER_ERROR_BUSY";
    if (errorCode == -2137194476) return "SCE_CONTENT_MANAGER_ERROR_CANCELED";
    if (errorCode == -2137194483) return "SCE_CONTENT_MANAGER_ERROR_FAILED_CONNECTION";
    if (errorCode == -2137194494) return "SCE_CONTENT_MANAGER_ERROR_FATAL";
    if (errorCode == -2137194477) return "SCE_CONTENT_MANAGER_ERROR_FILE_IO_RESULT";
    if (errorCode == -2137194490) return "SCE_CONTENT_MANAGER_ERROR_INEXIST_OBJECT";
    if (errorCode == -2137194491) return "SCE_CONTENT_MANAGER_ERROR_INVALID_APP";
    if (errorCode == -2137194484) return "SCE_CONTENT_MANAGER_ERROR_INVALID_APP_INFO";
    if (errorCode == -2137194495) return "SCE_CONTENT_MANAGER_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2137194482) return "SCE_CONTENT_MANAGER_ERROR_INVALID_SCHEMA";
    if (errorCode == -2137194485) return "SCE_CONTENT_MANAGER_ERROR_INVALID_SEARCH_INFO";
    if (errorCode == -2137194489) return "SCE_CONTENT_MANAGER_ERROR_INVALID_STORAGE";
    if (errorCode == -2137194492) return "SCE_CONTENT_MANAGER_ERROR_INVALID_USER";
    if (errorCode == -2137194480) return "SCE_CONTENT_MANAGER_ERROR_NO_ITERATOR";
    if (errorCode == -2137194488) return "SCE_CONTENT_MANAGER_ERROR_NO_MEMORY";
    if (errorCode == -2137194486) return "SCE_CONTENT_MANAGER_ERROR_NO_PERMISSION";
    if (errorCode == -2137194487) return "SCE_CONTENT_MANAGER_ERROR_NO_RECORD";
    if (errorCode == -2137194481) return "SCE_CONTENT_MANAGER_ERROR_NOT_IMPLEMENTED";
    if (errorCode == -2137194474) return "SCE_CONTENT_MANAGER_ERROR_NOT_OPERATED";
    if (errorCode == -2137194473) return "SCE_CONTENT_MANAGER_ERROR_NOT_SUPPORT_FORMAT_THUNBNAIL";
    if (errorCode == -2137194493) return "SCE_CONTENT_MANAGER_ERROR_NOT_SUPPORTED";
    if (errorCode == -2137194478) return "SCE_CONTENT_MANAGER_ERROR_OVER_NUM_OF_RESULT";
    if (errorCode == -2137194479) return "SCE_CONTENT_MANAGER_ERROR_UNKNOWN_TABLE";
    if (errorCode == -2137190398) return "SCE_CONTENT_SEARCH_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2137190388) return "SCE_CONTENT_SEARCH_ERROR_DB_BUSY";
    if (errorCode == -2137190387) return "SCE_CONTENT_SEARCH_ERROR_DB_FATAL";
    if (errorCode == -2137190391) return "SCE_CONTENT_SEARCH_ERROR_INVALID_AGGREGATED_CONDITION";
    if (errorCode == -2137190383) return "SCE_CONTENT_SEARCH_ERROR_INVALID_CONTENTS_FILE_FORMAT";
    if (errorCode == -2137190392) return "SCE_CONTENT_SEARCH_ERROR_INVALID_ORDERBY_CONDITION";
    if (errorCode == -2137190397) return "SCE_CONTENT_SEARCH_ERROR_INVALID_PARAM";
    if (errorCode == -2137190394) return "SCE_CONTENT_SEARCH_ERROR_INVALID_SEARCH_COLUMN";
    if (errorCode == -2137190393) return "SCE_CONTENT_SEARCH_ERROR_INVALID_SEARCH_COLUMN_VALUE_OPERATOR";
    if (errorCode == -2137190395) return "SCE_CONTENT_SEARCH_ERROR_INVALID_SEARCH_LOGICAL_CONNECTOR";
    if (errorCode == -2137190390) return "SCE_CONTENT_SEARCH_ERROR_LIMIT_TOO_BIG";
    if (errorCode == -2137190396) return "SCE_CONTENT_SEARCH_ERROR_NOMEM";
    if (errorCode == -2137190384) return "SCE_CONTENT_SEARCH_ERROR_NOT_EXIST_FIELD";
    if (errorCode == -2137190382) return "SCE_CONTENT_SEARCH_ERROR_NOT_EXIST_FILE";
    if (errorCode == -2137190399) return "SCE_CONTENT_SEARCH_ERROR_NOT_INITIALIZED";
    if (errorCode == -2137190385) return "SCE_CONTENT_SEARCH_ERROR_NOT_SUPPORT_MIME_TYPE";
    if (errorCode == -2137190389) return "SCE_CONTENT_SEARCH_ERROR_SEARCH_PARAMETER_TOO_MANY";
    if (errorCode == -2137190386) return "SCE_CONTENT_SEARCH_ERROR_TOO_MANY_METADATA";
    if (errorCode == -2137255663) return "SCE_DBRECOVERY_ERROR_APP_BROWSE_ACCESSOR_APP_DB_CANTOPEN";
    if (errorCode == -2137255664) return "SCE_DBRECOVERY_ERROR_APP_BROWSE_ACCESSOR_APP_DB_CORRUPT";
    if (errorCode == -2137255662) return "SCE_DBRECOVERY_ERROR_APP_BROWSE_ACCESSOR_APP_DB_EMPTY";
    if (errorCode == -2137255666) return "SCE_DBRECOVERY_ERROR_APP_BROWSE_ACCESSOR_APP_DB_ERROR";
    if (errorCode == -2137255661) return "SCE_DBRECOVERY_ERROR_APP_BROWSE_ACCESSOR_APP_DB_FORMAT";
    if (errorCode == -2137255665) return "SCE_DBRECOVERY_ERROR_APP_BROWSE_ACCESSOR_APP_DB_IOERR";
    if (errorCode == -2137255660) return "SCE_DBRECOVERY_ERROR_APP_BROWSE_ACCESSOR_APP_DB_NOTADB";
    if (errorCode == -2137255652) return "SCE_DBRECOVERY_ERROR_APP_BROWSE_ACCESSOR_CONTENT_DB_ACCOUNT_ID_ERROR";
    if (errorCode == -2137255656) return "SCE_DBRECOVERY_ERROR_APP_BROWSE_ACCESSOR_CONTENT_DB_CANTOPEN";
    if (errorCode == -2137255657) return "SCE_DBRECOVERY_ERROR_APP_BROWSE_ACCESSOR_CONTENT_DB_CORRUPT";
    if (errorCode == -2137255655) return "SCE_DBRECOVERY_ERROR_APP_BROWSE_ACCESSOR_CONTENT_DB_EMPTY";
    if (errorCode == -2137255659) return "SCE_DBRECOVERY_ERROR_APP_BROWSE_ACCESSOR_CONTENT_DB_ERROR";
    if (errorCode == -2137255654) return "SCE_DBRECOVERY_ERROR_APP_BROWSE_ACCESSOR_CONTENT_DB_FORMAT";
    if (errorCode == -2137255658) return "SCE_DBRECOVERY_ERROR_APP_BROWSE_ACCESSOR_CONTENT_DB_IOERR";
    if (errorCode == -2137255653) return "SCE_DBRECOVERY_ERROR_APP_BROWSE_ACCESSOR_CONTENT_DB_NOTADB";
    if (errorCode == -2137255644) return "SCE_DBRECOVERY_ERROR_AV_CONTENT_ACCESSOR_ACCOUNT_ID_ERROR";
    if (errorCode == -2137255648) return "SCE_DBRECOVERY_ERROR_AV_CONTENT_ACCESSOR_CANTOPEN";
    if (errorCode == -2137255649) return "SCE_DBRECOVERY_ERROR_AV_CONTENT_ACCESSOR_CORRUPT";
    if (errorCode == -2137255647) return "SCE_DBRECOVERY_ERROR_AV_CONTENT_ACCESSOR_EMPTY";
    if (errorCode == -2137255651) return "SCE_DBRECOVERY_ERROR_AV_CONTENT_ACCESSOR_ERROR";
    if (errorCode == -2137255646) return "SCE_DBRECOVERY_ERROR_AV_CONTENT_ACCESSOR_FORMAT";
    if (errorCode == -2137255650) return "SCE_DBRECOVERY_ERROR_AV_CONTENT_ACCESSOR_IOERR";
    if (errorCode == -2137255645) return "SCE_DBRECOVERY_ERROR_AV_CONTENT_ACCESSOR_NOTADB";
    if (errorCode == -2137255626) return "SCE_DBRECOVERY_ERROR_AV_CONTENT_MANAGER_CANTOPEN";
    if (errorCode == -2137255627) return "SCE_DBRECOVERY_ERROR_AV_CONTENT_MANAGER_CORRUPT";
    if (errorCode == -2137255625) return "SCE_DBRECOVERY_ERROR_AV_CONTENT_MANAGER_EMPTY";
    if (errorCode == -2137255629) return "SCE_DBRECOVERY_ERROR_AV_CONTENT_MANAGER_ERROR";
    if (errorCode == -2137255624) return "SCE_DBRECOVERY_ERROR_AV_CONTENT_MANAGER_FORMAT";
    if (errorCode == -2137255628) return "SCE_DBRECOVERY_ERROR_AV_CONTENT_MANAGER_IOERR";
    if (errorCode == -2137255623) return "SCE_DBRECOVERY_ERROR_AV_CONTENT_MANAGER_NOTADB";
    if (errorCode == -2137255676) return "SCE_DBRECOVERY_ERROR_DB_VERSION_NOT_IN_USE";
    if (errorCode == -2137255667) return "SCE_DBRECOVERY_ERROR_DBSL_CORRUPTED_FILE";
    if (errorCode == -2137255668) return "SCE_DBRECOVERY_ERROR_DBSL_WRONG_SCHEMA";
    if (errorCode == -2137255677) return "SCE_DBRECOVERY_ERROR_FILE_IO";
    if (errorCode == -2137255678) return "SCE_DBRECOVERY_ERROR_FILE_PATH_TOO_LONG";
    if (errorCode == -2137255680) return "SCE_DBRECOVERY_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2137255679) return "SCE_DBRECOVERY_ERROR_INVALID_FILE";
    if (errorCode == -2137255675) return "SCE_DBRECOVERY_ERROR_NO_MEMORY";
    if (errorCode == -2137255640) return "SCE_DBRECOVERY_ERROR_NOTIFICATION_ACCESSOR_CANTOPEN";
    if (errorCode == -2137255641) return "SCE_DBRECOVERY_ERROR_NOTIFICATION_ACCESSOR_CORRUPT";
    if (errorCode == -2137255639) return "SCE_DBRECOVERY_ERROR_NOTIFICATION_ACCESSOR_EMPTY";
    if (errorCode == -2137255643) return "SCE_DBRECOVERY_ERROR_NOTIFICATION_ACCESSOR_ERROR";
    if (errorCode == -2137255638) return "SCE_DBRECOVERY_ERROR_NOTIFICATION_ACCESSOR_FORMAT";
    if (errorCode == -2137255642) return "SCE_DBRECOVERY_ERROR_NOTIFICATION_ACCESSOR_IOERR";
    if (errorCode == -2137255637) return "SCE_DBRECOVERY_ERROR_NOTIFICATION_ACCESSOR_NOTADB";
    if (errorCode == -2137255633) return "SCE_DBRECOVERY_ERROR_POPUP_ACCESSOR_CANTOPEN";
    if (errorCode == -2137255634) return "SCE_DBRECOVERY_ERROR_POPUP_ACCESSOR_CORRUPT";
    if (errorCode == -2137255632) return "SCE_DBRECOVERY_ERROR_POPUP_ACCESSOR_EMPTY";
    if (errorCode == -2137255636) return "SCE_DBRECOVERY_ERROR_POPUP_ACCESSOR_ERROR";
    if (errorCode == -2137255631) return "SCE_DBRECOVERY_ERROR_POPUP_ACCESSOR_FORMAT";
    if (errorCode == -2137255635) return "SCE_DBRECOVERY_ERROR_POPUP_ACCESSOR_IOERR";
    if (errorCode == -2137255630) return "SCE_DBRECOVERY_ERROR_POPUP_ACCESSOR_NOTADB";
    if (errorCode == -2137255672) return "SCE_DBRECOVERY_ERROR_SQLITE_CANTOPEN";
    if (errorCode == -2137255673) return "SCE_DBRECOVERY_ERROR_SQLITE_CORRUPT";
    if (errorCode == -2137255671) return "SCE_DBRECOVERY_ERROR_SQLITE_EMPTY";
    if (errorCode == -2137255670) return "SCE_DBRECOVERY_ERROR_SQLITE_FORMAT";
    if (errorCode == -2137255674) return "SCE_DBRECOVERY_ERROR_SQLITE_IOERR";
    if (errorCode == -2137255669) return "SCE_DBRECOVERY_ERROR_SQLITE_NOTADB";
    if (errorCode == -2137255930) return "SCE_DBSETUP_ERROR_ACCES";
    if (errorCode == -2137255932) return "SCE_DBSETUP_ERROR_CORRUPTED_FILE";
    if (errorCode == -2137255931) return "SCE_DBSETUP_ERROR_CORRUPTED_INITIAL_FILE";
    if (errorCode == -2137255933) return "SCE_DBSETUP_ERROR_FAILED_COPY";
    if (errorCode == -2137255928) return "SCE_DBSETUP_ERROR_INVAL";
    if (errorCode == -2137255924) return "SCE_DBSETUP_ERROR_INVALID_ARG";
    if (errorCode == -2137255929) return "SCE_DBSETUP_ERROR_NAMETOOLONG";
    if (errorCode == -2137255925) return "SCE_DBSETUP_ERROR_NO_MEMORY";
    if (errorCode == -2137255926) return "SCE_DBSETUP_ERROR_REQUIRED_SCHEMA_UPDATE";
    if (errorCode == -2137255927) return "SCE_DBSETUP_ERROR_TIMEOUT";
    if (errorCode == -2137255922) return "SCE_DBSETUP_ERROR_WRONG_DB_PATH";
    if (errorCode == -2137255923) return "SCE_DBSETUP_ERROR_WRONG_DB_TYPE";
    if (errorCode == -2137255935) return "SCE_DBSETUP_ERROR_WRONG_DBID";
    if (errorCode == -2137255934) return "SCE_DBSETUP_ERROR_WRONG_SCHEMA";
    if (errorCode == -2137259769) return "SCE_DBUTIL_ERROR_CANCELED";
    if (errorCode == -2137259768) return "SCE_DBUTIL_ERROR_FATAL";
    if (errorCode == -2137259770) return "SCE_DBUTIL_ERROR_INI_FILE";
    if (errorCode == -2137259775) return "SCE_DBUTIL_ERROR_INVALID_ARG";
    if (errorCode == -2137259773) return "SCE_DBUTIL_ERROR_INVALID_OP";
    if (errorCode == -2137259774) return "SCE_DBUTIL_ERROR_NO_MEMORY";
    if (errorCode == -2137259771) return "SCE_DBUTIL_ERROR_NO_ROWID";
    if (errorCode == -2137259772) return "SCE_DBUTIL_ERROR_NOT_FOUND";
    if (errorCode == -2137259767) return "SCE_DBUTIL_ERROR_NOT_SUPPORTED";
    if (errorCode == -2137259516) return "SCE_DBUTIL_ERROR_SQLITE_ABORT";
    if (errorCode == -2137259497) return "SCE_DBUTIL_ERROR_SQLITE_AUTH";
    if (errorCode == -2137259515) return "SCE_DBUTIL_ERROR_SQLITE_BUSY";
    if (errorCode == -2137259506) return "SCE_DBUTIL_ERROR_SQLITE_CANTOPEN";
    if (errorCode == -2137259501) return "SCE_DBUTIL_ERROR_SQLITE_CONSTRAINT";
    if (errorCode == -2137259509) return "SCE_DBUTIL_ERROR_SQLITE_CORRUPT";
    if (errorCode == -2137259504) return "SCE_DBUTIL_ERROR_SQLITE_EMPTY";
    if (errorCode == -2137259519) return "SCE_DBUTIL_ERROR_SQLITE_ERROR";
    if (errorCode == -2137259496) return "SCE_DBUTIL_ERROR_SQLITE_FORMAT";
    if (errorCode == -2137259507) return "SCE_DBUTIL_ERROR_SQLITE_FULL";
    if (errorCode == -2137259518) return "SCE_DBUTIL_ERROR_SQLITE_INTERNAL";
    if (errorCode == -2137259511) return "SCE_DBUTIL_ERROR_SQLITE_INTERRUPT";
    if (errorCode == -2137259510) return "SCE_DBUTIL_ERROR_SQLITE_IOERR";
    if (errorCode == -2137256691) return "SCE_DBUTIL_ERROR_SQLITE_IOERR_ACCESS";
    if (errorCode == -2137256693) return "SCE_DBUTIL_ERROR_SQLITE_IOERR_BLOCKED";
    if (errorCode == -2137256690) return "SCE_DBUTIL_ERROR_SQLITE_IOERR_CHECKRESERVEDLOCK";
    if (errorCode == -2137256688) return "SCE_DBUTIL_ERROR_SQLITE_IOERR_CLOSE";
    if (errorCode == -2137256694) return "SCE_DBUTIL_ERROR_SQLITE_IOERR_DELETE";
    if (errorCode == -2137256687) return "SCE_DBUTIL_ERROR_SQLITE_IOERR_DIR_CLOSE";
    if (errorCode == -2137256699) return "SCE_DBUTIL_ERROR_SQLITE_IOERR_DIR_FSYNC";
    if (errorCode == -2137256697) return "SCE_DBUTIL_ERROR_SQLITE_IOERR_FSTAT";
    if (errorCode == -2137256700) return "SCE_DBUTIL_ERROR_SQLITE_IOERR_FSYNC";
    if (errorCode == -2137256689) return "SCE_DBUTIL_ERROR_SQLITE_IOERR_LOCK";
    if (errorCode == -2137256692) return "SCE_DBUTIL_ERROR_SQLITE_IOERR_NOMEM";
    if (errorCode == -2137256695) return "SCE_DBUTIL_ERROR_SQLITE_IOERR_RDLOCK";
    if (errorCode == -2137256703) return "SCE_DBUTIL_ERROR_SQLITE_IOERR_READ";
    if (errorCode == -2137256702) return "SCE_DBUTIL_ERROR_SQLITE_IOERR_SHORT_READ";
    if (errorCode == -2137256698) return "SCE_DBUTIL_ERROR_SQLITE_IOERR_TRUNCATE";
    if (errorCode == -2137256696) return "SCE_DBUTIL_ERROR_SQLITE_IOERR_UNLOCK";
    if (errorCode == -2137256701) return "SCE_DBUTIL_ERROR_SQLITE_IOERR_WRITE";
    if (errorCode == -2137259514) return "SCE_DBUTIL_ERROR_SQLITE_LOCKED";
    if (errorCode == -2137256686) return "SCE_DBUTIL_ERROR_SQLITE_LOCKED_SHAREDCACHE";
    if (errorCode == -2137259500) return "SCE_DBUTIL_ERROR_SQLITE_MISMATCH";
    if (errorCode == -2137259499) return "SCE_DBUTIL_ERROR_SQLITE_MISUSE";
    if (errorCode == -2137259498) return "SCE_DBUTIL_ERROR_SQLITE_NOLFS";
    if (errorCode == -2137259513) return "SCE_DBUTIL_ERROR_SQLITE_NOMEM";
    if (errorCode == -2137259494) return "SCE_DBUTIL_ERROR_SQLITE_NOTADB";
    if (errorCode == -2137259508) return "SCE_DBUTIL_ERROR_SQLITE_NOTFOUND";
    if (errorCode == -2137259517) return "SCE_DBUTIL_ERROR_SQLITE_PERM";
    if (errorCode == -2137259505) return "SCE_DBUTIL_ERROR_SQLITE_PROTOCOL";
    if (errorCode == -2137259495) return "SCE_DBUTIL_ERROR_SQLITE_RANGE";
    if (errorCode == -2137259512) return "SCE_DBUTIL_ERROR_SQLITE_READONLY";
    if (errorCode == -2137259503) return "SCE_DBUTIL_ERROR_SQLITE_SCHEMA";
    if (errorCode == -2137259502) return "SCE_DBUTIL_ERROR_SQLITE_TOOBIG";
    if (errorCode == -2129395710) return "SCE_DISC_PLAYER_ERROR_AACS_CONTENTS_REVOCATION";
    if (errorCode == -2129395704) return "SCE_DISC_PLAYER_ERROR_AACS_CRL";
    if (errorCode == -2129395702) return "SCE_DISC_PLAYER_ERROR_AACS_CRL_TRM";
    if (errorCode == -2129395699) return "SCE_DISC_PLAYER_ERROR_AACS_DOT";
    if (errorCode == -2129395706) return "SCE_DISC_PLAYER_ERROR_AACS_DRIVE";
    if (errorCode == -2129395711) return "SCE_DISC_PLAYER_ERROR_AACS_DRIVE_REVOCATION";
    if (errorCode == -2129395705) return "SCE_DISC_PLAYER_ERROR_AACS_DRL";
    if (errorCode == -2129395703) return "SCE_DISC_PLAYER_ERROR_AACS_DRL_TRM";
    if (errorCode == -2129395700) return "SCE_DISC_PLAYER_ERROR_AACS_EX_TITLE_PLAY";
    if (errorCode == -2129395709) return "SCE_DISC_PLAYER_ERROR_AACS_GET_KEY_FAILED";
    if (errorCode == -2129395712) return "SCE_DISC_PLAYER_ERROR_AACS_HOST_REVOCATION";
    if (errorCode == -2129395701) return "SCE_DISC_PLAYER_ERROR_AACS_MKBTYPE";
    if (errorCode == -2129395707) return "SCE_DISC_PLAYER_ERROR_AACS_NO_FILE";
    if (errorCode == -2129395708) return "SCE_DISC_PLAYER_ERROR_AACS_NOT_AACS";
    if (errorCode == -2129395698) return "SCE_DISC_PLAYER_ERROR_AACS_VERIFY";
    if (errorCode == -2129395675) return "SCE_DISC_PLAYER_ERROR_AUDWM_NHU";
    if (errorCode == -2129395686) return "SCE_DISC_PLAYER_ERROR_CPRM_DECRYPT";
    if (errorCode == -2129395687) return "SCE_DISC_PLAYER_ERROR_CPRM_DEVICEKEY";
    if (errorCode == -2129395688) return "SCE_DISC_PLAYER_ERROR_CPRM_DRIVE";
    if (errorCode == -2129395572) return "SCE_DISC_PLAYER_ERROR_CPS_CSS_CONTENT_REVOKE";
    if (errorCode == -2129395571) return "SCE_DISC_PLAYER_ERROR_CPS_CSS_VERIFY_FLASH_FAILED";
    if (errorCode == -2129395685) return "SCE_DISC_PLAYER_ERROR_CPS_ERROR";
    if (errorCode == -2129395574) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_BAD_ALLOC";
    if (errorCode == -2129395579) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_BDJ_ROOT_CERT_ERROR";
    if (errorCode == -2129395657) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_CRL_CLOSE_ERROR";
    if (errorCode == -2129395581) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_CRL_ERROR";
    if (errorCode == -2129395658) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_CRL_OPEN_ERROR";
    if (errorCode == -2129395652) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_CRL_READ_ERROR";
    if (errorCode == -2129395651) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_CRL_UPDATE_ERROR";
    if (errorCode == -2129395595) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_CRYPT_API_ERROR";
    if (errorCode == -2129395629) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DECRYPT_INIT_ERROR";
    if (errorCode == -2129395630) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DEVICE_KEY_UPDATE_TIMES_ERROR";
    if (errorCode == -2129395631) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DEVICE_KEY_VERSION_ERROR";
    if (errorCode == -2129395616) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_INIT_BNA_ZERO_ERROR";
    if (errorCode == -2129395623) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_INIT_CALC_BUSKEY_ERROR";
    if (errorCode == -2129395628) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_INIT_GET_AGID_ERROR";
    if (errorCode == -2129395620) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_INIT_GET_BDLAYER_INFO_ERROR";
    if (errorCode == -2129395615) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_INIT_GET_BN_ERROR";
    if (errorCode == -2129395617) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_INIT_GET_BNA_FEATURE_ERROR";
    if (errorCode == -2129395626) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_INIT_GET_DCERT_ERROR";
    if (errorCode == -2129395625) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_INIT_GET_DV_AND_DSIG_ERROR";
    if (errorCode == -2129395621) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_INIT_GET_DVD_PFI_ERROR";
    if (errorCode == -2129395618) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_INIT_GET_MEDIAID_ERROR";
    if (errorCode == -2129395619) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_INIT_GET_PMSN_AND_DMAC_ERROR";
    if (errorCode == -2129395622) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_INIT_GET_VIDMAC_ERROR";
    if (errorCode == -2129395627) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_INIT_SET_HCERT_ERROR";
    if (errorCode == -2129395624) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_INIT_SET_HV_AND_HSIG_ERROR";
    if (errorCode == -2129395602) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_TCHG_BNA_ZERO_ERROR";
    if (errorCode == -2129395609) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_TCHG_CALC_BUSKEY_ERROR";
    if (errorCode == -2129395614) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_TCHG_GET_AGID_ERROR";
    if (errorCode == -2129395606) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_TCHG_GET_BDLAYER_INFO_ERROR";
    if (errorCode == -2129395601) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_TCHG_GET_BN_ERROR";
    if (errorCode == -2129395603) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_TCHG_GET_BNA_FEATURE_ERROR";
    if (errorCode == -2129395612) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_TCHG_GET_DCERT_ERROR";
    if (errorCode == -2129395611) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_TCHG_GET_DV_AND_DSIG_ERROR";
    if (errorCode == -2129395607) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_TCHG_GET_DVD_PFI_ERROR";
    if (errorCode == -2129395604) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_TCHG_GET_MEDIAID_ERROR";
    if (errorCode == -2129395605) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_TCHG_GET_PMSN_AND_DMAC_ERROR";
    if (errorCode == -2129395608) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_TCHG_GET_VIDMAC_ERROR";
    if (errorCode == -2129395613) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_TCHG_SET_HCERT_ERROR";
    if (errorCode == -2129395610) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRIVE_AUTH_TCHG_SET_HV_AND_HSIG_ERROR";
    if (errorCode == -2129395655) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRL_CLOSE_ERROR";
    if (errorCode == -2129395580) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRL_ERROR";
    if (errorCode == -2129395656) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRL_OPEN_ERROR";
    if (errorCode == -2129395650) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRL_READ_ERROR";
    if (errorCode == -2129395649) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_DRL_UPDATE_ERROR";
    if (errorCode == -2129395583) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_EBIND_ERROR";
    if (errorCode == -2129395632) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_FLASH_MEM_ALLOC_ERROR";
    if (errorCode == -2129395591) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_GET_BUS_ENCRYPT_KEY_ERROR";
    if (errorCode == -2129395578) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_GET_FILE_ATTR_ERROR";
    if (errorCode == -2129395665) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_HDD_INIT_CRL_CLOSE_ERROR";
    if (errorCode == -2129395666) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_HDD_INIT_CRL_OPEN_ERROR";
    if (errorCode == -2129395662) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_HDD_INIT_CRL_UPDATE_ERROR";
    if (errorCode == -2129395663) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_HDD_INIT_DRL_CLOSE_ERROR";
    if (errorCode == -2129395664) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_HDD_INIT_DRL_OPEN_ERROR";
    if (errorCode == -2129395661) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_HDD_INIT_DRL_UPDATE_ERROR";
    if (errorCode == -2129395639) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_HDD_MKDIR_ERROR";
    if (errorCode == -2129395640) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_HDD_MOUNT_ERROR";
    if (errorCode == -2129395642) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_HDD_NEWFS_ERROR";
    if (errorCode == -2129395641) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_HDD_UMMOUNT_ERROR";
    if (errorCode == -2129395638) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_HDD_UNLINK_ERROR";
    if (errorCode == -2129395575) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_INVALID_MEDIA_FORMAT_ERROR";
    if (errorCode == -2129395634) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_NORFLASH_DEVICE_INFO_SECTOR_SIZE_ERROR";
    if (errorCode == -2129395633) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_NORFLASH_DEVICE_INFO_WRITE_FLASG_ERROR";
    if (errorCode == -2129395635) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_NORFLASH_GET_DEVICE_INFO_ERROR";
    if (errorCode == -2129395673) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_NORFLASH_INIT_CLOSE_ERROR";
    if (errorCode == -2129395672) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_NORFLASH_INIT_CRL_READ_ERROR";
    if (errorCode == -2129395671) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_NORFLASH_INIT_CRL_UPDATE_ERROR";
    if (errorCode == -2129395670) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_NORFLASH_INIT_DRL_READ_ERROR";
    if (errorCode == -2129395669) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_NORFLASH_INIT_DRL_UPDATE_ERROR";
    if (errorCode == -2129395590) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_NORFLASH_INIT_OCRL_READ_ERROR";
    if (errorCode == -2129395589) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_NORFLASH_INIT_OCRL_UPDATE_ERROR";
    if (errorCode == -2129395674) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_NORFLASH_INIT_OPEN_ERROR";
    if (errorCode == -2129395668) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_NORFLASH_INIT_SRM_READ_ERROR";
    if (errorCode == -2129395667) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_NORFLASH_INIT_SRM_UPDATE_ERROR";
    if (errorCode == -2129395637) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_NORFLASH_IS_PRODUCT_MODE_ERROR";
    if (errorCode == -2129395636) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_NORFLASH_IS_VFL_ON_ERROR";
    if (errorCode == -2129395587) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_OCRL_CLOSE_ERROR";
    if (errorCode == -2129395588) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_OCRL_OPEN_ERROR";
    if (errorCode == -2129395586) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_OCRL_READ_ERROR";
    if (errorCode == -2129395585) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_OCRL_UPDATE_ERROR";
    if (errorCode == -2129395573) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_PERMISSION_ERROR";
    if (errorCode == -2129395599) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_PROCESS_MKB_ERROR";
    if (errorCode == -2129395597) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_PROCESS_SKB_ERROR";
    if (errorCode == -2129395593) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_SETUP_TITLE_ERROR";
    if (errorCode == -2129395577) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_SHARE_SPURS_ERROR";
    if (errorCode == -2129395594) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_SPU_INIT_ERROR";
    if (errorCode == -2129395653) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_SRM_CLOSE_ERROR";
    if (errorCode == -2129395654) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_SRM_OPEN_ERROR";
    if (errorCode == -2129395648) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_SRM_READ_ERROR";
    if (errorCode == -2129395647) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_SRM_UPDATE_ERROR";
    if (errorCode == -2129395596) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_SYSTEMFILE_INDEX_ERROR";
    if (errorCode == -2129395592) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_TITLE_USAGE_ERROR";
    if (errorCode == -2129395576) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_TRACK_BUFFER_ERROR";
    if (errorCode == -2129395584) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_TRM_CLEAR_ERROR";
    if (errorCode == -2129395646) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_TRM_CRL_READ_ERROR";
    if (errorCode == -2129395645) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_TRM_CRL_UPDATE_ERROR";
    if (errorCode == -2129395644) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_TRM_DRL_READ_ERROR";
    if (errorCode == -2129395643) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_TRM_DRL_UPDATE_ERROR";
    if (errorCode == -2129395660) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_TRM_INIT_CRL_UPDATE_ERROR";
    if (errorCode == -2129395659) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_TRM_INIT_DRL_UPDATE_ERROR";
    if (errorCode == -2129395582) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_UNIT_USAGE_ERROR";
    if (errorCode == -2129395600) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_VERIFY_MKB_ERROR";
    if (errorCode == -2129395598) return "SCE_DISC_PLAYER_ERROR_CPS_SYSTEM_D_VERIFY_SKB_ERROR";
    if (errorCode == -2129395689) return "SCE_DISC_PLAYER_ERROR_CSS_DEADCOPYDISC";
    if (errorCode == -2129395690) return "SCE_DISC_PLAYER_ERROR_CSS_DECRYPT";
    if (errorCode == -2129395693) return "SCE_DISC_PLAYER_ERROR_CSS_DISCKEY";
    if (errorCode == -2129395694) return "SCE_DISC_PLAYER_ERROR_CSS_DRIVE";
    if (errorCode == -2129395692) return "SCE_DISC_PLAYER_ERROR_CSS_INVALID_REGION";
    if (errorCode == -2129395691) return "SCE_DISC_PLAYER_ERROR_CSS_TITLEKEY";
    if (errorCode == -2129395570) return "SCE_DISC_PLAYER_ERROR_DECODER_RES_ACQUIRE_FAIL";
    if (errorCode == -2129395569) return "SCE_DISC_PLAYER_ERROR_DECODER_RES_RELEASE_REQ";
    if (errorCode == -2129395679) return "SCE_DISC_PLAYER_ERROR_ERROR_STOP";
    if (errorCode == -2129395696) return "SCE_DISC_PLAYER_ERROR_HDCP_INVALID_KSV";
    if (errorCode == -2129395697) return "SCE_DISC_PLAYER_ERROR_HDCP_REVOCATION";
    if (errorCode == -2129395695) return "SCE_DISC_PLAYER_ERROR_HDCP_VERIFY_SRM";
    if (errorCode == -2129395677) return "SCE_DISC_PLAYER_ERROR_HDD_FULL";
    if (errorCode == -2129395684) return "SCE_DISC_PLAYER_ERROR_INVALID_FORMAT";
    if (errorCode == -2129395681) return "SCE_DISC_PLAYER_ERROR_INVALID_REGION";
    if (errorCode == -2129395680) return "SCE_DISC_PLAYER_ERROR_INVALID_TITLE";
    if (errorCode == -2129395682) return "SCE_DISC_PLAYER_ERROR_INVALID_TVSYSTEM_NTSC";
    if (errorCode == -2129395683) return "SCE_DISC_PLAYER_ERROR_INVALID_TVSYSTEM_PAL";
    if (errorCode == -2129395676) return "SCE_DISC_PLAYER_ERROR_MV_EXT_OUTPUT";
    if (errorCode == -2129395678) return "SCE_DISC_PLAYER_ERROR_UNEXPECTED_ERROR";
    if (errorCode == -2129264640) return "SCE_DTCP_IP_ACTIVATE_ERROR_CANCEL";
    if (errorCode == -2129264638) return "SCE_DTCP_IP_ACTIVATE_ERROR_GENERIC";
    if (errorCode == -2129264639) return "SCE_DTCP_IP_ACTIVATE_ERROR_PARAM";
    if (errorCode == -2129264367) return "SCE_DTCP_IP_ERROR_ACTIVATE_GENERIC";
    if (errorCode == -2129264366) return "SCE_DTCP_IP_ERROR_ACTIVATE_INTERNAL";
    if (errorCode == -2129264125) return "SCE_DTCP_IP_ERROR_ACTIVATE_PROXY";
    if (errorCode == -2129264128) return "SCE_DTCP_IP_ERROR_ACTIVATE_RESOLVER_ENODNS";
    if (errorCode == -2129264127) return "SCE_DTCP_IP_ERROR_ACTIVATE_RESOLVER_ETIMEDOUT";
    if (errorCode == -2129264126) return "SCE_DTCP_IP_ERROR_ACTIVATE_TIMEOUT";
    if (errorCode == -2129264377) return "SCE_DTCP_IP_ERROR_AUTH_CANNOT_ACCESS";
    if (errorCode == -2129264376) return "SCE_DTCP_IP_ERROR_AUTH_FAILED";
    if (errorCode == -2129264375) return "SCE_DTCP_IP_ERROR_AUTH_FAILED_WLAN";
    if (errorCode == -2129264379) return "SCE_DTCP_IP_ERROR_AUTH_INVALID_HOSTNAME";
    if (errorCode == -2129264378) return "SCE_DTCP_IP_ERROR_AUTH_SERVER_NOT_FOUND";
    if (errorCode == -2129264384) return "SCE_DTCP_IP_ERROR_BUSY";
    if (errorCode == -2129264383) return "SCE_DTCP_IP_ERROR_CANCEL";
    if (errorCode == -2129264374) return "SCE_DTCP_IP_ERROR_DEVCERT_EXPIRED";
    if (errorCode == -2129264382) return "SCE_DTCP_IP_ERROR_GENERIC";
    if (errorCode == -2129264368) return "SCE_DTCP_IP_ERROR_HTTP_CONNECTION_CLOSED";
    if (errorCode == -2129264351) return "SCE_DTCP_IP_ERROR_IPC";
    if (errorCode == -2129264350) return "SCE_DTCP_IP_ERROR_IPC_TIMEOUT";
    if (errorCode == -2129264361) return "SCE_DTCP_IP_ERROR_KEY_BUFFER_TOO_SMALL";
    if (errorCode == -2129264371) return "SCE_DTCP_IP_ERROR_KEY_FATAL";
    if (errorCode == -2129264373) return "SCE_DTCP_IP_ERROR_KEY_NEED_ACTIVATE";
    if (errorCode == -2129264370) return "SCE_DTCP_IP_ERROR_KEY_NEED_CLOCK_SETUP";
    if (errorCode == -2129264372) return "SCE_DTCP_IP_ERROR_KEY_NEED_UPDATE";
    if (errorCode == -2129264362) return "SCE_DTCP_IP_ERROR_KEY_REGISTRY_ACCESS";
    if (errorCode == -2129264360) return "SCE_DTCP_IP_ERROR_KEY_SRM_TOO_LARGE";
    if (errorCode == -2129264365) return "SCE_DTCP_IP_ERROR_MOVE_COMMITMENT_ABORTED";
    if (errorCode == -2129264364) return "SCE_DTCP_IP_ERROR_MOVE_COMMITMENT_NEED_RETRY";
    if (errorCode == -2129264349) return "SCE_DTCP_IP_ERROR_NEED_TERMINATION";
    if (errorCode == -2129264363) return "SCE_DTCP_IP_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2129264380) return "SCE_DTCP_IP_ERROR_PARAM";
    if (errorCode == -2129264381) return "SCE_DTCP_IP_ERROR_SEQUENCE";
    if (errorCode == -2129264369) return "SCE_DTCP_IP_ERROR_STREAM_GENERIC";
    if (errorCode == -2129264354) return "SCE_DTCP_IP_ERROR_SW_BUSY";
    if (errorCode == -2129264355) return "SCE_DTCP_IP_ERROR_SW_END_OF_DATA";
    if (errorCode == -2129264353) return "SCE_DTCP_IP_ERROR_SW_INVALID_ARG";
    if (errorCode == -2129264352) return "SCE_DTCP_IP_ERROR_SW_INVALID_STATE";
    if (errorCode == -2129264356) return "SCE_DTCP_IP_ERROR_SW_NOT_IMPLEMENTED";
    if (errorCode == -2129264357) return "SCE_DTCP_IP_ERROR_SW_STREAM_EOS";
    if (errorCode == -2129264358) return "SCE_DTCP_IP_ERROR_SW_TIMEOUT";
    if (errorCode == -2129264359) return "SCE_DTCP_IP_ERROR_SW_UNKNOWN";
    if (errorCode == -2131951614) return "SCE_ERROR_DIALOG_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2131951611) return "SCE_ERROR_DIALOG_ERROR_INVALID_STATE";
    if (errorCode == -2131951609) return "SCE_ERROR_DIALOG_ERROR_INVALID_USER_ID";
    if (errorCode == -2131951615) return "SCE_ERROR_DIALOG_ERROR_NOT_INITIALIZED";
    if (errorCode == -2131951613) return "SCE_ERROR_DIALOG_ERROR_PARAM_INVALID";
    if (errorCode == -2131951610) return "SCE_ERROR_DIALOG_ERROR_SERVICE_BUSY";
    if (errorCode == -2131951612) return "SCE_ERROR_DIALOG_ERROR_UNEXPECTED_FATAL";
    if (errorCode == -2130509561) return "SCE_FILE_BROWSER_ERROR_BROKEN_DATA";
    if (errorCode == -2130509562) return "SCE_FILE_BROWSER_ERROR_CAN_NOT_PLAY";
    if (errorCode == -2130509568) return "SCE_FILE_BROWSER_ERROR_GENERAL";
    if (errorCode == -2130509567) return "SCE_FILE_BROWSER_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2130509559) return "SCE_FILE_BROWSER_ERROR_INVALID_INPUT_LENGTH";
    if (errorCode == -2130509564) return "SCE_FILE_BROWSER_ERROR_NOT_FOUND";
    if (errorCode == -2130509563) return "SCE_FILE_BROWSER_ERROR_NOT_SUPPORTED_DATA";
    if (errorCode == -2130509566) return "SCE_FILE_BROWSER_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2130509565) return "SCE_FILE_BROWSER_ERROR_OUT_OF_RANGE";
    if (errorCode == -2130509560) return "SCE_FILE_BROWSER_ERROR_PARENTAL_CONTROL_LOCK";
    if (errorCode == -2130575097) return "SCE_FILE_SELECTOR_ERROR_BROKEN_DATA";
    if (errorCode == -2130575098) return "SCE_FILE_SELECTOR_ERROR_CAN_NOT_PLAY";
    if (errorCode == -2130575085) return "SCE_FILE_SELECTOR_ERROR_COPY";
    if (errorCode == -2130575084) return "SCE_FILE_SELECTOR_ERROR_DELETE";
    if (errorCode == -2130575104) return "SCE_FILE_SELECTOR_ERROR_GENERAL";
    if (errorCode == -2130575103) return "SCE_FILE_SELECTOR_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2130575088) return "SCE_FILE_SELECTOR_ERROR_NO_STRAGE_SPACE";
    if (errorCode == -2130575090) return "SCE_FILE_SELECTOR_ERROR_NO_USB_STORAGE_DEVICE";
    if (errorCode == -2130575100) return "SCE_FILE_SELECTOR_ERROR_NOT_FOUND";
    if (errorCode == -2130575093) return "SCE_FILE_SELECTOR_ERROR_NOT_FOUND_COPY_DIR";
    if (errorCode == -2130575099) return "SCE_FILE_SELECTOR_ERROR_NOT_SUPPORTED_DATA";
    if (errorCode == -2130575089) return "SCE_FILE_SELECTOR_ERROR_ONLY_ONE_USB_STORAGE_SUPPORTED";
    if (errorCode == -2130575102) return "SCE_FILE_SELECTOR_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2130575101) return "SCE_FILE_SELECTOR_ERROR_OUT_OF_RANGE";
    if (errorCode == -2130575096) return "SCE_FILE_SELECTOR_ERROR_PARENTAL_CONTROL_LOCK";
    if (errorCode == -2130575095) return "SCE_FILE_SELECTOR_ERROR_PREVIEW";
    if (errorCode == -2130575094) return "SCE_FILE_SELECTOR_ERROR_PREVIEW_NOT_ENOUGH_SYSTEM_MEMORY";
    if (errorCode == -2130575086) return "SCE_FILE_SELECTOR_ERROR_STRAGE_LOCKED";
    if (errorCode == -2130575092) return "SCE_FILE_SELECTOR_ERROR_USB_STORAGE_CANNOT_ACCESS";
    if (errorCode == -2130575091) return "SCE_FILE_SELECTOR_ERROR_USB_STORAGE_DISCONNECTED";
    if (errorCode == -2130575087) return "SCE_FILE_SELECTOR_ERROR_WRITE_ACCESS";
    if (errorCode == -2129985535) return "SCE_GAME_CUSTOM_DATA_DIALOG_ERROR_BLOCKED_ALL_PLAYERS";
    if (errorCode == -2131689469) return "SCE_GAME_LIVE_BROADCASTING_ERROR_ACCOUNT_NOT_LINKED";
    if (errorCode == -2131689465) return "SCE_GAME_LIVE_BROADCASTING_ERROR_ADVERT_CANT_START";
    if (errorCode == -2131689456) return "SCE_GAME_LIVE_BROADCASTING_ERROR_ANOTHER_USER_BROADCASTING";
    if (errorCode == -2131689458) return "SCE_GAME_LIVE_BROADCASTING_ERROR_BROADCASTING_PROHIBITED_AREA";
    if (errorCode == -2131689463) return "SCE_GAME_LIVE_BROADCASTING_ERROR_CANT_CONNECT_NETWORK";
    if (errorCode == -2131689459) return "SCE_GAME_LIVE_BROADCASTING_ERROR_CANT_CONNECT_SERVER";
    if (errorCode == -2131689460) return "SCE_GAME_LIVE_BROADCASTING_ERROR_CONNECTION_SERVER_DISCONNECT";
    if (errorCode == -2131689462) return "SCE_GAME_LIVE_BROADCASTING_ERROR_NETWORK_CONNECTION_LOST";
    if (errorCode == -2131689464) return "SCE_GAME_LIVE_BROADCASTING_ERROR_NOT_AVAILABLE_FEATURE";
    if (errorCode == -2131689471) return "SCE_GAME_LIVE_BROADCASTING_ERROR_NW_NO_CONNECTION";
    if (errorCode == -2131689470) return "SCE_GAME_LIVE_BROADCASTING_ERROR_NW_SERVER_NOT_FOUND";
    if (errorCode == -2131689468) return "SCE_GAME_LIVE_BROADCASTING_ERROR_PAR12";
    if (errorCode == -2131689457) return "SCE_GAME_LIVE_BROADCASTING_ERROR_PROGRAM_ALREADY_FINISHED";
    if (errorCode == -2131689466) return "SCE_GAME_LIVE_BROADCASTING_ERROR_SCANIN_CLOSE_TIME_OUT";
    if (errorCode == -2131689461) return "SCE_GAME_LIVE_BROADCASTING_ERROR_SERVER_CONNECT_TIMEOUT";
    if (errorCode == -2131689467) return "SCE_GAME_LIVE_BROADCASTING_ERROR_SUB_ACCOUNT";
    if (errorCode == -2131623676) return "SCE_GAME_LIVE_SPECTATING_ERROR_AD_ADITEM_UPDATE";
    if (errorCode == -2131623675) return "SCE_GAME_LIVE_SPECTATING_ERROR_AD_HTTP_REQUEST_CANCELED";
    if (errorCode == -2131623673) return "SCE_GAME_LIVE_SPECTATING_ERROR_AD_HTTP_REQUEST_ERROR";
    if (errorCode == -2131623674) return "SCE_GAME_LIVE_SPECTATING_ERROR_AD_HTTP_REQUEST_TIMEOUT";
    if (errorCode == -2131623677) return "SCE_GAME_LIVE_SPECTATING_ERROR_AD_PLAYLIST_NO_NEXT_AD";
    if (errorCode == -2131623678) return "SCE_GAME_LIVE_SPECTATING_ERROR_AD_PLAYLIST_PARSE";
    if (errorCode == -2131623679) return "SCE_GAME_LIVE_SPECTATING_ERROR_AD_PLAYLIST_UPDATE";
    if (errorCode == -2131623672) return "SCE_GAME_LIVE_SPECTATING_ERROR_PROVIDER_SETTINGS_READ_ERROR";
    if (errorCode == -2131623935) return "SCE_GAME_LIVE_SPECTATING_ERROR_TOO_MANY_VIEWERS";
    if (errorCode == -2131622624) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_ENABLE_RAZOR";
    if (errorCode == -2131622633) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_INTERNAL";
    if (errorCode == -2131622623) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_INTERNAL_CORE";
    if (errorCode == -2131622655) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_INVALID_PARAM";
    if (errorCode == -2131622632) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_INVALID_PARAM_CORE";
    if (errorCode == -2131622654) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_INVALID_PARAM_COREIF";
    if (errorCode == -2131622653) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_INVALID_STATUS";
    if (errorCode == -2131622631) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_INVALID_STATUS_CORE";
    if (errorCode == -2131622652) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_INVALID_STATUS_COREIF";
    if (errorCode == -2131622646) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_IPMI";
    if (errorCode == -2131622625) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_IPMI_CORE";
    if (errorCode == -2131622645) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_IPMI_COREIF";
    if (errorCode == -2131622647) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_KERNEL_FUNCTION";
    if (errorCode == -2131622626) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_KERNEL_FUNCTION_CORE";
    if (errorCode == -2131622644) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_NO_ALLOCATE_MEMORY";
    if (errorCode == -2131622636) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_NO_DECODER_RESOURCE";
    if (errorCode == -2131622629) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_NOPLAYABLE";
    if (errorCode == -2131622640) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_NOT_EXIST_REQUESTID";
    if (errorCode == -2131622637) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_NOT_EXIST_RESOURCE_HANDLE";
    if (errorCode == -2131622630) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_NOT_EXIST_STREAM";
    if (errorCode == -2131622650) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_NOT_EXIST_STREAMID";
    if (errorCode == -2131622639) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_REGISTERED_CALLBACK_FULL";
    if (errorCode == -2131622641) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_REQUEST_FULL";
    if (errorCode == -2131622638) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_RESOURCE_HANDLE_FULL";
    if (errorCode == -2131622642) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_RESULT_TIMEOUT";
    if (errorCode == -2131622648) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_SCE_FUNCTION";
    if (errorCode == -2131622627) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_SCE_FUNCTION_CORE";
    if (errorCode == -2131622628) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_STOP";
    if (errorCode == -2131622634) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_STREAM_ABORTED";
    if (errorCode == -2131622651) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_STREAM_FULL";
    if (errorCode == -2131622635) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_STREAM_SUSPENDED";
    if (errorCode == -2131622643) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_UNUSABLE_THIS_API";
    if (errorCode == -2131622649) return "SCE_GAME_LIVE_SPECTATING_ERROR_VIDEOCORE_VIDEOCORE_FUNCTION";
    if (errorCode == -2136997883) return "SCE_GAME_LIVE_STREAMING_ERROR_ENCODER";
    if (errorCode == -2136997886) return "SCE_GAME_LIVE_STREAMING_ERROR_INVALID_PARAM";
    if (errorCode == -2136997885) return "SCE_GAME_LIVE_STREAMING_ERROR_INVALID_STATUS";
    if (errorCode == -2136997881) return "SCE_GAME_LIVE_STREAMING_ERROR_NOT_FOUND";
    if (errorCode == -2136997884) return "SCE_GAME_LIVE_STREAMING_ERROR_NOT_INITIALIZED";
    if (errorCode == -2136997880) return "SCE_GAME_LIVE_STREAMING_ERROR_NOT_SUPPORTED";
    if (errorCode == -2136997882) return "SCE_GAME_LIVE_STREAMING_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2136997887) return "SCE_GAME_LIVE_STREAMING_ERROR_UNKNOWN";
    if (errorCode == -2143213561) return "SCE_GAME_UPDATE_ERROR_ABORTED";
    if (errorCode == -2143213566) return "SCE_GAME_UPDATE_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2143213560) return "SCE_GAME_UPDATE_ERROR_BUSY";
    if (errorCode == -2143213565) return "SCE_GAME_UPDATE_ERROR_INVALID_ARG";
    if (errorCode == -2143213564) return "SCE_GAME_UPDATE_ERROR_INVALID_SIZE";
    if (errorCode == -2143213558) return "SCE_GAME_UPDATE_ERROR_NO_SUCH_TITLE";
    if (errorCode == -2143213567) return "SCE_GAME_UPDATE_ERROR_NOT_INITIALIZED";
    if (errorCode == -2143213563) return "SCE_GAME_UPDATE_ERROR_REQUEST_NOT_FOUND";
    if (errorCode == -2143213562) return "SCE_GAME_UPDATE_ERROR_TOO_MANY_REQUESTS";
    if (errorCode == -2143213433) return "SCE_GAME_UPDATE_VSH_ERROR_ABORTED";
    if (errorCode == -2143213438) return "SCE_GAME_UPDATE_VSH_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2143213426) return "SCE_GAME_UPDATE_VSH_ERROR_BAD_RESPONSE";
    if (errorCode == -2143213432) return "SCE_GAME_UPDATE_VSH_ERROR_BUSY";
    if (errorCode == -2143213419) return "SCE_GAME_UPDATE_VSH_ERROR_HTTP_BAD_RESPONSE";
    if (errorCode == -2143213421) return "SCE_GAME_UPDATE_VSH_ERROR_HTTP_CONNECTION_ERROR";
    if (errorCode == -2143213422) return "SCE_GAME_UPDATE_VSH_ERROR_HTTP_LOCAL_ERROR";
    if (errorCode == -2143213423) return "SCE_GAME_UPDATE_VSH_ERROR_HTTP_OUT_OF_MEMORY";
    if (errorCode == -2143213420) return "SCE_GAME_UPDATE_VSH_ERROR_HTTP_PROXY_ERROR";
    if (errorCode == -2143213424) return "SCE_GAME_UPDATE_VSH_ERROR_INTERNAL";
    if (errorCode == -2143213437) return "SCE_GAME_UPDATE_VSH_ERROR_INVALID_ARG";
    if (errorCode == -2143213429) return "SCE_GAME_UPDATE_VSH_ERROR_INVALID_NP_ENVIRONMENT";
    if (errorCode == -2143213425) return "SCE_GAME_UPDATE_VSH_ERROR_MEMORY";
    if (errorCode == -2143213428) return "SCE_GAME_UPDATE_VSH_ERROR_NOT_EXIST";
    if (errorCode == -2143213439) return "SCE_GAME_UPDATE_VSH_ERROR_NOT_INITIALIZED";
    if (errorCode == -2143213427) return "SCE_GAME_UPDATE_VSH_ERROR_PARSER_FAILED";
    if (errorCode == -2136997617) return "SCE_GLS_ERROR_ABORTED";
    if (errorCode == -2136997620) return "SCE_GLS_ERROR_ALREADY";
    if (errorCode == -2136981240) return "SCE_GLS_ERROR_AUTH_FAILED_N";
    if (errorCode == -2136997374) return "SCE_GLS_ERROR_BE";
    if (errorCode == -2136997616) return "SCE_GLS_ERROR_CAPACITY_EXCEEDED";
    if (errorCode == -2136981247) return "SCE_GLS_ERROR_COMMENT_SERVER_OTHER_N";
    if (errorCode == -2136981248) return "SCE_GLS_ERROR_COULD_NOT_CONNECT_COMMENT_SERVER_N";
    if (errorCode == -2136981246) return "SCE_GLS_ERROR_COULD_NOT_CONNECT_SERVER_N";
    if (errorCode == -2136981244) return "SCE_GLS_ERROR_DISCONNECT_COMMAND_FROM_SERVER_N";
    if (errorCode == -2136981245) return "SCE_GLS_ERROR_END_TIME_IS_OVER_N";
    if (errorCode == -2136997119) return "SCE_GLS_ERROR_FB_NOT_SIGNIN";
    if (errorCode == -2136997626) return "SCE_GLS_ERROR_INVALID_ARG";
    if (errorCode == -2136997622) return "SCE_GLS_ERROR_INVALID_ID";
    if (errorCode == -2136997623) return "SCE_GLS_ERROR_INVALID_POINTER";
    if (errorCode == -2136997625) return "SCE_GLS_ERROR_INVALID_SIZE";
    if (errorCode == -2136997621) return "SCE_GLS_ERROR_INVALID_STATUS";
    if (errorCode == -2136997624) return "SCE_GLS_ERROR_INVALID_VALUE";
    if (errorCode == -2136985344) return "SCE_GLS_ERROR_IRC_COULD_NOT_CONNECT_SERVER_T";
    if (errorCode == -2136985343) return "SCE_GLS_ERROR_IRC_OTHER_T";
    if (errorCode == -2136997117) return "SCE_GLS_ERROR_NO_MSG";
    if (errorCode == -2136997629) return "SCE_GLS_ERROR_NOT_FOUND";
    if (errorCode == -2136997628) return "SCE_GLS_ERROR_NOT_IMPLEMENTED";
    if (errorCode == -2136997627) return "SCE_GLS_ERROR_NOT_INITIALIZED";
    if (errorCode == -2136997630) return "SCE_GLS_ERROR_NOT_SUPPORTED";
    if (errorCode == -2136993789) return "SCE_GLS_ERROR_NW_DISCONNECTED";
    if (errorCode == -2136981501) return "SCE_GLS_ERROR_NW_DISCONNECTED_N";
    if (errorCode == -2136985597) return "SCE_GLS_ERROR_NW_DISCONNECTED_T";
    if (errorCode == -2136989693) return "SCE_GLS_ERROR_NW_DISCONNECTED_U";
    if (errorCode == -2136993791) return "SCE_GLS_ERROR_NW_ECONNECT_SERVER";
    if (errorCode == -2136981503) return "SCE_GLS_ERROR_NW_ECONNECT_SERVER_N";
    if (errorCode == -2136985599) return "SCE_GLS_ERROR_NW_ECONNECT_SERVER_T";
    if (errorCode == -2136989695) return "SCE_GLS_ERROR_NW_ECONNECT_SERVER_U";
    if (errorCode == -2136993790) return "SCE_GLS_ERROR_NW_ENOCONNECT";
    if (errorCode == -2136981502) return "SCE_GLS_ERROR_NW_ENOCONNECT_N";
    if (errorCode == -2136985598) return "SCE_GLS_ERROR_NW_ENOCONNECT_T";
    if (errorCode == -2136989694) return "SCE_GLS_ERROR_NW_ENOCONNECT_U";
    if (errorCode == -2136993788) return "SCE_GLS_ERROR_NW_OTHER";
    if (errorCode == -2136981500) return "SCE_GLS_ERROR_NW_OTHER_N";
    if (errorCode == -2136985596) return "SCE_GLS_ERROR_NW_OTHER_T";
    if (errorCode == -2136989692) return "SCE_GLS_ERROR_NW_OTHER_U";
    if (errorCode == -2136993792) return "SCE_GLS_ERROR_NW_RESOLVER_ENOHOST";
    if (errorCode == -2136981504) return "SCE_GLS_ERROR_NW_RESOLVER_ENOHOST_N";
    if (errorCode == -2136985600) return "SCE_GLS_ERROR_NW_RESOLVER_ENOHOST_T";
    if (errorCode == -2136989696) return "SCE_GLS_ERROR_NW_RESOLVER_ENOHOST_U";
    if (errorCode == -2136997631) return "SCE_GLS_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2136997116) return "SCE_GLS_ERROR_POST_LIMIT_EXCEEDED";
    if (errorCode == -2136981241) return "SCE_GLS_ERROR_PROGRAM_CLOSED_N";
    if (errorCode == -2136997614) return "SCE_GLS_ERROR_QUEUE_IS_NOT_AVAILABLE";
    if (errorCode == -2136989438) return "SCE_GLS_ERROR_REJECTED_FROM_UMS_AGELOCK_U";
    if (errorCode == -2136989436) return "SCE_GLS_ERROR_REJECTED_FROM_UMS_AUTH_U";
    if (errorCode == -2136989440) return "SCE_GLS_ERROR_REJECTED_FROM_UMS_GEOLOCK_U";
    if (errorCode == -2136989437) return "SCE_GLS_ERROR_REJECTED_FROM_UMS_IPLOCK_U";
    if (errorCode == -2136989439) return "SCE_GLS_ERROR_REJECTED_FROM_UMS_PASSLOCK_U";
    if (errorCode == -2136989435) return "SCE_GLS_ERROR_REJECTED_FROM_UMS_U";
    if (errorCode == -2136993785) return "SCE_GLS_ERROR_RTMP_AMF_ERROR";
    if (errorCode == -2136981497) return "SCE_GLS_ERROR_RTMP_AMF_ERROR_N";
    if (errorCode == -2136985593) return "SCE_GLS_ERROR_RTMP_AMF_ERROR_T";
    if (errorCode == -2136989689) return "SCE_GLS_ERROR_RTMP_AMF_ERROR_U";
    if (errorCode == -2136993783) return "SCE_GLS_ERROR_RTMP_BUFFER_OVERFLOW";
    if (errorCode == -2136981495) return "SCE_GLS_ERROR_RTMP_BUFFER_OVERFLOW_N";
    if (errorCode == -2136985591) return "SCE_GLS_ERROR_RTMP_BUFFER_OVERFLOW_T";
    if (errorCode == -2136989687) return "SCE_GLS_ERROR_RTMP_BUFFER_OVERFLOW_U";
    if (errorCode == -2136993786) return "SCE_GLS_ERROR_RTMP_HANDSHAKE_FAILED";
    if (errorCode == -2136981498) return "SCE_GLS_ERROR_RTMP_HANDSHAKE_FAILED_N";
    if (errorCode == -2136985594) return "SCE_GLS_ERROR_RTMP_HANDSHAKE_FAILED_T";
    if (errorCode == -2136989690) return "SCE_GLS_ERROR_RTMP_HANDSHAKE_FAILED_U";
    if (errorCode == -2136993787) return "SCE_GLS_ERROR_RTMP_HANDSHAKE_TIMEOUT";
    if (errorCode == -2136981499) return "SCE_GLS_ERROR_RTMP_HANDSHAKE_TIMEOUT_N";
    if (errorCode == -2136985595) return "SCE_GLS_ERROR_RTMP_HANDSHAKE_TIMEOUT_T";
    if (errorCode == -2136989691) return "SCE_GLS_ERROR_RTMP_HANDSHAKE_TIMEOUT_U";
    if (errorCode == -2136993780) return "SCE_GLS_ERROR_RTMP_NET_STATUS_CONNECT_FAILED";
    if (errorCode == -2136981492) return "SCE_GLS_ERROR_RTMP_NET_STATUS_CONNECT_FAILED_N";
    if (errorCode == -2136985588) return "SCE_GLS_ERROR_RTMP_NET_STATUS_CONNECT_FAILED_T";
    if (errorCode == -2136989684) return "SCE_GLS_ERROR_RTMP_NET_STATUS_CONNECT_FAILED_U";
    if (errorCode == -2136993781) return "SCE_GLS_ERROR_RTMP_NET_STATUS_CONNECT_REJECTED";
    if (errorCode == -2136981493) return "SCE_GLS_ERROR_RTMP_NET_STATUS_CONNECT_REJECTED_N";
    if (errorCode == -2136985589) return "SCE_GLS_ERROR_RTMP_NET_STATUS_CONNECT_REJECTED_T";
    if (errorCode == -2136989685) return "SCE_GLS_ERROR_RTMP_NET_STATUS_CONNECT_REJECTED_U";
    if (errorCode == -2136993782) return "SCE_GLS_ERROR_RTMP_OTHER";
    if (errorCode == -2136981494) return "SCE_GLS_ERROR_RTMP_OTHER_N";
    if (errorCode == -2136985590) return "SCE_GLS_ERROR_RTMP_OTHER_T";
    if (errorCode == -2136989686) return "SCE_GLS_ERROR_RTMP_OTHER_U";
    if (errorCode == -2136993784) return "SCE_GLS_ERROR_RTMP_STATUS_ERROR";
    if (errorCode == -2136981496) return "SCE_GLS_ERROR_RTMP_STATUS_ERROR_N";
    if (errorCode == -2136985592) return "SCE_GLS_ERROR_RTMP_STATUS_ERROR_T";
    if (errorCode == -2136989688) return "SCE_GLS_ERROR_RTMP_STATUS_ERROR_U";
    if (errorCode == -2136981239) return "SCE_GLS_ERROR_SERVER_BUSY_N";
    if (errorCode == -2136981243) return "SCE_GLS_ERROR_SERVER_FAILURE_N";
    if (errorCode == -2136981238) return "SCE_GLS_ERROR_SERVER_MAINTENANCE_N";
    if (errorCode == -2136981242) return "SCE_GLS_ERROR_SERVER_OTHER_N";
    if (errorCode == -2136997115) return "SCE_GLS_ERROR_SNS_POST_FILED";
    if (errorCode == -2136997112) return "SCE_GLS_ERROR_SNS_POST_FILED_N";
    if (errorCode == -2136997113) return "SCE_GLS_ERROR_SNS_POST_FILED_T";
    if (errorCode == -2136997114) return "SCE_GLS_ERROR_SNS_POST_FILED_U";
    if (errorCode == -2136997111) return "SCE_GLS_ERROR_SNS_POST_IN_ANONYMOUSE_T";
    if (errorCode == -2136997619) return "SCE_GLS_ERROR_THREAD";
    if (errorCode == -2136997618) return "SCE_GLS_ERROR_TIME_OUT";
    if (errorCode == -2136997118) return "SCE_GLS_ERROR_TW_NOT_SIGNIN";
    if (errorCode == -2136997375) return "SCE_GLS_ERROR_UNKNOWN_BE_ERROR";
    if (errorCode == -2136997373) return "SCE_GLS_ERROR_UNKNOWN_BE_NOTIFY";
    if (errorCode == -2136997615) return "SCE_GLS_ERROR_WRITE";
    if (errorCode == -2137177599) return "SCE_GV_MP4_PARSER_ERROR_FATAL";
    if (errorCode == -2137177592) return "SCE_GV_MP4_PARSER_ERROR_FILE_NOT_OPEN";
    if (errorCode == -2137177593) return "SCE_GV_MP4_PARSER_ERROR_FS_OP";
    if (errorCode == -2137177594) return "SCE_GV_MP4_PARSER_ERROR_GEN_CANCELED";
    if (errorCode == -2137177590) return "SCE_GV_MP4_PARSER_ERROR_GEN_SKIPPED";
    if (errorCode == -2137177600) return "SCE_GV_MP4_PARSER_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2137177591) return "SCE_GV_MP4_PARSER_ERROR_INVALID_FILE";
    if (errorCode == -2137177589) return "SCE_GV_MP4_PARSER_ERROR_INVALID_OPERATION";
    if (errorCode == -2137177598) return "SCE_GV_MP4_PARSER_ERROR_NO_EXIST";
    if (errorCode == -2137177595) return "SCE_GV_MP4_PARSER_ERROR_NO_ITEMS";
    if (errorCode == -2137177596) return "SCE_GV_MP4_PARSER_ERROR_NO_MEMORY";
    if (errorCode == -2137177597) return "SCE_GV_MP4_PARSER_ERROR_NOT_EXIST_FILE";
    if (errorCode == -2134765568) return "SCE_HDD_FORMATTER_ERROR_GENERAL";
    if (errorCode == -2134765310) return "SCE_HDD_FORMATTER_ERROR_GEOM_BUSY";
    if (errorCode == -2134765309) return "SCE_HDD_FORMATTER_ERROR_GEOM_EXIST";
    if (errorCode == -2134765312) return "SCE_HDD_FORMATTER_ERROR_GEOM_INVAL";
    if (errorCode == -2134765311) return "SCE_HDD_FORMATTER_ERROR_GEOM_NOENT";
    if (errorCode == -2134765567) return "SCE_HDD_FORMATTER_ERROR_INVAL";
    if (errorCode == -2134765565) return "SCE_HDD_FORMATTER_ERROR_IO";
    if (errorCode == -2134765566) return "SCE_HDD_FORMATTER_ERROR_NOMEM";
    if (errorCode == -2134765564) return "SCE_HDD_FORMATTER_ERROR_NOT_SUPPORTED";
    if (errorCode == -2143088512) return "SCE_HTTP_ERROR_ABORTED";
    if (errorCode == -2143088538) return "SCE_HTTP_ERROR_AFTER_SEND";
    if (errorCode == -2143088608) return "SCE_HTTP_ERROR_ALREADY_INITED";
    if (errorCode == -2143088540) return "SCE_HTTP_ERROR_BAD_RESPONSE";
    if (errorCode == -2143088639) return "SCE_HTTP_ERROR_BEFORE_INIT";
    if (errorCode == -2143088539) return "SCE_HTTP_ERROR_BEFORE_SEND";
    if (errorCode == -2143088507) return "SCE_HTTP_ERROR_BROKEN";
    if (errorCode == -2143088607) return "SCE_HTTP_ERROR_BUSY";
    if (errorCode == -2143088526) return "SCE_HTTP_ERROR_CHUNK_ENC";
    if (errorCode == -2143088510) return "SCE_HTTP_ERROR_EAGAIN";
    if (errorCode == -2143088522) return "SCE_HTTP_ERROR_INSUFFICIENT_STACKSIZE";
    if (errorCode == -2143088384) return "SCE_HTTP_ERROR_INVALID_ID";
    if (errorCode == -2143080352) return "SCE_HTTP_ERROR_INVALID_URL";
    if (errorCode == -2143088130) return "SCE_HTTP_ERROR_INVALID_VALUE";
    if (errorCode == -2143088534) return "SCE_HTTP_ERROR_INVALID_VERSION";
    if (errorCode == -2143088541) return "SCE_HTTP_ERROR_NETWORK";
    if (errorCode == -2143088527) return "SCE_HTTP_ERROR_NO_CONTENT_LENGTH";
    if (errorCode == -2143088603) return "SCE_HTTP_ERROR_NOT_FOUND";
    if (errorCode == -2143088528) return "SCE_HTTP_ERROR_NOT_IN_COM";
    if (errorCode == -2143088606) return "SCE_HTTP_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2143088380) return "SCE_HTTP_ERROR_OUT_OF_SIZE";
    if (errorCode == -2143084448) return "SCE_HTTP_ERROR_PARSE_HTTP_INVALID_RESPONSE";
    if (errorCode == -2143084034) return "SCE_HTTP_ERROR_PARSE_HTTP_INVALID_VALUE";
    if (errorCode == -2143084507) return "SCE_HTTP_ERROR_PARSE_HTTP_NOT_FOUND";
    if (errorCode == -2143088508) return "SCE_HTTP_ERROR_PROXY";
    if (errorCode == -2143088529) return "SCE_HTTP_ERROR_READ_BY_HEAD_METHOD";
    if (errorCode == -2143068155) return "SCE_HTTP_ERROR_RESOLVER_EFORMAT";
    if (errorCode == -2143068158) return "SCE_HTTP_ERROR_RESOLVER_ENODNS";
    if (errorCode == -2143068153) return "SCE_HTTP_ERROR_RESOLVER_ENOHOST";
    if (errorCode == -2143068150) return "SCE_HTTP_ERROR_RESOLVER_ENORECORD";
    if (errorCode == -2143068156) return "SCE_HTTP_ERROR_RESOLVER_ENOSUPPORT";
    if (errorCode == -2143068152) return "SCE_HTTP_ERROR_RESOLVER_ENOTIMPLEMENTED";
    if (errorCode == -2143068159) return "SCE_HTTP_ERROR_RESOLVER_EPACKET";
    if (errorCode == -2143068154) return "SCE_HTTP_ERROR_RESOLVER_ESERVERFAILURE";
    if (errorCode == -2143068151) return "SCE_HTTP_ERROR_RESOLVER_ESERVERREFUSED";
    if (errorCode == -2143068157) return "SCE_HTTP_ERROR_RESOLVER_ETIMEDOUT";
    if (errorCode == -2143088523) return "SCE_HTTP_ERROR_SSL";
    if (errorCode == -2143088536) return "SCE_HTTP_ERROR_TIMEOUT";
    if (errorCode == -2143088525) return "SCE_HTTP_ERROR_TOO_LARGE_RESPONSE_HEADER";
    if (errorCode == -2143088511) return "SCE_HTTP_ERROR_UNKNOWN";
    if (errorCode == -2143088535) return "SCE_HTTP_ERROR_UNKNOWN_AUTH_TYPE";
    if (errorCode == -2143088533) return "SCE_HTTP_ERROR_UNKNOWN_METHOD";
    if (errorCode == -2143088543) return "SCE_HTTP_ERROR_UNKNOWN_SCHEME";
    if (errorCode == -2143072160) return "SCE_HTTPS_ERROR_CERT";
    if (errorCode == -2143072159) return "SCE_HTTPS_ERROR_HANDSHAKE";
    if (errorCode == -2143072157) return "SCE_HTTPS_ERROR_INTERNAL";
    if (errorCode == -2143072158) return "SCE_HTTPS_ERROR_IO";
    if (errorCode == -2143072149) return "SCE_HTTPS_ERROR_PROHIBITED";
    if (errorCode == -2143072156) return "SCE_HTTPS_ERROR_PROXY";
    if (errorCode == -2135162623) return "SCE_IME_DIALOG_ERROR_INVALID_TITLE";
    if (errorCode == -2135162618) return "SCE_IME_DIALOG_ERROR_NOT_FINISHED";
    if (errorCode == -2135162617) return "SCE_IME_DIALOG_ERROR_NOT_IN_USE";
    if (errorCode == -2135162619) return "SCE_IME_DIALOG_ERROR_NOT_RUNNING";
    if (errorCode == -2135162879) return "SCE_IME_ERROR_BUSY";
    if (errorCode == -2135162876) return "SCE_IME_ERROR_CONNECTION_FAILED";
    if (errorCode == -2135162870) return "SCE_IME_ERROR_DEVICE_IN_USE";
    if (errorCode == -2135162873) return "SCE_IME_ERROR_EVENT_OVERFLOW";
    if (errorCode == -2135162871) return "SCE_IME_ERROR_IME_SUSPENDING";
    if (errorCode == -2135162625) return "SCE_IME_ERROR_INTERNAL";
    if (errorCode == -2135162831) return "SCE_IME_ERROR_INVALID_ADDRESS";
    if (errorCode == -2135162847) return "SCE_IME_ERROR_INVALID_ARG";
    if (errorCode == -2135162861) return "SCE_IME_ERROR_INVALID_ENTER_LABEL";
    if (errorCode == -2135162852) return "SCE_IME_ERROR_INVALID_EXTENDED";
    if (errorCode == -2135162846) return "SCE_IME_ERROR_INVALID_HANDLER";
    if (errorCode == -2135162854) return "SCE_IME_ERROR_INVALID_HORIZONTALIGNMENT";
    if (errorCode == -2135162860) return "SCE_IME_ERROR_INVALID_INPUT_METHOD";
    if (errorCode == -2135162857) return "SCE_IME_ERROR_INVALID_INPUT_TEXT_BUFFER";
    if (errorCode == -2135162851) return "SCE_IME_ERROR_INVALID_KEYBOARD_TYPE";
    if (errorCode == -2135162858) return "SCE_IME_ERROR_INVALID_MAX_TEXT_LENGTH";
    if (errorCode == -2135162844) return "SCE_IME_ERROR_INVALID_MODE";
    if (errorCode == -2135162859) return "SCE_IME_ERROR_INVALID_OPTION";
    if (errorCode == -2135162832) return "SCE_IME_ERROR_INVALID_PARAM";
    if (errorCode == -2135162856) return "SCE_IME_ERROR_INVALID_POSX";
    if (errorCode == -2135162855) return "SCE_IME_ERROR_INVALID_POSY";
    if (errorCode == -2135162830) return "SCE_IME_ERROR_INVALID_RESERVED";
    if (errorCode == -2135162862) return "SCE_IME_ERROR_INVALID_SUPPORTED_LANGUAGES";
    if (errorCode == -2135162874) return "SCE_IME_ERROR_INVALID_TEXT";
    if (errorCode == -2135162829) return "SCE_IME_ERROR_INVALID_TIMING";
    if (errorCode == -2135162863) return "SCE_IME_ERROR_INVALID_TYPE";
    if (errorCode == -2135162864) return "SCE_IME_ERROR_INVALID_USER_ID";
    if (errorCode == -2135162853) return "SCE_IME_ERROR_INVALID_VERTICALALIGNMENT";
    if (errorCode == -2135162848) return "SCE_IME_ERROR_INVALID_WORK";
    if (errorCode == -2135162877) return "SCE_IME_ERROR_NO_MEMORY";
    if (errorCode == -2135162845) return "SCE_IME_ERROR_NO_RESOURCE_ID";
    if (errorCode == -2135162872) return "SCE_IME_ERROR_NOT_ACTIVE";
    if (errorCode == -2135162878) return "SCE_IME_ERROR_NOT_OPENED";
    if (errorCode == -2135162875) return "SCE_IME_ERROR_TOO_MANY_REQUESTS";
    if (errorCode == -2138832888) return "SCE_INIFILE_ERROR_BUFFER_TOO_SMALL";
    if (errorCode == -2138832891) return "SCE_INIFILE_ERROR_EMPTY_FILE";
    if (errorCode == -2138832887) return "SCE_INIFILE_ERROR_FILE_NOT_FOUND";
    if (errorCode == -2138832876) return "SCE_INIFILE_ERROR_FILE_NOT_OPENED";
    if (errorCode == -2138832884) return "SCE_INIFILE_ERROR_FILE_READ_FAILED";
    if (errorCode == -2138832886) return "SCE_INIFILE_ERROR_FILE_READ_OPEN_FAILED";
    if (errorCode == -2138832883) return "SCE_INIFILE_ERROR_FILE_WRITE_FAILED";
    if (errorCode == -2138832885) return "SCE_INIFILE_ERROR_FILE_WRITE_OPEN_FAILED";
    if (errorCode == -2138832896) return "SCE_INIFILE_ERROR_GENERIC";
    if (errorCode == -2138832893) return "SCE_INIFILE_ERROR_INITIALIZE_FAILED";
    if (errorCode == -2138832877) return "SCE_INIFILE_ERROR_INTERNAL_ERROR";
    if (errorCode == -2138832890) return "SCE_INIFILE_ERROR_INVALID_ARGUMEN";
    if (errorCode == -2138832892) return "SCE_INIFILE_ERROR_INVALID_FILE";
    if (errorCode == -2138832882) return "SCE_INIFILE_ERROR_INVALID_KEY";
    if (errorCode == -2138832889) return "SCE_INIFILE_ERROR_INVALID_OPERATION";
    if (errorCode == -2138832881) return "SCE_INIFILE_ERROR_INVALID_START_POSITION";
    if (errorCode == -2138832880) return "SCE_INIFILE_ERROR_KEY_NOT_FOUND";
    if (errorCode == -2138832895) return "SCE_INIFILE_ERROR_NO_MEMORY";
    if (errorCode == -2138832878) return "SCE_INIFILE_ERROR_NOT_IMPLEMENTED";
    if (errorCode == -2138832894) return "SCE_INIFILE_ERROR_NOT_INITIALIZED";
    if (errorCode == -2138832879) return "SCE_INIFILE_ERROR_VALUE_EXCEEDS_BUFFER_LENGTH";
    if (errorCode == -2130051071) return "SCE_INVITATION_DIALOG_ERROR_BLOCKED_ALL_PLAYERS";
    if (errorCode == -2131034106) return "SCE_JSEX_ERROR_BUSY";
    if (errorCode == -2131034107) return "SCE_JSEX_ERROR_DECRIPT_FAIL";
    if (errorCode == -2131034109) return "SCE_JSEX_ERROR_INVALID_JSON_STRING";
    if (errorCode == -2131034111) return "SCE_JSEX_ERROR_INVALID_PARAM";
    if (errorCode == -2131034108) return "SCE_JSEX_ERROR_INVALID_SCENE";
    if (errorCode == -2131034110) return "SCE_JSEX_ERROR_PAGE_NOT_FOUND";
    if (errorCode == -2137784296) return "SCE_LNC_UTIL_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2137784308) return "SCE_LNC_UTIL_ERROR_ALREADY_RUNNING";
    if (errorCode == -2137784304) return "SCE_LNC_UTIL_ERROR_ALREADY_RUNNING_KILL_NEEDED";
    if (errorCode == -2137784303) return "SCE_LNC_UTIL_ERROR_ALREADY_RUNNING_SUSPEND_NEEDED";
    if (errorCode == -2137784290) return "SCE_LNC_UTIL_ERROR_APP_ALREADY_RESUMED";
    if (errorCode == -2137784291) return "SCE_LNC_UTIL_ERROR_APP_ALREADY_SUSPENDED";
    if (errorCode == -2137784299) return "SCE_LNC_UTIL_ERROR_APP_NOT_IN_BACKGROUND";
    if (errorCode == -2137784312) return "SCE_LNC_UTIL_ERROR_APPHOME_EBOOTBIN_NOT_FOUND";
    if (errorCode == -2137784311) return "SCE_LNC_UTIL_ERROR_APPHOME_PARAMSFO_NOT_FOUND";
    if (errorCode == -2137784302) return "SCE_LNC_UTIL_ERROR_CANNOT_RESUME_INITIAL_USER_NEEDED";
    if (errorCode == -2137784309) return "SCE_LNC_UTIL_ERROR_DEVKIT_EXPIRED";
    if (errorCode == -2137784294) return "SCE_LNC_UTIL_ERROR_IN_LOGOUT_PROCESSING";
    if (errorCode == -2137784293) return "SCE_LNC_UTIL_ERROR_IN_SPECIAL_RESUME";
    if (errorCode == -2137784315) return "SCE_LNC_UTIL_ERROR_INVALID_PARAM";
    if (errorCode == -2137784295) return "SCE_LNC_UTIL_ERROR_INVALID_STATE";
    if (errorCode == -2137784292) return "SCE_LNC_UTIL_ERROR_INVALID_TITLE_ID";
    if (errorCode == -2137784307) return "SCE_LNC_UTIL_ERROR_LAUNCH_DISABLED_BY_MEMORY_MODE";
    if (errorCode == -2137784316) return "SCE_LNC_UTIL_ERROR_NO_APP_INFO";
    if (errorCode == -2137784310) return "SCE_LNC_UTIL_ERROR_NO_LOGIN_USER";
    if (errorCode == -2137784318) return "SCE_LNC_UTIL_ERROR_NO_SESSION_MEMORY";
    if (errorCode == -2137784300) return "SCE_LNC_UTIL_ERROR_NO_SFOKEY_IN_APP_INFO";
    if (errorCode == -2137784306) return "SCE_LNC_UTIL_ERROR_NO_SHELL_UI";
    if (errorCode == -2137784305) return "SCE_LNC_UTIL_ERROR_NOT_ALLOWED";
    if (errorCode == -2137784319) return "SCE_LNC_UTIL_ERROR_NOT_INITIALIZED";
    if (errorCode == -2137784301) return "SCE_LNC_UTIL_ERROR_OPTICAL_DISC_DRIVE";
    if (errorCode == -2137784314) return "SCE_LNC_UTIL_ERROR_SETUP_FS_SANDBOX";
    if (errorCode == -2137784297) return "SCE_LNC_UTIL_ERROR_SUSPEND_BLOCK_TIMEOUT";
    if (errorCode == -2137784298) return "SCE_LNC_UTIL_ERROR_VIDEOOUT_NOT_SUPPORTED";
    if (errorCode == -2137784287) return "SCE_LNC_UTIL_ERROR_WAITING_READY_FOR_SUSPEND_TIMEOUT";
    if (errorCode == -2135556085) return "SCE_LOGIN_MGR_ERROR_ALL_USER_LOGINED";
    if (errorCode == -2135556094) return "SCE_LOGIN_MGR_ERROR_ALLREADY_INITIALIZED";
    if (errorCode == -2135556077) return "SCE_LOGIN_MGR_ERROR_CAN_NOT_USE_PSN_ON_IDU";
    if (errorCode == -2135523324) return "SCE_LOGIN_MGR_ERROR_CERTIFICATE_VERIFICATION_FAILED";
    if (errorCode == -2135556084) return "SCE_LOGIN_MGR_ERROR_CREATE_USER_FAILED";
    if (errorCode == -2135556090) return "SCE_LOGIN_MGR_ERROR_EVENTFLAG_ALLREADY_INITIALIZED";
    if (errorCode == -2135556089) return "SCE_LOGIN_MGR_ERROR_EVENTFLAG_NOT_INITIALIZED";
    if (errorCode == -2135556081) return "SCE_LOGIN_MGR_ERROR_INTERNAL";
    if (errorCode == -2135556093) return "SCE_LOGIN_MGR_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2135556083) return "SCE_LOGIN_MGR_ERROR_LOGIN_PROCESS_RUNNING";
    if (errorCode == -2135556076) return "SCE_LOGIN_MGR_ERROR_LOGOUT_BY_MULTIPLE_SIGNIN";
    if (errorCode == -2135556075) return "SCE_LOGIN_MGR_ERROR_LOGOUT_BY_TROPHY_DATA_INSTALL_FAILURE";
    if (errorCode == -2135556088) return "SCE_LOGIN_MGR_ERROR_MUTEX_NOT_INITIALIZED";
    if (errorCode == -2135523325) return "SCE_LOGIN_MGR_ERROR_NAVIGATION_CONFIRM_FIALED";
    if (errorCode == -2135556079) return "SCE_LOGIN_MGR_ERROR_NETWORK_DISABLED";
    if (errorCode == -2135556082) return "SCE_LOGIN_MGR_ERROR_NO_DEVICE_ID";
    if (errorCode == -2135556087) return "SCE_LOGIN_MGR_ERROR_NO_DEVICE_INFO";
    if (errorCode == -2135556092) return "SCE_LOGIN_MGR_ERROR_NO_MEMORY";
    if (errorCode == -2135556095) return "SCE_LOGIN_MGR_ERROR_NOT_INITIALIZED";
    if (errorCode == -2135556086) return "SCE_LOGIN_MGR_ERROR_OVER_DEVICE_INFO";
    if (errorCode == -2135523323) return "SCE_LOGIN_MGR_ERROR_REGCAM_SERVER_ERROR";
    if (errorCode == -2135556078) return "SCE_LOGIN_MGR_ERROR_SYSTEM_UPDATE_CHECK_FAILED";
    if (errorCode == -2135556091) return "SCE_LOGIN_MGR_ERROR_THREAD_ALLREADY_STARTED";
    if (errorCode == -2135556080) return "SCE_LOGIN_MGR_ERROR_USER_ALREADY_EXISTS";
    if (errorCode == -2135523326) return "SCE_LOGIN_MGR_ERROR_WEBCORE_CRASH";
    if (errorCode == -2135523327) return "SCE_LOGIN_MGR_ERROR_WEBCORE_UNRESPONSIVE";
    if (errorCode == -2135515134) return "SCE_LOGIN_MGR_UTILITY_ERROR_ALLREADY_INITIALIZED";
    if (errorCode == -2135515128) return "SCE_LOGIN_MGR_UTILITY_ERROR_INTERNAL";
    if (errorCode == -2135515133) return "SCE_LOGIN_MGR_UTILITY_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2135515131) return "SCE_LOGIN_MGR_UTILITY_ERROR_INVALID_USER";
    if (errorCode == -2135515129) return "SCE_LOGIN_MGR_UTILITY_ERROR_LOGOUT_BUSY";
    if (errorCode == -2135515132) return "SCE_LOGIN_MGR_UTILITY_ERROR_NO_MEMORY";
    if (errorCode == -2135515135) return "SCE_LOGIN_MGR_UTILITY_ERROR_NOT_INITIALIZED";
    if (errorCode == -2135515130) return "SCE_LOGIN_MGR_UTILITY_ERROR_USER_NOT_LOGIN";
    if (errorCode == -2131427296) return "SCE_LSDB_ERROR_ACTIVITY";
    if (errorCode == -2131427294) return "SCE_LSDB_ERROR_ACTIVITY_ALREADY_CANCELED";
    if (errorCode == -2131427289) return "SCE_LSDB_ERROR_ACTIVITY_GET_INFO";
    if (errorCode == -2131427291) return "SCE_LSDB_ERROR_ACTIVITY_GET_NETWORK_TIME";
    if (errorCode == -2131427290) return "SCE_LSDB_ERROR_ACTIVITY_INVALID_MESSAGE";
    if (errorCode == -2131427295) return "SCE_LSDB_ERROR_ACTIVITY_INVALID_PARAM";
    if (errorCode == -2131427293) return "SCE_LSDB_ERROR_ACTIVITY_NOT_INITIALIZED";
    if (errorCode == -2131427288) return "SCE_LSDB_ERROR_ACTIVITY_STATUS_DESTROYED";
    if (errorCode == -2131427292) return "SCE_LSDB_ERROR_ACTIVITY_SYNC_TIMEOUT";
    if (errorCode == -2131427310) return "SCE_LSDB_ERROR_BUSY";
    if (errorCode == -2131427258) return "SCE_LSDB_ERROR_DB_APPBROWSE_SCHEMA";
    if (errorCode == -2131427259) return "SCE_LSDB_ERROR_DB_APPINFO_SCHEMA";
    if (errorCode == -2131427263) return "SCE_LSDB_ERROR_DB_CLEARED";
    if (errorCode == -2131427231) return "SCE_LSDB_ERROR_DB_CORRUPT";
    if (errorCode == -2131427260) return "SCE_LSDB_ERROR_DB_EMPTY";
    if (errorCode == -2131427264) return "SCE_LSDB_ERROR_DB_LOCALE";
    if (errorCode == -2131427229) return "SCE_LSDB_ERROR_DB_LOCALE_AND_VERSION";
    if (errorCode == -2131427228) return "SCE_LSDB_ERROR_DB_NOT_ENABLED";
    if (errorCode == -2131427227) return "SCE_LSDB_ERROR_DB_RECOVERING";
    if (errorCode == -2131427232) return "SCE_LSDB_ERROR_DB_SAFEMODE";
    if (errorCode == -2131427262) return "SCE_LSDB_ERROR_DB_SCHEMA";
    if (errorCode == -2131427230) return "SCE_LSDB_ERROR_DB_SCHEMA_AND_VERSION";
    if (errorCode == -2131427261) return "SCE_LSDB_ERROR_DB_VERSION";
    if (errorCode == -2131427324) return "SCE_LSDB_ERROR_EXIST";
    if (errorCode == -2131427328) return "SCE_LSDB_ERROR_FATAL";
    if (errorCode == -2131427327) return "SCE_LSDB_ERROR_INVALID_ARG";
    if (errorCode == -2131427317) return "SCE_LSDB_ERROR_INVALID_INDEX";
    if (errorCode == -2131427311) return "SCE_LSDB_ERROR_INVALID_KEY";
    if (errorCode == -2131427316) return "SCE_LSDB_ERROR_INVALID_LAYOUT";
    if (errorCode == -2131427321) return "SCE_LSDB_ERROR_INVALID_OP";
    if (errorCode == -2131427322) return "SCE_LSDB_ERROR_LIMIT";
    if (errorCode == -2131427313) return "SCE_LSDB_ERROR_NO_COMMENT_ID";
    if (errorCode == -2131427320) return "SCE_LSDB_ERROR_NO_EVENT_ID";
    if (errorCode == -2131427326) return "SCE_LSDB_ERROR_NO_MEMORY";
    if (errorCode == -2131427314) return "SCE_LSDB_ERROR_NO_ONLINE_ID";
    if (errorCode == -2131427315) return "SCE_LSDB_ERROR_NO_ROW_ID";
    if (errorCode == -2131427312) return "SCE_LSDB_ERROR_NO_TIME";
    if (errorCode == -2131427319) return "SCE_LSDB_ERROR_NO_TITLE_ID";
    if (errorCode == -2131427318) return "SCE_LSDB_ERROR_NO_TYPE";
    if (errorCode == -2131427323) return "SCE_LSDB_ERROR_NOT_FOUND";
    if (errorCode == -2131427309) return "SCE_LSDB_ERROR_NOT_SUPPORTED";
    if (errorCode == -2131427325) return "SCE_LSDB_ERROR_STATE";
    if (errorCode == -2137178109) return "SCE_MDRW_ERROR_AGAIN";
    if (errorCode == -2137178094) return "SCE_MDRW_ERROR_BROKEN_FILE";
    if (errorCode == -2137178108) return "SCE_MDRW_ERROR_BUSY";
    if (errorCode == -2137178110) return "SCE_MDRW_ERROR_INVAL";
    if (errorCode == -2137178106) return "SCE_MDRW_ERROR_NO_ENTRY";
    if (errorCode == -2137178111) return "SCE_MDRW_ERROR_NOMEM";
    if (errorCode == -2137178107) return "SCE_MDRW_ERROR_NOT_SUPPORT";
    if (errorCode == -2137178095) return "SCE_MDRW_ERROR_WRONG_STATUS";
    if (errorCode == -2132410346) return "SCE_MESSAGES_ATTACHMENT_DB_ERROR_FATAL";
    if (errorCode == -2132475901) return "SCE_MESSAGES_BG_ERROR_CACHE_ONLY_SUCCESS";
    if (errorCode == -2132475902) return "SCE_MESSAGES_BG_ERROR_CANCELED";
    if (errorCode == -2132475884) return "SCE_MESSAGES_BG_ERROR_FATAL_DB_ERROR";
    if (errorCode == -2132475881) return "SCE_MESSAGES_BG_ERROR_FILE_IO_ERROR";
    if (errorCode == -2132475886) return "SCE_MESSAGES_BG_ERROR_FILE_NOT_FOUND";
    if (errorCode == -2132475888) return "SCE_MESSAGES_BG_ERROR_INTERNAL";
    if (errorCode == -2132475887) return "SCE_MESSAGES_BG_ERROR_INVALID_PARAMETER";
    if (errorCode == -2132475885) return "SCE_MESSAGES_BG_ERROR_MEMORY_ERROR";
    if (errorCode == -2132475632) return "SCE_MESSAGES_BG_ERROR_NETWORK";
    if (errorCode == -2132475629) return "SCE_MESSAGES_BG_ERROR_NETWORK_BAD_REQUEST";
    if (errorCode == -2132475624) return "SCE_MESSAGES_BG_ERROR_NETWORK_BLOCKING_USER";
    if (errorCode == -2132475626) return "SCE_MESSAGES_BG_ERROR_NETWORK_FORBIDDEN";
    if (errorCode == -2132475627) return "SCE_MESSAGES_BG_ERROR_NETWORK_ILLEGAL_RESPONSE";
    if (errorCode == -2132475625) return "SCE_MESSAGES_BG_ERROR_NETWORK_MAINTENANCE";
    if (errorCode == -2132475623) return "SCE_MESSAGES_BG_ERROR_NETWORK_REACH_THE_LIMIT";
    if (errorCode == -2132475631) return "SCE_MESSAGES_BG_ERROR_NETWORK_REQUEST_TIMEOUT";
    if (errorCode == -2132475628) return "SCE_MESSAGES_BG_ERROR_NETWORK_RESPONSE_TIMEOUT";
    if (errorCode == -2132475630) return "SCE_MESSAGES_BG_ERROR_NETWORK_SERVER_INTERNAL_ERROR";
    if (errorCode == -2132475882) return "SCE_MESSAGES_BG_ERROR_NOT_INITIALIZED";
    if (errorCode == -2132475883) return "SCE_MESSAGES_BG_ERROR_NOTSIGNIN";
    if (errorCode == -2132410369) return "SCE_MESSAGES_BG_ERROR_OHTERS_MODULE";
    if (errorCode == -2132475903) return "SCE_MESSAGES_BG_ERROR_PROGRESS";
    if (errorCode == -2132475880) return "SCE_MESSAGES_BG_ERROR_REGISTORY";
    if (errorCode == -2130837501) return "SCE_MESSAGES_CORE_ERROR_ALREADY_EXIST";
    if (errorCode == -2130837503) return "SCE_MESSAGES_CORE_ERROR_INTERNAL";
    if (errorCode == -2130837502) return "SCE_MESSAGES_CORE_ERROR_MEMORY_ERROR";
    if (errorCode == -2132410348) return "SCE_MESSAGES_DB_ERROR_FATAL";
    if (errorCode == -2132410351) return "SCE_MESSAGES_DB_ERROR_FILE_NOT_FOUND";
    if (errorCode == -2132410349) return "SCE_MESSAGES_DB_ERROR_INTERNAL";
    if (errorCode == -2132410350) return "SCE_MESSAGES_DB_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2132410352) return "SCE_MESSAGES_DB_ERROR_NOT_INITIALIZED";
    if (errorCode == -2132410345) return "SCE_MESSAGES_DB_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2131361277) return "SCE_MESSAGES_ERROR_ADD_PLAYER";
    if (errorCode == -2131361269) return "SCE_MESSAGES_ERROR_ALL_BLOCKED";
    if (errorCode == -2131361278) return "SCE_MESSAGES_ERROR_CHANGE_TITLE";
    if (errorCode == -2131361272) return "SCE_MESSAGES_ERROR_DB_CORRUPTED";
    if (errorCode == -2131361274) return "SCE_MESSAGES_ERROR_DELETE_MESSAGE";
    if (errorCode == -2131357436) return "SCE_MESSAGES_ERROR_FILE_CORRUPTED";
    if (errorCode == -2131357439) return "SCE_MESSAGES_ERROR_FILE_IO";
    if (errorCode == -2131357438) return "SCE_MESSAGES_ERROR_FILE_SIZE";
    if (errorCode == -2131357437) return "SCE_MESSAGES_ERROR_FILE_UNSUPPORT";
    if (errorCode == -2131361535) return "SCE_MESSAGES_ERROR_GENERAL";
    if (errorCode == -2131324927) return "SCE_MESSAGES_ERROR_INITIALIZE";
    if (errorCode == -2131324925) return "SCE_MESSAGES_ERROR_INVALID_PARAM";
    if (errorCode == -2131361273) return "SCE_MESSAGES_ERROR_MAX_MEMBERS";
    if (errorCode == -2131357183) return "SCE_MESSAGES_ERROR_NETWORK";
    if (errorCode == -2131361276) return "SCE_MESSAGES_ERROR_NO_MICROPHONE";
    if (errorCode == -2131324926) return "SCE_MESSAGES_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2131361271) return "SCE_MESSAGES_ERROR_PSCAMERA_MUTE";
    if (errorCode == -2131357182) return "SCE_MESSAGES_ERROR_PSN";
    if (errorCode == -2131361275) return "SCE_MESSAGES_ERROR_RECORD_VOICE";
    if (errorCode == -2131361279) return "SCE_MESSAGES_ERROR_SEND_MESSAGE";
    if (errorCode == -2131361270) return "SCE_MESSAGES_ERROR_STORE_LINK";
    if (errorCode == -2132410347) return "SCE_MESSAGES_MESSAGES_DB_ERROR_FATAL";
    if (errorCode == -2137178069) return "SCE_METAGEN_ERROR_ADD_PROMOTER";
    if (errorCode == -2137178091) return "SCE_METAGEN_ERROR_ALREADY_EXIST";
    if (errorCode == -2137178090) return "SCE_METAGEN_ERROR_CANNOT_ACCESS_DB";
    if (errorCode == -2137178057) return "SCE_METAGEN_ERROR_CANNOT_EXPLICIT_TRANSACTION";
    if (errorCode == -2137178074) return "SCE_METAGEN_ERROR_CANNOT_USE_TRANSACTION";
    if (errorCode == -2137178092) return "SCE_METAGEN_ERROR_FATAL_ERROR";
    if (errorCode == -2137178060) return "SCE_METAGEN_ERROR_FILE_NOT_OPEN";
    if (errorCode == -2137178059) return "SCE_METAGEN_ERROR_FILE_OPEN";
    if (errorCode == -2137178061) return "SCE_METAGEN_ERROR_FS_OP";
    if (errorCode == -2137178050) return "SCE_METAGEN_ERROR_FULL_TARGET_AREA";
    if (errorCode == -2137178062) return "SCE_METAGEN_ERROR_GEN_CANCELED";
    if (errorCode == -2137178052) return "SCE_METAGEN_ERROR_GEN_SKIPPED";
    if (errorCode == -2137178067) return "SCE_METAGEN_ERROR_GET_DIR_ENT";
    if (errorCode == -2137178093) return "SCE_METAGEN_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2137178089) return "SCE_METAGEN_ERROR_INVALID_DB_RESOURCE";
    if (errorCode == -2137178056) return "SCE_METAGEN_ERROR_INVALID_FILE";
    if (errorCode == -2137178051) return "SCE_METAGEN_ERROR_INVALID_FILE_NAME";
    if (errorCode == -2137178088) return "SCE_METAGEN_ERROR_INVALID_HANDLE";
    if (errorCode == -2137178066) return "SCE_METAGEN_ERROR_INVALID_PROMOTE_INFORMATION";
    if (errorCode == -2137178065) return "SCE_METAGEN_ERROR_LONG_NAME";
    if (errorCode == -2137178073) return "SCE_METAGEN_ERROR_NO_COMMIT_OPERATION";
    if (errorCode == -2137178055) return "SCE_METAGEN_ERROR_NO_CORRESPONDED_PROMOTER";
    if (errorCode == -2137178087) return "SCE_METAGEN_ERROR_NO_EXIST";
    if (errorCode == -2137178070) return "SCE_METAGEN_ERROR_NO_HANDLER";
    if (errorCode == -2137178063) return "SCE_METAGEN_ERROR_NO_ITEMS";
    if (errorCode == -2137178071) return "SCE_METAGEN_ERROR_NO_MEMORY";
    if (errorCode == -2137178054) return "SCE_METAGEN_ERROR_NO_PRX";
    if (errorCode == -2137178086) return "SCE_METAGEN_ERROR_NOT_DB_OPENED";
    if (errorCode == -2137178085) return "SCE_METAGEN_ERROR_NOT_EXIST_DB_FIELD";
    if (errorCode == -2137178084) return "SCE_METAGEN_ERROR_NOT_EXIST_DIRECTORY";
    if (errorCode == -2137178083) return "SCE_METAGEN_ERROR_NOT_EXIST_FIELD";
    if (errorCode == -2137178082) return "SCE_METAGEN_ERROR_NOT_EXIST_FILE";
    if (errorCode == -2137178081) return "SCE_METAGEN_ERROR_NOT_EXIST_GROUP";
    if (errorCode == -2137178080) return "SCE_METAGEN_ERROR_NOT_EXIST_PROFILE";
    if (errorCode == -2137178064) return "SCE_METAGEN_ERROR_NOW_PROCESSING";
    if (errorCode == -2137178079) return "SCE_METAGEN_ERROR_NOW_PROMOTING";
    if (errorCode == -2137178072) return "SCE_METAGEN_ERROR_OVER_MAX_HANDLER";
    if (errorCode == -2137178053) return "SCE_METAGEN_ERROR_REACH_DEPTH_LIMIT";
    if (errorCode == -2137178076) return "SCE_METAGEN_ERROR_REJECTED_ROLLBACK_OPERATION";
    if (errorCode == -2137178058) return "SCE_METAGEN_ERROR_SQL_NO_COND";
    if (errorCode == -2137178068) return "SCE_METAGEN_ERROR_SUBTRACT_PROMOTER";
    if (errorCode == -2137178075) return "SCE_METAGEN_ERROR_TOO_LARGE_TRANSACTION_VALUE";
    if (errorCode == -2130902911) return "SCE_MUSICCORE_CORE_ERROR_FATAL";
    if (errorCode == -2130902905) return "SCE_MUSICCORE_CORE_ERROR_HDCP_DISABLED";
    if (errorCode == -2130902908) return "SCE_MUSICCORE_CORE_ERROR_ILLEGAL_SIZE";
    if (errorCode == -2130902906) return "SCE_MUSICCORE_CORE_ERROR_INVALID_CALL";
    if (errorCode == -2130902910) return "SCE_MUSICCORE_CORE_ERROR_INVALID_PARAM";
    if (errorCode == -2130902909) return "SCE_MUSICCORE_CORE_ERROR_NO_MEMORY";
    if (errorCode == -2130902907) return "SCE_MUSICCORE_CORE_ERROR_NOT_FOUND";
    if (errorCode == -2130903034) return "SCE_MUSICCORE_SERVER_ERROR_BUSY";
    if (errorCode == -2130903033) return "SCE_MUSICCORE_SERVER_ERROR_CORE_FUNCTION_NOT_SET";
    if (errorCode == -2130903029) return "SCE_MUSICCORE_SERVER_ERROR_EVENT_RESPONSE_QUEUE_EMPTY";
    if (errorCode == -2130903032) return "SCE_MUSICCORE_SERVER_ERROR_INTERNAL";
    if (errorCode == -2130903031) return "SCE_MUSICCORE_SERVER_ERROR_INVALID_CALL";
    if (errorCode == -2130903039) return "SCE_MUSICCORE_SERVER_ERROR_INVALID_PARAM";
    if (errorCode == -2130903035) return "SCE_MUSICCORE_SERVER_ERROR_MUSIC_CORE_NOT_CONNECTED";
    if (errorCode == -2130903037) return "SCE_MUSICCORE_SERVER_ERROR_MUSIC_CORE_SERVER_NOT_LAUNCHED";
    if (errorCode == -2130903036) return "SCE_MUSICCORE_SERVER_ERROR_MUSIC_CORE_UNAVAILABLE";
    if (errorCode == -2130903038) return "SCE_MUSICCORE_SERVER_ERROR_NO_MEMORY";
    if (errorCode == -2130903030) return "SCE_MUSICCORE_SERVER_ERROR_NOT_SUPPORTED";
    if (errorCode == -2143214333) return "SCE_NAT_TYPE_ERROR_BUSY";
    if (errorCode == -2143214331) return "SCE_NAT_TYPE_ERROR_HANDLER_MAX";
    if (errorCode == -2143214329) return "SCE_NAT_TYPE_ERROR_ID_NOT_FOUND";
    if (errorCode == -2143214332) return "SCE_NAT_TYPE_ERROR_INVALID_ARG";
    if (errorCode == -2143214330) return "SCE_NAT_TYPE_ERROR_INVALID_ID";
    if (errorCode == -2143214335) return "SCE_NAT_TYPE_ERROR_NOT_INITIALIZED";
    if (errorCode == -2143214334) return "SCE_NAT_TYPE_ERROR_NOT_TERMINATED";
    if (errorCode == -2143215071) return "SCE_NET_AOSS_ERROR_BUSY";
    if (errorCode == -2143215068) return "SCE_NET_AOSS_ERROR_INVALID_ALGO";
    if (errorCode == -2143215067) return "SCE_NET_AOSS_ERROR_INVALID_IP";
    if (errorCode == -2143215098) return "SCE_NET_AOSS_ERROR_LIB_INVALID_CHAR";
    if (errorCode == -2143215102) return "SCE_NET_AOSS_ERROR_LIB_MULTI_AP";
    if (errorCode == -2143215097) return "SCE_NET_AOSS_ERROR_LIB_MULTI_STA";
    if (errorCode == -2143215103) return "SCE_NET_AOSS_ERROR_LIB_NO_AP";
    if (errorCode == -2143215101) return "SCE_NET_AOSS_ERROR_LIB_NO_PACKET_INIT";
    if (errorCode == -2143215100) return "SCE_NET_AOSS_ERROR_LIB_NO_PACKET_SEQ";
    if (errorCode == -2143215099) return "SCE_NET_AOSS_ERROR_LIB_NOT_RESTART";
    if (errorCode == -2143215089) return "SCE_NET_AOSS_ERROR_LIB_OTHER_ERROR";
    if (errorCode == -2143215096) return "SCE_NET_AOSS_ERROR_LIB_PROHIBIT_KEY";
    if (errorCode == -2143215070) return "SCE_NET_AOSS_ERROR_STOPPED";
    if (errorCode == -2143215069) return "SCE_NET_AOSS_ERROR_WLAN0_CANNOT_BE_FOUND";
    if (errorCode == -2143206907) return "SCE_NET_BWE_VSH_ERROR_BANDWIDTH_TEST_NOT_COMPLETED";
    if (errorCode == -2143206909) return "SCE_NET_BWE_VSH_ERROR_BUSY";
    if (errorCode == -2143206906) return "SCE_NET_BWE_VSH_ERROR_CALLBACK_MAX";
    if (errorCode == -2143206908) return "SCE_NET_BWE_VSH_ERROR_INVALID_ARG";
    if (errorCode == -2143206905) return "SCE_NET_BWE_VSH_ERROR_INVALID_ID";
    if (errorCode == -2143206911) return "SCE_NET_BWE_VSH_ERROR_NOT_INITIALIZED";
    if (errorCode == -2143206910) return "SCE_NET_BWE_VSH_ERROR_NOT_TERMINATED";
    if (errorCode == -2143215225) return "SCE_NET_CTL_ERROR_IPCINT_BUSY";
    if (errorCode == -2143215227) return "SCE_NET_CTL_ERROR_VSH_CALLBACK_MAX";
    if (errorCode == -2143215228) return "SCE_NET_CTL_ERROR_VSH_INVALID_ADDR";
    if (errorCode == -2143215226) return "SCE_NET_CTL_ERROR_VSH_INVALID_ID";
    if (errorCode == -2143215217) return "SCE_NET_CTL_ERROR_VSH_INVALID_IPADDR";
    if (errorCode == -2143215223) return "SCE_NET_CTL_ERROR_VSH_INVALID_MTU";
    if (errorCode == -2143215203) return "SCE_NET_CTL_ERROR_IPCINT_INVALID_SCANINFO_BSSID";
    if (errorCode == -2143215202) return "SCE_NET_CTL_ERROR_IPCINT_INVALID_SIZE";
    if (errorCode == -2143215216) return "SCE_NET_CTL_ERROR_IPCINT_INVALID_SSID";
    if (errorCode == -2143215215) return "SCE_NET_CTL_ERROR_IPCINT_INVALID_SSIDS_NUM";
    if (errorCode == -2143215206) return "SCE_NET_CTL_ERROR_VSH_INVALID_WIFI_LOCK";
    if (errorCode == -2143215213) return "SCE_NET_CTL_ERROR_VSH_INVALID_WIFI_SECURITY_KEY";
    if (errorCode == -2143215221) return "SCE_NET_CTL_ERROR_VSH_INVALID_WIFI_SECURITY_KEY_LEN";
    if (errorCode == -2143215209) return "SCE_NET_CTL_ERROR_VSH_NO_AOSS_AP";
    if (errorCode == -2143215201) return "SCE_NET_CTL_ERROR_IPCINT_NO_SCANINFO";
    if (errorCode == -2143215231) return "SCE_NET_CTL_ERROR_VSH_NOT_INITIALIZED";
    if (errorCode == -2143215230) return "SCE_NET_CTL_ERROR_VSH_NOT_TERMINATED";
    if (errorCode == -2143215207) return "SCE_NET_CTL_ERROR_IPCINT_SCANINFO_LOCKED";
    if (errorCode == -2143215224) return "SCE_NET_CTL_ERROR_VSH_UNKNOWN_DEVICE";
    if (errorCode == -2143215219) return "SCE_NET_CTL_ERROR_VSH_UNKNOWN_DNS_CONFIG";
    if (errorCode == -2143215218) return "SCE_NET_CTL_ERROR_VSH_UNKNOWN_HTTP_PROXY_CONFIG";
    if (errorCode == -2143215220) return "SCE_NET_CTL_ERROR_VSH_UNKNOWN_IP_CONFIG";
    if (errorCode == -2143215222) return "SCE_NET_CTL_ERROR_VSH_UNKNOWN_WIFI_SECURITY";
    if (errorCode == -2143215210) return "SCE_NET_CTL_ERROR_VSH_WIFI_ALREADY_USED";
    if (errorCode == -2143214077) return "SCE_NET_RAKURAKU_ERROR_FINDTIMEOUT";
    if (errorCode == -2143214045) return "SCE_NET_RAKURAKU_ERROR_INVALID_RESULT";
    if (errorCode == -2143214046) return "SCE_NET_RAKURAKU_ERROR_INVALID_STATE";
    if (errorCode == -2143214044) return "SCE_NET_RAKURAKU_ERROR_INVALID_WIFI_SECURITY";
    if (errorCode == -2143214074) return "SCE_NET_RAKURAKU_ERROR_MAXAP";
    if (errorCode == -2143214079) return "SCE_NET_RAKURAKU_ERROR_MEMORY";
    if (errorCode == -2143214078) return "SCE_NET_RAKURAKU_ERROR_NETWORK";
    if (errorCode == -2143214047) return "SCE_NET_RAKURAKU_ERROR_STOPPED";
    if (errorCode == -2143214076) return "SCE_NET_RAKURAKU_ERROR_TIMEOUT";
    if (errorCode == -2143214075) return "SCE_NET_RAKURAKU_ERROR_UNKNOWN";
    if (errorCode == -2143214073) return "SCE_NET_RAKURAKU_ERROR_UNKNOWNAUTH";
    if (errorCode == -2143214072) return "SCE_NET_RAKURAKU_ERROR_USERABORT";
    if (errorCode == -2143214591) return "SCE_NET_STUN_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2143214583) return "SCE_NET_STUN_ERROR_CONTEXT_MAX";
    if (errorCode == -2143214578) return "SCE_NET_STUN_ERROR_INET_PTON_FAILED";
    if (errorCode == -2143214582) return "SCE_NET_STUN_ERROR_INVALID_ARG";
    if (errorCode == -2143214580) return "SCE_NET_STUN_ERROR_INVALID_RESP_PADDING_DATA";
    if (errorCode == -2143214581) return "SCE_NET_STUN_ERROR_INVALID_RESP_PADDING_DATA_LEN";
    if (errorCode == -2143214579) return "SCE_NET_STUN_ERROR_MALLOC_FAILED";
    if (errorCode == -2143214585) return "SCE_NET_STUN_ERROR_MSG_INTEGRITY_CHECK_FAILURE";
    if (errorCode == -2143214576) return "SCE_NET_STUN_ERROR_MSPACE_CREATE_FAILED";
    if (errorCode == -2143214586) return "SCE_NET_STUN_ERROR_NOT_ENOUGH_SPACE";
    if (errorCode == -2143214590) return "SCE_NET_STUN_ERROR_NOT_INITIALIZED";
    if (errorCode == -2143214587) return "SCE_NET_STUN_ERROR_NOT_RECVED_MANDATORY_ATTR";
    if (errorCode == -2143214588) return "SCE_NET_STUN_ERROR_RECVED_INVALID_RESPONSE";
    if (errorCode == -2143214577) return "SCE_NET_STUN_ERROR_RESOLVER_CREATE_FAILED";
    if (errorCode == -2143214584) return "SCE_NET_STUN_ERROR_RESOLVER_FAILED";
    if (errorCode == -2143214589) return "SCE_NET_STUN_ERROR_TIMEOUT";
    if (errorCode == -2143214575) return "SCE_NET_STUN_ERROR_UPNP_ADDPORTMAPPING_FAILED";
    if (errorCode == -2143207052) return "SCE_NET_UPNP_ERROR_ACTION_ACTION_FAILED";
    if (errorCode == -2143207048) return "SCE_NET_UPNP_ERROR_ACTION_CONFLICT_IN_MAPPING";
    if (errorCode == -2143207044) return "SCE_NET_UPNP_ERROR_ACTION_EXT_PORT_MUST_BE_WC";
    if (errorCode == -2143207160) return "SCE_NET_UPNP_ERROR_ACTION_FAILED";
    if (errorCode == -2143207055) return "SCE_NET_UPNP_ERROR_ACTION_INVALID_ACTION";
    if (errorCode == -2143207054) return "SCE_NET_UPNP_ERROR_ACTION_INVALID_ARGS";
    if (errorCode == -2143207053) return "SCE_NET_UPNP_ERROR_ACTION_INVALID_VAR";
    if (errorCode == -2143207046) return "SCE_NET_UPNP_ERROR_ACTION_LEASE_TIME_SPECIFIED";
    if (errorCode == -2143207051) return "SCE_NET_UPNP_ERROR_ACTION_NO_SUCH_ENTRY";
    if (errorCode == -2143207043) return "SCE_NET_UPNP_ERROR_ACTION_OTHER";
    if (errorCode == -2143207045) return "SCE_NET_UPNP_ERROR_ACTION_REMOTEHOST_MUST_BE_WC";
    if (errorCode == -2143207047) return "SCE_NET_UPNP_ERROR_ACTION_SAME_PORT_REQUIRED";
    if (errorCode == -2143207158) return "SCE_NET_UPNP_ERROR_ACTION_TIMEOUT";
    if (errorCode == -2143207049) return "SCE_NET_UPNP_ERROR_ACTION_WC_IN_EXT_PORT";
    if (errorCode == -2143207050) return "SCE_NET_UPNP_ERROR_ACTION_WC_IN_SRC_IP";
    if (errorCode == -2143207039) return "SCE_NET_UPNP_ERROR_ATTR_NOT_FOUND";
    if (errorCode == -2143207159) return "SCE_NET_UPNP_ERROR_BUF_TOO_SMALL";
    if (errorCode == -2143207028) return "SCE_NET_UPNP_ERROR_CLEN_TOO_BIG";
    if (errorCode == -2143207024) return "SCE_NET_UPNP_ERROR_CLOSE_TAG_NOT_FOUND";
    if (errorCode == -2143207027) return "SCE_NET_UPNP_ERROR_COULD_NOT_RECVED_ALL_DATA";
    if (errorCode == -2143207161) return "SCE_NET_UPNP_ERROR_INVALID_ACTION_RESP";
    if (errorCode == -2143207163) return "SCE_NET_UPNP_ERROR_INVALID_ARG";
    if (errorCode == -2143207037) return "SCE_NET_UPNP_ERROR_INVALID_ATTR";
    if (errorCode == -2143207031) return "SCE_NET_UPNP_ERROR_INVALID_HEADER";
    if (errorCode == -2143207029) return "SCE_NET_UPNP_ERROR_INVALID_HTTP_RESPONSE";
    if (errorCode == -2143207025) return "SCE_NET_UPNP_ERROR_INVALID_INT_ACTION";
    if (errorCode == -2143207030) return "SCE_NET_UPNP_ERROR_INVALID_MSEARCH";
    if (errorCode == -2143207034) return "SCE_NET_UPNP_ERROR_INVALID_MSEARCH_ADDR";
    if (errorCode == -2143207166) return "SCE_NET_UPNP_ERROR_LIBNETCTL_NOT_IPOBTAINED";
    if (errorCode == -2143207032) return "SCE_NET_UPNP_ERROR_LINE_NOT_TERMINATED";
    if (errorCode == -2143207033) return "SCE_NET_UPNP_ERROR_MSEARCH_TIMEOUT";
    if (errorCode == -2143207042) return "SCE_NET_UPNP_ERROR_NO_EXT_IP";
    if (errorCode == -2143207038) return "SCE_NET_UPNP_ERROR_NODE_NAME_NOT_FOUND";
    if (errorCode == -2143207036) return "SCE_NET_UPNP_ERROR_NODE_NOT_FOUND";
    if (errorCode == -2143207167) return "SCE_NET_UPNP_ERROR_NOT_INITIALIZED";
    if (errorCode == -2143207040) return "SCE_NET_UPNP_ERROR_NOT_SOAP_TAG";
    if (errorCode == -2143207035) return "SCE_NET_UPNP_ERROR_OUTPUT_BUF_TOO_SMALL";
    if (errorCode == -2143207162) return "SCE_NET_UPNP_ERROR_PREFIX_BUF_TOO_SMALL";
    if (errorCode == -2143207157) return "SCE_NET_UPNP_ERROR_SERVICE_NOT_FOUND";
    if (errorCode == -2143207006) return "SCE_NET_UPNP_ERROR_XML_ENCODE_INSUFFICIENT";
    if (errorCode == -2143207008) return "SCE_NET_UPNP_ERROR_XML_ENCODE_INVALID_ARGUMENT";
    if (errorCode == -2143207007) return "SCE_NET_UPNP_ERROR_XML_ENCODE_INVALID_CHARACTER";
    if (errorCode == -2143214815) return "SCE_NET_WPS_ERROR_BUSY";
    if (errorCode == -2143214811) return "SCE_NET_WPS_ERROR_DEVICE_OPEN";
    if (errorCode == -2143214810) return "SCE_NET_WPS_ERROR_ENROLLEE_OPEN";
    if (errorCode == -2143214813) return "SCE_NET_WPS_ERROR_INVALID_ARG";
    if (errorCode == -2143214814) return "SCE_NET_WPS_ERROR_INVALID_MODE";
    if (errorCode == -2143214807) return "SCE_NET_WPS_ERROR_INVALID_SETTING";
    if (errorCode == -2143214809) return "SCE_NET_WPS_ERROR_NO_SETTING";
    if (errorCode == -2143214808) return "SCE_NET_WPS_ERROR_NO_SUITABLE_SETTING";
    if (errorCode == -2143214845) return "SCE_NET_WPS_ERROR_SONY_WPS_LIB_E_CANCELED";
    if (errorCode == -2143214847) return "SCE_NET_WPS_ERROR_SONY_WPS_LIB_E_FAILED";
    if (errorCode == -2143214842) return "SCE_NET_WPS_ERROR_SONY_WPS_LIB_E_PINMISMATCHED";
    if (errorCode == -2143214846) return "SCE_NET_WPS_ERROR_SONY_WPS_LIB_E_PROTOCOL_TIMEOUT";
    if (errorCode == -2143214844) return "SCE_NET_WPS_ERROR_SONY_WPS_LIB_E_SCAN_TIMEOUT";
    if (errorCode == -2143214843) return "SCE_NET_WPS_ERROR_SONY_WPS_LIB_E_SESSION_OVERLAP";
    if (errorCode == -2143214841) return "SCE_NET_WPS_ERROR_SONY_WPS_LIB_E_UNKNOWN";
    if (errorCode == -2143214812) return "SCE_NET_WPS_ERROR_WLAN_NOT_FOUND";
    if (errorCode == -2141868540) return "SCE_NP_APP_LAUNCH_LINK_ERROR_ABORTED";
    if (errorCode == -2141868543) return "SCE_NP_APP_LAUNCH_LINK_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141868537) return "SCE_NP_APP_LAUNCH_LINK_ERROR_CONFLICT";
    if (errorCode == -2141868535) return "SCE_NP_APP_LAUNCH_LINK_ERROR_FILE_MALFORMED";
    if (errorCode == -2141868534) return "SCE_NP_APP_LAUNCH_LINK_ERROR_FILE_UNSUPPORTED";
    if (errorCode == -2141868536) return "SCE_NP_APP_LAUNCH_LINK_ERROR_HTTP_SERVER";
    if (errorCode == -2141868532) return "SCE_NP_APP_LAUNCH_LINK_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141868538) return "SCE_NP_APP_LAUNCH_LINK_ERROR_INVALID_REQUEST_ID";
    if (errorCode == -2141868541) return "SCE_NP_APP_LAUNCH_LINK_ERROR_NO_MEMORY";
    if (errorCode == -2141868542) return "SCE_NP_APP_LAUNCH_LINK_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141868533) return "SCE_NP_APP_LAUNCH_LINK_ERROR_PROHIBITED_SYSTEM_VERSION";
    if (errorCode == -2141868531) return "SCE_NP_APP_LAUNCH_LINK_ERROR_PROHIBITED_TITLE";
    if (errorCode == -2141868539) return "SCE_NP_APP_LAUNCH_LINK_ERROR_TOO_MANY_REQUEST";
    if (errorCode == -2141880316) return "SCE_NP_ARCH_BASE64_ERROR_INVALID_CHARACTER";
    if (errorCode == -2141880317) return "SCE_NP_ARCH_BASE64_ERROR_INVALID_LENGTH";
    if (errorCode == -2141880319) return "SCE_NP_ARCH_CALLOUT_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141880318) return "SCE_NP_ARCH_CALLOUT_ERROR_NOT_TERMINATED";
    if (errorCode == -2141880314) return "SCE_NP_ARCH_ERROR_CALLOUT_DUPLICATED";
    if (errorCode == -2141880315) return "SCE_NP_ARCH_ERROR_CREATE_HEAP";
    if (errorCode == -2141880308) return "SCE_NP_ARCH_ERROR_EVF_COND";
    if (errorCode == -2141880312) return "SCE_NP_ARCH_ERROR_INSUFFICIENT_BUFFER";
    if (errorCode == -2141880311) return "SCE_NP_ARCH_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141880305) return "SCE_NP_ARCH_ERROR_MUTEX_BUSY";
    if (errorCode == -2141880306) return "SCE_NP_ARCH_ERROR_PARSE_STRING";
    if (errorCode == -2141880307) return "SCE_NP_ARCH_ERROR_SEMA_ZERO";
    if (errorCode == -2141880313) return "SCE_NP_ARCH_ERROR_THREAD_FATAL";
    if (errorCode == -2141880309) return "SCE_NP_ARCH_ERROR_TIMEOUT";
    if (errorCode == -2141880310) return "SCE_NP_ARCH_ERROR_UNKNOWN";
    if (errorCode == -2141871481) return "SCE_NP_ASM_CLIENT_ERROR_ABORTED";
    if (errorCode == -2141871487) return "SCE_NP_ASM_CLIENT_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141871474) return "SCE_NP_ASM_CLIENT_ERROR_APP_NOT_LAUNCHED";
    if (errorCode == -2141871484) return "SCE_NP_ASM_CLIENT_ERROR_CANNOT_CREATE_ASM_CLIENT";
    if (errorCode == -2141871476) return "SCE_NP_ASM_CLIENT_ERROR_FILE_NOT_FOUND";
    if (errorCode == -2141871477) return "SCE_NP_ASM_CLIENT_ERROR_INTERNAL_ERROR";
    if (errorCode == -2141871485) return "SCE_NP_ASM_CLIENT_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141871475) return "SCE_NP_ASM_CLIENT_ERROR_INVALID_NPTITLE_DAT";
    if (errorCode == -2141871486) return "SCE_NP_ASM_CLIENT_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141871479) return "SCE_NP_ASM_CLIENT_ERROR_NP_SERVICE_LAVEL_NOT_MATCH";
    if (errorCode == -2141871478) return "SCE_NP_ASM_CLIENT_ERROR_NP_TITLE_ID_NOT_SET";
    if (errorCode == -2141871483) return "SCE_NP_ASM_CLIENT_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141871482) return "SCE_NP_ASM_CLIENT_ERROR_REQUEST_NOT_FOUND";
    if (errorCode == -2141871473) return "SCE_NP_ASM_CLIENT_ERROR_RESULT_EMPTY";
    if (errorCode == -2141871480) return "SCE_NP_ASM_CLIENT_ERROR_SERVICE_ID_INFO_RESULT_TOO_BIG";
    if (errorCode == -2141871609) return "SCE_NP_ASM_ERROR_ABORTED";
    if (errorCode == -2141871615) return "SCE_NP_ASM_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141871608) return "SCE_NP_ASM_ERROR_INTERNAL";
    if (errorCode == -2141871613) return "SCE_NP_ASM_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141871614) return "SCE_NP_ASM_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141871612) return "SCE_NP_ASM_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141871611) return "SCE_NP_ASM_ERROR_PARSE_FAILURE";
    if (errorCode == -2141871610) return "SCE_NP_ASM_ERROR_REQUEST_NOT_FOUND";
    if (errorCode == -2141871222) return "SCE_NP_ASM_SERVER_ERROR_ACCESS_TOKEN_REQUIRED";
    if (errorCode == -2141871226) return "SCE_NP_ASM_SERVER_ERROR_BAD_REQUEST";
    if (errorCode == -2141871216) return "SCE_NP_ASM_SERVER_ERROR_BANNED_NP_CONSOLE_TOKEN";
    if (errorCode == -2141871220) return "SCE_NP_ASM_SERVER_ERROR_EXPIRED_ACCESS_TOKEN";
    if (errorCode == -2141871217) return "SCE_NP_ASM_SERVER_ERROR_EXPIRED_NP_CONSOLE_TOKEN";
    if (errorCode == -2141871223) return "SCE_NP_ASM_SERVER_ERROR_EXPIRED_NP_TITLE_TOKEN";
    if (errorCode == -2141871213) return "SCE_NP_ASM_SERVER_ERROR_INTERNAL_SERVER_ERROR";
    if (errorCode == -2141871221) return "SCE_NP_ASM_SERVER_ERROR_INVALID_ACCESS_TOKEN";
    if (errorCode == -2141871357) return "SCE_NP_ASM_SERVER_ERROR_INVALID_API_GROUP";
    if (errorCode == -2141871218) return "SCE_NP_ASM_SERVER_ERROR_INVALID_NP_CONSOLE_TOKEN";
    if (errorCode == -2141871229) return "SCE_NP_ASM_SERVER_ERROR_INVALID_NP_ENVIRONMENT";
    if (errorCode == -2141871356) return "SCE_NP_ASM_SERVER_ERROR_INVALID_NP_TITLE_ID";
    if (errorCode == -2141871224) return "SCE_NP_ASM_SERVER_ERROR_INVALID_NP_TITLE_TOKEN";
    if (errorCode == -2141871231) return "SCE_NP_ASM_SERVER_ERROR_INVALID_REQUEST_BODY";
    if (errorCode == -2141871230) return "SCE_NP_ASM_SERVER_ERROR_INVALID_REQUEST_QUERY_STRING";
    if (errorCode == -2141871353) return "SCE_NP_ASM_SERVER_ERROR_INVALID_REQUEST_TIMESTAMP";
    if (errorCode == -2141871358) return "SCE_NP_ASM_SERVER_ERROR_INVALID_SERVICE_NAME";
    if (errorCode == -2141871352) return "SCE_NP_ASM_SERVER_ERROR_INVALID_SIGNATURE";
    if (errorCode == -2141871215) return "SCE_NP_ASM_SERVER_ERROR_NOT_AUTHORIZED";
    if (errorCode == -2141871354) return "SCE_NP_ASM_SERVER_ERROR_NOT_AUTHORIZED_NP_TITLE_ID_TO_USE_API_GROUP";
    if (errorCode == -2141871355) return "SCE_NP_ASM_SERVER_ERROR_NOT_AUTHORIZED_NP_TITLE_ID_TO_USE_SERVICE_NAME";
    if (errorCode == -2141871219) return "SCE_NP_ASM_SERVER_ERROR_NP_CONSOLE_TOKEN_REQUIRED";
    if (errorCode == -2141871351) return "SCE_NP_ASM_SERVER_ERROR_NP_TITLE_ID_DIFFERED_FROM_NP_TITLE_TOKENS";
    if (errorCode == -2141871225) return "SCE_NP_ASM_SERVER_ERROR_NP_TITLE_TOKEN_REQUIRED";
    if (errorCode == -2141871232) return "SCE_NP_ASM_SERVER_ERROR_NULL_VALUE_NOT_ALLOWED";
    if (errorCode == -2141871214) return "SCE_NP_ASM_SERVER_ERROR_RATE_LIMIT_EXCEEDED";
    if (errorCode == -2141871212) return "SCE_NP_ASM_SERVER_ERROR_SERVER_BUSY";
    if (errorCode == -2141871210) return "SCE_NP_ASM_SERVER_ERROR_SERVICE_CLOSED";
    if (errorCode == -2141871228) return "SCE_NP_ASM_SERVER_ERROR_TOO_LARGE_BODY";
    if (errorCode == -2141871211) return "SCE_NP_ASM_SERVER_ERROR_UNDER_MAINTENANCE";
    if (errorCode == -2141871209) return "SCE_NP_ASM_SERVER_ERROR_UNEXPECTED_ERROR";
    if (errorCode == -2141871359) return "SCE_NP_ASM_SERVER_ERROR_UNKNOWN";
    if (errorCode == -2141871227) return "SCE_NP_ASM_SERVER_ERROR_UNSUPPORTED_API_VERSION";
    if (errorCode == -2141912316) return "SCE_NP_AUTH_ERROR_ABORTED";
    if (errorCode == -2141912016) return "SCE_NP_AUTH_ERROR_ACCOUNT_CLOSED";
    if (errorCode == -2141912000) return "SCE_NP_AUTH_ERROR_ACCOUNT_RENEW_ACCOUNT1";
    if (errorCode == -2141911991) return "SCE_NP_AUTH_ERROR_ACCOUNT_RENEW_ACCOUNT10";
    if (errorCode == -2141911990) return "SCE_NP_AUTH_ERROR_ACCOUNT_RENEW_ACCOUNT11";
    if (errorCode == -2141911989) return "SCE_NP_AUTH_ERROR_ACCOUNT_RENEW_ACCOUNT12";
    if (errorCode == -2141911988) return "SCE_NP_AUTH_ERROR_ACCOUNT_RENEW_ACCOUNT13";
    if (errorCode == -2141911987) return "SCE_NP_AUTH_ERROR_ACCOUNT_RENEW_ACCOUNT14";
    if (errorCode == -2141911986) return "SCE_NP_AUTH_ERROR_ACCOUNT_RENEW_ACCOUNT15";
    if (errorCode == -2141911985) return "SCE_NP_AUTH_ERROR_ACCOUNT_RENEW_ACCOUNT16";
    if (errorCode == -2141911999) return "SCE_NP_AUTH_ERROR_ACCOUNT_RENEW_ACCOUNT2";
    if (errorCode == -2141911998) return "SCE_NP_AUTH_ERROR_ACCOUNT_RENEW_ACCOUNT3";
    if (errorCode == -2141911997) return "SCE_NP_AUTH_ERROR_ACCOUNT_RENEW_ACCOUNT4";
    if (errorCode == -2141911996) return "SCE_NP_AUTH_ERROR_ACCOUNT_RENEW_ACCOUNT5";
    if (errorCode == -2141911995) return "SCE_NP_AUTH_ERROR_ACCOUNT_RENEW_ACCOUNT6";
    if (errorCode == -2141911994) return "SCE_NP_AUTH_ERROR_ACCOUNT_RENEW_ACCOUNT7";
    if (errorCode == -2141911993) return "SCE_NP_AUTH_ERROR_ACCOUNT_RENEW_ACCOUNT8";
    if (errorCode == -2141911992) return "SCE_NP_AUTH_ERROR_ACCOUNT_RENEW_ACCOUNT9";
    if (errorCode == -2141912014) return "SCE_NP_AUTH_ERROR_ACCOUNT_RENEW_EULA";
    if (errorCode == -2141912015) return "SCE_NP_AUTH_ERROR_ACCOUNT_SUSPENDED";
    if (errorCode == -2141912025) return "SCE_NP_AUTH_ERROR_CONSOLE_ID_SUSPENDED";
    if (errorCode == -2141912319) return "SCE_NP_AUTH_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141912028) return "SCE_NP_AUTH_ERROR_INVALID_CONSOLE_ID";
    if (errorCode == -2141912313) return "SCE_NP_AUTH_ERROR_INVALID_ID";
    if (errorCode == -2141912318) return "SCE_NP_AUTH_ERROR_INVALID_SIZE";
    if (errorCode == -2141912317) return "SCE_NP_AUTH_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141912315) return "SCE_NP_AUTH_ERROR_REQUEST_MAX";
    if (errorCode == -2141912314) return "SCE_NP_AUTH_ERROR_REQUEST_NOT_FOUND";
    if (errorCode == -2141912029) return "SCE_NP_AUTH_ERROR_S_INVALID_CONSUMED_COUNT";
    if (errorCode == -2141912031) return "SCE_NP_AUTH_ERROR_S_INVALID_CREDENTIAL";
    if (errorCode == -2141912048) return "SCE_NP_AUTH_ERROR_S_INVALID_DATA_LENGTH";
    if (errorCode == -2141912030) return "SCE_NP_AUTH_ERROR_S_INVALID_ENTITLEMENT_ID";
    if (errorCode == -2141912032) return "SCE_NP_AUTH_ERROR_S_INVALID_SERVICE_ID";
    if (errorCode == -2141912047) return "SCE_NP_AUTH_ERROR_S_INVALID_USER_AGENT";
    if (errorCode == -2141912046) return "SCE_NP_AUTH_ERROR_S_INVALID_VERSION";
    if (errorCode == -2141912061) return "SCE_NP_AUTH_ERROR_SERVER_MAINTENANCE";
    if (errorCode == -2141912062) return "SCE_NP_AUTH_ERROR_SERVICE_BUSY";
    if (errorCode == -2141912063) return "SCE_NP_AUTH_ERROR_SERVICE_DOWN";
    if (errorCode == -2141912064) return "SCE_NP_AUTH_ERROR_SERVICE_END";
    if (errorCode == -2141911936) return "SCE_NP_AUTH_ERROR_UNKNOWN";
    if (errorCode == -2141902333) return "SCE_NP_AUTH_SERVER_ERROR_ACCESS_DENIED";
    if (errorCode == -2141902328) return "SCE_NP_AUTH_SERVER_ERROR_INVALID_CLIENT";
    if (errorCode == -2141902327) return "SCE_NP_AUTH_SERVER_ERROR_INVALID_GRANT";
    if (errorCode == -2141902335) return "SCE_NP_AUTH_SERVER_ERROR_INVALID_REQUEST";
    if (errorCode == -2141902331) return "SCE_NP_AUTH_SERVER_ERROR_INVALID_SCOPE";
    if (errorCode == -2141902320) return "SCE_NP_AUTH_SERVER_ERROR_OBSOLETE_10";
    if (errorCode == -2141902319) return "SCE_NP_AUTH_SERVER_ERROR_OBSOLETE_11";
    if (errorCode == -2141902318) return "SCE_NP_AUTH_SERVER_ERROR_OBSOLETE_12";
    if (errorCode == -2141902317) return "SCE_NP_AUTH_SERVER_ERROR_OBSOLETE_13";
    if (errorCode == -2141902316) return "SCE_NP_AUTH_SERVER_ERROR_OBSOLETE_14";
    if (errorCode == -2141902315) return "SCE_NP_AUTH_SERVER_ERROR_OBSOLETE_15";
    if (errorCode == -2141902314) return "SCE_NP_AUTH_SERVER_ERROR_OBSOLETE_16";
    if (errorCode == -2141902313) return "SCE_NP_AUTH_SERVER_ERROR_OBSOLETE_17";
    if (errorCode == -2141902312) return "SCE_NP_AUTH_SERVER_ERROR_OBSOLETE_18";
    if (errorCode == -2141902311) return "SCE_NP_AUTH_SERVER_ERROR_OBSOLETE_19";
    if (errorCode == -2141902310) return "SCE_NP_AUTH_SERVER_ERROR_OBSOLETE_1A";
    if (errorCode == -2141902309) return "SCE_NP_AUTH_SERVER_ERROR_OBSOLETE_1B";
    if (errorCode == -2141902308) return "SCE_NP_AUTH_SERVER_ERROR_OBSOLETE_1C";
    if (errorCode == -2141902307) return "SCE_NP_AUTH_SERVER_ERROR_OBSOLETE_1D";
    if (errorCode == -2141902208) return "SCE_NP_AUTH_SERVER_ERROR_OBSOLETE_80";
    if (errorCode == -2141902207) return "SCE_NP_AUTH_SERVER_ERROR_OBSOLETE_81";
    if (errorCode == -2141902206) return "SCE_NP_AUTH_SERVER_ERROR_OBSOLETE_82";
    if (errorCode == -2141902205) return "SCE_NP_AUTH_SERVER_ERROR_OBSOLETE_83";
    if (errorCode == -2141902330) return "SCE_NP_AUTH_SERVER_ERROR_SERVER_ERROR";
    if (errorCode == -2141902329) return "SCE_NP_AUTH_SERVER_ERROR_TEMPORARILY_UNAVAILABLE";
    if (errorCode == -2141902334) return "SCE_NP_AUTH_SERVER_ERROR_UNAUTHORIZED_CLIENT";
    if (errorCode == -2141902336) return "SCE_NP_AUTH_SERVER_ERROR_UNKNOWN";
    if (errorCode == -2141902326) return "SCE_NP_AUTH_SERVER_ERROR_UNSUPPORTED_GRANT_TYPE";
    if (errorCode == -2141902332) return "SCE_NP_AUTH_SERVER_ERROR_UNSUPPORTED_RESPONSE_TYPE";
    if (errorCode == -2141905149) return "SCE_NP_BANDWIDTH_TEST_ERROR_BAD_RESPONSE";
    if (errorCode == -2141905145) return "SCE_NP_BANDWIDTH_TEST_ERROR_CONTEXT_NOT_AVAILABLE";
    if (errorCode == -2141905147) return "SCE_NP_BANDWIDTH_TEST_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141905146) return "SCE_NP_BANDWIDTH_TEST_ERROR_INVALID_SIZE";
    if (errorCode == -2141905150) return "SCE_NP_BANDWIDTH_TEST_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141905148) return "SCE_NP_BANDWIDTH_TEST_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141869311) return "SCE_NP_COMMERCE_DIALOG_ERROR_NOT_GAME_PROCESS";
    if (errorCode == -2141869310) return "SCE_NP_COMMERCE_DIALOG_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141911289) return "SCE_NP_COMMUNITY_ERROR_ABORTED";
    if (errorCode == -2141911295) return "SCE_NP_COMMUNITY_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141911288) return "SCE_NP_COMMUNITY_ERROR_BAD_RESPONSE";
    if (errorCode == -2141911287) return "SCE_NP_COMMUNITY_ERROR_BODY_TOO_LARGE";
    if (errorCode == -2141911275) return "SCE_NP_COMMUNITY_ERROR_CLIENT_HANDLE_ALREADY_EXISTS";
    if (errorCode == -2141911286) return "SCE_NP_COMMUNITY_ERROR_HTTP_SERVER";
    if (errorCode == -2141911284) return "SCE_NP_COMMUNITY_ERROR_INSUFFICIENT_ARGUMENT";
    if (errorCode == -2141911276) return "SCE_NP_COMMUNITY_ERROR_INVALID_ALIGNMENT";
    if (errorCode == -2141911292) return "SCE_NP_COMMUNITY_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141911282) return "SCE_NP_COMMUNITY_ERROR_INVALID_ID";
    if (errorCode == -2141911281) return "SCE_NP_COMMUNITY_ERROR_INVALID_ONLINE_ID";
    if (errorCode == -2141911277) return "SCE_NP_COMMUNITY_ERROR_INVALID_PARTITION";
    if (errorCode == -2141911285) return "SCE_NP_COMMUNITY_ERROR_INVALID_SIGNATURE";
    if (errorCode == -2141911279) return "SCE_NP_COMMUNITY_ERROR_INVALID_TYPE";
    if (errorCode == -2141911291) return "SCE_NP_COMMUNITY_ERROR_NO_LOGIN";
    if (errorCode == -2141911274) return "SCE_NP_COMMUNITY_ERROR_NO_RESOURCE";
    if (errorCode == -2141911294) return "SCE_NP_COMMUNITY_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141911293) return "SCE_NP_COMMUNITY_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141911273) return "SCE_NP_COMMUNITY_ERROR_REQUEST_BEFORE_END";
    if (errorCode == -2141911270) return "SCE_NP_COMMUNITY_ERROR_SCORE_INVALID_SAVEDATA_OWNER";
    if (errorCode == -2141911271) return "SCE_NP_COMMUNITY_ERROR_TOO_MANY_NPID";
    if (errorCode == -2141911290) return "SCE_NP_COMMUNITY_ERROR_TOO_MANY_OBJECTS";
    if (errorCode == -2141911272) return "SCE_NP_COMMUNITY_ERROR_TOO_MANY_SLOTID";
    if (errorCode == -2141911278) return "SCE_NP_COMMUNITY_ERROR_TRANSACTION_ALREADY_END";
    if (errorCode == -2141911269) return "SCE_NP_COMMUNITY_ERROR_TUS_INVALID_SAVEDATA_OWNER";
    if (errorCode == -2141911283) return "SCE_NP_COMMUNITY_ERROR_UNKNOWN_TYPE";
    if (errorCode == -2141911039) return "SCE_NP_COMMUNITY_SERVER_ERROR_BAD_REQUEST";
    if (errorCode == -2141910861) return "SCE_NP_COMMUNITY_SERVER_ERROR_BASIC_BLACKLISTED_USER_ID";
    if (errorCode == -2141910936) return "SCE_NP_COMMUNITY_SERVER_ERROR_BLACKLISTED_TITLE";
    if (errorCode == -2141911023) return "SCE_NP_COMMUNITY_SERVER_ERROR_BLACKLISTED_USER_ID";
    if (errorCode == -2141911029) return "SCE_NP_COMMUNITY_SERVER_ERROR_CENSORED";
    if (errorCode == -2141910925) return "SCE_NP_COMMUNITY_SERVER_ERROR_CONDITIONS_NOT_SATISFIED";
    if (errorCode == -2141910903) return "SCE_NP_COMMUNITY_SERVER_ERROR_EXPIRED_SIGNATURE";
    if (errorCode == -2141911002) return "SCE_NP_COMMUNITY_SERVER_ERROR_FAIL_TO_CREATE_SIGNATURE";
    if (errorCode == -2141911034) return "SCE_NP_COMMUNITY_SERVER_ERROR_FORBIDDEN";
    if (errorCode == -2141910867) return "SCE_NP_COMMUNITY_SERVER_ERROR_FSR_BEFORE_SERVICE";
    if (errorCode == -2141910866) return "SCE_NP_COMMUNITY_SERVER_ERROR_FSR_END_OF_SERVICE";
    if (errorCode == -2141910865) return "SCE_NP_COMMUNITY_SERVER_ERROR_FSR_MAINTENANCE";
    if (errorCode == -2141910996) return "SCE_NP_COMMUNITY_SERVER_ERROR_GAME_DATA_ALREADY_EXISTS";
    if (errorCode == -2141911022) return "SCE_NP_COMMUNITY_SERVER_ERROR_GAME_RANKING_NOT_FOUND";
    if (errorCode == -2141911033) return "SCE_NP_COMMUNITY_SERVER_ERROR_INTERNAL_SERVER_ERROR";
    if (errorCode == -2141911007) return "SCE_NP_COMMUNITY_SERVER_ERROR_INVALID_ABOUT_ME_CHARACTER";
    if (errorCode == -2141911006) return "SCE_NP_COMMUNITY_SERVER_ERROR_INVALID_ABOUT_ME_LENGTH";
    if (errorCode == -2141911015) return "SCE_NP_COMMUNITY_SERVER_ERROR_INVALID_ANTICHEAT_DATA";
    if (errorCode == -2141911011) return "SCE_NP_COMMUNITY_SERVER_ERROR_INVALID_ENVIRONMENT";
    if (errorCode == -2141911035) return "SCE_NP_COMMUNITY_SERVER_ERROR_INVALID_NPID";
    if (errorCode == -2141911009) return "SCE_NP_COMMUNITY_SERVER_ERROR_INVALID_ONLINE_NAME_CHARACTER";
    if (errorCode == -2141911008) return "SCE_NP_COMMUNITY_SERVER_ERROR_INVALID_ONLINE_NAME_LENGTH";
    if (errorCode == -2141911005) return "SCE_NP_COMMUNITY_SERVER_ERROR_INVALID_SCORE";
    if (errorCode == -2141911037) return "SCE_NP_COMMUNITY_SERVER_ERROR_INVALID_SIGNATURE";
    if (errorCode == -2141911038) return "SCE_NP_COMMUNITY_SERVER_ERROR_INVALID_TICKET";
    if (errorCode == -2141910967) return "SCE_NP_COMMUNITY_SERVER_ERROR_INVALID_VIRTUAL_USER";
    if (errorCode == -2141911018) return "SCE_NP_COMMUNITY_SERVER_ERROR_LATEST_UPDATE_NOT_FOUND";
    if (errorCode == -2141910880) return "SCE_NP_COMMUNITY_SERVER_ERROR_MATCHING_BEFORE_SERVICE";
    if (errorCode == -2141910879) return "SCE_NP_COMMUNITY_SERVER_ERROR_MATCHING_END_OF_SERVICE";
    if (errorCode == -2141910878) return "SCE_NP_COMMUNITY_SERVER_ERROR_MATCHING_MAINTENANCE";
    if (errorCode == -2141910874) return "SCE_NP_COMMUNITY_SERVER_ERROR_NO_SUCH_TITLE";
    if (errorCode == -2141911013) return "SCE_NP_COMMUNITY_SERVER_ERROR_NO_SUCH_USER_NPID";
    if (errorCode == -2141910947) return "SCE_NP_COMMUNITY_SERVER_ERROR_NON_PLUS_MEMBER";
    if (errorCode == -2141911019) return "SCE_NP_COMMUNITY_SERVER_ERROR_NOT_BEST_SCORE";
    if (errorCode == -2141910994) return "SCE_NP_COMMUNITY_SERVER_ERROR_NOT_RECORDABLE_VERSION";
    if (errorCode == -2141910942) return "SCE_NP_COMMUNITY_SERVER_ERROR_NOT_YET_DOWNLOADABLE";
    if (errorCode == -2141911000) return "SCE_NP_COMMUNITY_SERVER_ERROR_OVER_THE_GAME_DATA_LIMIT";
    if (errorCode == -2141911004) return "SCE_NP_COMMUNITY_SERVER_ERROR_OVER_THE_RANKING_LIMIT";
    if (errorCode == -2141911030) return "SCE_NP_COMMUNITY_SERVER_ERROR_PLAYER_BANNED";
    if (errorCode == -2141911025) return "SCE_NP_COMMUNITY_SERVER_ERROR_QUOTA_MASTER_NOT_FOUND";
    if (errorCode == -2141910877) return "SCE_NP_COMMUNITY_SERVER_ERROR_RANKING_BEFORE_SERVICE";
    if (errorCode == -2141911017) return "SCE_NP_COMMUNITY_SERVER_ERROR_RANKING_BOARD_MASTER_NOT_FOUND";
    if (errorCode == -2141910876) return "SCE_NP_COMMUNITY_SERVER_ERROR_RANKING_END_OF_SERVICE";
    if (errorCode == -2141911016) return "SCE_NP_COMMUNITY_SERVER_ERROR_RANKING_GAME_DATA_MASTER_NOT_FOUND";
    if (errorCode == -2141910875) return "SCE_NP_COMMUNITY_SERVER_ERROR_RANKING_MAINTENANCE";
    if (errorCode == -2141911001) return "SCE_NP_COMMUNITY_SERVER_ERROR_RANKING_MASTER_INFO_NOT_FOUND";
    if (errorCode == -2141911028) return "SCE_NP_COMMUNITY_SERVER_ERROR_RANKING_RECORD_FORBIDDEN";
    if (errorCode == -2141911020) return "SCE_NP_COMMUNITY_SERVER_ERROR_RANKING_STORE_NOT_FOUND";
    if (errorCode == -2141911024) return "SCE_NP_COMMUNITY_SERVER_ERROR_RANKING_TITLE_NOT_FOUND";
    if (errorCode == -2141910930) return "SCE_NP_COMMUNITY_SERVER_ERROR_RECORD_DATE_IS_NEWER_THAN_COMP_DATE";
    if (errorCode == -2141910945) return "SCE_NP_COMMUNITY_SERVER_ERROR_SAVEDATA_NOT_FOUND";
    if (errorCode == -2141910902) return "SCE_NP_COMMUNITY_SERVER_ERROR_SAVEDATA_UPDATED";
    if (errorCode == -2141910998) return "SCE_NP_COMMUNITY_SERVER_ERROR_SELF_DATA_NOT_FOUND";
    if (errorCode == -2141911031) return "SCE_NP_COMMUNITY_SERVER_ERROR_SERVICE_UNAVAILABLE";
    if (errorCode == -2141910870) return "SCE_NP_COMMUNITY_SERVER_ERROR_TITLE_USER_STORAGE_BEFORE_SERVICE";
    if (errorCode == -2141910869) return "SCE_NP_COMMUNITY_SERVER_ERROR_TITLE_USER_STORAGE_END_OF_SERVICE";
    if (errorCode == -2141910868) return "SCE_NP_COMMUNITY_SERVER_ERROR_TITLE_USER_STORAGE_MAINTENANCE";
    if (errorCode == -2141911014) return "SCE_NP_COMMUNITY_SERVER_ERROR_TOO_LARGE_DATA";
    if (errorCode == -2141910935) return "SCE_NP_COMMUNITY_SERVER_ERROR_TOO_LARGE_ICONDATA";
    if (errorCode == -2141910934) return "SCE_NP_COMMUNITY_SERVER_ERROR_TOO_LARGE_SAVEDATA";
    if (errorCode == -2141910995) return "SCE_NP_COMMUNITY_SERVER_ERROR_TOO_MANY_RESULTS";
    if (errorCode == -2141910944) return "SCE_NP_COMMUNITY_SERVER_ERROR_TOO_MANY_SAVEDATA_FILES";
    if (errorCode == -2141910931) return "SCE_NP_COMMUNITY_SERVER_ERROR_TOO_MUCH_SAVEDATA_SIZE";
    if (errorCode == -2141910943) return "SCE_NP_COMMUNITY_SERVER_ERROR_TOO_MUCH_TOTAL_SAVEDATA_SIZE";
    if (errorCode == -2141910864) return "SCE_NP_COMMUNITY_SERVER_ERROR_UBS_BEFORE_SERVICE";
    if (errorCode == -2141910863) return "SCE_NP_COMMUNITY_SERVER_ERROR_UBS_END_OF_SERVICE";
    if (errorCode == -2141910862) return "SCE_NP_COMMUNITY_SERVER_ERROR_UBS_MAINTENANCE";
    if (errorCode == -2141910932) return "SCE_NP_COMMUNITY_SERVER_ERROR_UNMATCH_MD5SUM";
    if (errorCode == -2141910946) return "SCE_NP_COMMUNITY_SERVER_ERROR_UNMATCH_SEQUENCE";
    if (errorCode == -2141910933) return "SCE_NP_COMMUNITY_SERVER_ERROR_UNMATCH_SIGNATURE";
    if (errorCode == -2141910785) return "SCE_NP_COMMUNITY_SERVER_ERROR_UNSPECIFIED";
    if (errorCode == -2141910920) return "SCE_NP_COMMUNITY_SERVER_ERROR_UNSUPPORTED_PLATFORM";
    if (errorCode == -2141911026) return "SCE_NP_COMMUNITY_SERVER_ERROR_UPLOADER_DATA_NOT_FOUND";
    if (errorCode == -2141910997) return "SCE_NP_COMMUNITY_SERVER_ERROR_USER_NOT_ASSIGNED";
    if (errorCode == -2141911027) return "SCE_NP_COMMUNITY_SERVER_ERROR_USER_PROFILE_NOT_FOUND";
    if (errorCode == -2141910966) return "SCE_NP_COMMUNITY_SERVER_ERROR_USER_STORAGE_DATA_NOT_FOUND";
    if (errorCode == -2141910968) return "SCE_NP_COMMUNITY_SERVER_ERROR_USER_STORAGE_TITLE_MASTER_NOT_FOUND";
    if (errorCode == -2141911032) return "SCE_NP_COMMUNITY_SERVER_ERROR_VERSION_NOT_SUPPORTED";
    if (errorCode == -2131753424) return "SCE_NP_DRM_CONTENT_ERROR_APPLICATION";
    if (errorCode == -2131754992) return "SCE_NP_DRM_CONTENT_ERROR_BUFFERSIZE";
    if (errorCode == -2131753456) return "SCE_NP_DRM_CONTENT_ERROR_CONTENTDIGEST";
    if (errorCode == -2131753423) return "SCE_NP_DRM_CONTENT_ERROR_CUMULATIVE";
    if (errorCode == -2131753440) return "SCE_NP_DRM_CONTENT_ERROR_CURRENTDIGEST";
    if (errorCode == -2131752445) return "SCE_NP_DRM_CONTENT_ERROR_DELTAFORMAT";
    if (errorCode == -2131752432) return "SCE_NP_DRM_CONTENT_ERROR_DELTAKEYSIZE";
    if (errorCode == -2131753406) return "SCE_NP_DRM_CONTENT_ERROR_DELTALATEST";
    if (errorCode == -2131752446) return "SCE_NP_DRM_CONTENT_ERROR_DELTAOFFSET";
    if (errorCode == -2131753408) return "SCE_NP_DRM_CONTENT_ERROR_DELTAORIGIN";
    if (errorCode == -2131752447) return "SCE_NP_DRM_CONTENT_ERROR_DELTAPATCH";
    if (errorCode == -2131752444) return "SCE_NP_DRM_CONTENT_ERROR_DELTASTATUS";
    if (errorCode == -2131753407) return "SCE_NP_DRM_CONTENT_ERROR_DELTATARGET";
    if (errorCode == -2131752443) return "SCE_NP_DRM_CONTENT_ERROR_DELTAVERSION";
    if (errorCode == -2131753472) return "SCE_NP_DRM_CONTENT_ERROR_DIGESTSHEADER";
    if (errorCode == -2131753470) return "SCE_NP_DRM_CONTENT_ERROR_DIGESTSINDEX";
    if (errorCode == -2131753469) return "SCE_NP_DRM_CONTENT_ERROR_DIGESTSSIZE";
    if (errorCode == -2131753471) return "SCE_NP_DRM_CONTENT_ERROR_DIGESTSVERSION";
    if (errorCode == -2131753981) return "SCE_NP_DRM_CONTENT_ERROR_ENTRYDECRYPT";
    if (errorCode == -2131753982) return "SCE_NP_DRM_CONTENT_ERROR_ENTRYDIGEST";
    if (errorCode == -2131753984) return "SCE_NP_DRM_CONTENT_ERROR_ENTRYINDEX";
    if (errorCode == -2131753983) return "SCE_NP_DRM_CONTENT_ERROR_ENTRYNOTFOUND";
    if (errorCode == -2131755007) return "SCE_NP_DRM_CONTENT_ERROR_FINALIZED";
    if (errorCode == -2131754752) return "SCE_NP_DRM_CONTENT_ERROR_HEADERFORMAT";
    if (errorCode == -2131754751) return "SCE_NP_DRM_CONTENT_ERROR_HEADERSIGN";
    if (errorCode == -2131754750) return "SCE_NP_DRM_CONTENT_ERROR_HEADERVERSION";
    if (errorCode == -2131752960) return "SCE_NP_DRM_CONTENT_ERROR_IMAGEDIGEST";
    if (errorCode == -2131753422) return "SCE_NP_DRM_CONTENT_ERROR_INCREMENTAL";
    if (errorCode == -2131754496) return "SCE_NP_DRM_CONTENT_ERROR_INDEXDIGEST";
    if (errorCode == -2131752448) return "SCE_NP_DRM_CONTENT_ERROR_NODELTAINFO";
    if (errorCode == -2131755006) return "SCE_NP_DRM_CONTENT_ERROR_OBSOLETED";
    if (errorCode == -2131753454) return "SCE_NP_DRM_CONTENT_ERROR_ORIGINCHECK";
    if (errorCode == -2131753455) return "SCE_NP_DRM_CONTENT_ERROR_ORIGINDIGEST";
    if (errorCode == -2131753421) return "SCE_NP_DRM_CONTENT_ERROR_STATUSMISMATCH";
    if (errorCode == -2131753438) return "SCE_NP_DRM_CONTENT_ERROR_TARGETCHECK";
    if (errorCode == -2131753439) return "SCE_NP_DRM_CONTENT_ERROR_TARGETDIGEST";
    if (errorCode == -2131755008) return "SCE_NP_DRM_CONTENT_ERROR_UNSIGNED";
    if (errorCode == -2131755005) return "SCE_NP_DRM_CONTENT_ERROR_UNSUPPORTED";
    if (errorCode == -2138636275) return "SCE_NP_DRM_ERROR_BAD_ACTIVATION";
    if (errorCode == -2138636281) return "SCE_NP_DRM_ERROR_BROKEN_DATA";
    if (errorCode == -2138636278) return "SCE_NP_DRM_ERROR_CONSOLE_MISMATCH";
    if (errorCode == -2138636274) return "SCE_NP_DRM_ERROR_CORRUPTED_STORAGE";
    if (errorCode == -2138636283) return "SCE_NP_DRM_ERROR_INVALID_ARG";
    if (errorCode == -2138636282) return "SCE_NP_DRM_ERROR_INVALID_FORMAT";
    if (errorCode == -2138636279) return "SCE_NP_DRM_ERROR_MAX_ACTIVATION";
    if (errorCode == -2138636276) return "SCE_NP_DRM_ERROR_NOT_ACTIVATED";
    if (errorCode == -2138636280) return "SCE_NP_DRM_ERROR_NOT_FOUND";
    if (errorCode == -2138636273) return "SCE_NP_DRM_ERROR_NOT_INCLUDE_KEYS";
    if (errorCode == -2138636287) return "SCE_NP_DRM_ERROR_NOT_INITIALIZED";
    if (errorCode == -2138636277) return "SCE_NP_DRM_ERROR_NPENV_MISMATCH";
    if (errorCode == -2138636286) return "SCE_NP_DRM_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2138636285) return "SCE_NP_DRM_ERROR_PERM";
    if (errorCode == -2138636284) return "SCE_NP_DRM_ERROR_UNKNOWN_VERSION";
    if (errorCode == -2141913070) return "SCE_NP_ERROR_ABORTED";
    if (errorCode == -2141913077) return "SCE_NP_ERROR_AGE_RESTRICTION";
    if (errorCode == -2141913087) return "SCE_NP_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141913080) return "SCE_NP_ERROR_CALLBACK_ALREADY_REGISTERED";
    if (errorCode == -2141913079) return "SCE_NP_ERROR_CALLBACK_NOT_REGISTERED";
    if (errorCode == -2141913065) return "SCE_NP_ERROR_INCONSISTENT_NP_TITLE_ID";
    if (errorCode == -2141913085) return "SCE_NP_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141913067) return "SCE_NP_ERROR_INVALID_ID";
    if (errorCode == -2141913071) return "SCE_NP_ERROR_INVALID_SIZE";
    if (errorCode == -2141913072) return "SCE_NP_ERROR_LATEST_PATCH_PKG_DOWNLOADED";
    if (errorCode == -2141913073) return "SCE_NP_ERROR_LATEST_PATCH_PKG_EXIST";
    if (errorCode == -2141913075) return "SCE_NP_ERROR_LATEST_SYSTEM_SOFTWARE_EXIST";
    if (errorCode == -2141913074) return "SCE_NP_ERROR_LATEST_SYSTEM_SOFTWARE_EXIST_FOR_TITLE";
    if (errorCode == -2141913076) return "SCE_NP_ERROR_LOGOUT";
    if (errorCode == -2141913086) return "SCE_NP_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141913078) return "SCE_NP_ERROR_NOT_SIGNED_UP";
    if (errorCode == -2141913066) return "SCE_NP_ERROR_NP_TITLE_DAT_NOT_FOUND";
    if (errorCode == -2141913083) return "SCE_NP_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141913064) return "SCE_NP_ERROR_PATCH_NOT_CHECKED";
    if (errorCode == -2141913069) return "SCE_NP_ERROR_REQUEST_MAX";
    if (errorCode == -2141913068) return "SCE_NP_ERROR_REQUEST_NOT_FOUND";
    if (errorCode == -2141913082) return "SCE_NP_ERROR_SIGNED_OUT";
    if (errorCode == -2141913063) return "SCE_NP_ERROR_TITLE_IS_BANNED";
    if (errorCode == -2141913084) return "SCE_NP_ERROR_UNKNOWN_PLATFORM_TYPE";
    if (errorCode == -2141913081) return "SCE_NP_ERROR_USER_NOT_FOUND";
    if (errorCode == -2141872620) return "SCE_NP_EXT_ERROR_ABORTED";
    if (errorCode == -2141872639) return "SCE_NP_EXT_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141872630) return "SCE_NP_EXT_ERROR_BUFFER_OVERFLOW";
    if (errorCode == -2141872629) return "SCE_NP_EXT_ERROR_BUFFER_UNDERFLOW";
    if (errorCode == -2141872608) return "SCE_NP_EXT_ERROR_DECRYPT_STREAM";
    if (errorCode == -2141872601) return "SCE_NP_EXT_ERROR_DIR_NOT_FOUND";
    if (errorCode == -2141872616) return "SCE_NP_EXT_ERROR_FILE_ALREADY_OPENED";
    if (errorCode == -2141872591) return "SCE_NP_EXT_ERROR_FILE_NAME_TOO_LONG";
    if (errorCode == -2141872615) return "SCE_NP_EXT_ERROR_FILE_NOT_FOUND";
    if (errorCode == -2141872617) return "SCE_NP_EXT_ERROR_FILE_NOT_OPENED";
    if (errorCode == -2141872621) return "SCE_NP_EXT_ERROR_HTTP_CONNECTION_NOT_FOUND";
    if (errorCode == -2141872610) return "SCE_NP_EXT_ERROR_HTTP_FILE_ALREADY_OPENED";
    if (errorCode == -2141872609) return "SCE_NP_EXT_ERROR_HTTP_FILE_NOT_FOUND";
    if (errorCode == -2141872611) return "SCE_NP_EXT_ERROR_HTTP_FILE_NOT_OPENED";
    if (errorCode == -2141872627) return "SCE_NP_EXT_ERROR_INSUFFICIENT_BUFFER";
    if (errorCode == -2141872599) return "SCE_NP_EXT_ERROR_INSUFFICIENT_DISK_SPACE";
    if (errorCode == -2141872623) return "SCE_NP_EXT_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141872625) return "SCE_NP_EXT_ERROR_INVALID_HANDLE";
    if (errorCode == -2141872607) return "SCE_NP_EXT_ERROR_INVALID_NPBIND_DAT";
    if (errorCode == -2141872605) return "SCE_NP_EXT_ERROR_INVALID_NPTITLE_DAT";
    if (errorCode == -2141872595) return "SCE_NP_EXT_ERROR_INVALID_RESPONSE";
    if (errorCode == -2141872626) return "SCE_NP_EXT_ERROR_JSON_ITEM_NOT_FOUND";
    if (errorCode == -2141872628) return "SCE_NP_EXT_ERROR_JSON_PARSE_FAILED";
    if (errorCode == -2141872614) return "SCE_NP_EXT_ERROR_MEMORY_EXTEND";
    if (errorCode == -2141872593) return "SCE_NP_EXT_ERROR_NO_IMPL";
    if (errorCode == -2141872638) return "SCE_NP_EXT_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141872603) return "SCE_NP_EXT_ERROR_NP_BIND_DAT_FILE_NOT_FOUND";
    if (errorCode == -2141872600) return "SCE_NP_EXT_ERROR_NP_BIND_INFO_NOT_FOUND";
    if (errorCode == -2141872602) return "SCE_NP_EXT_ERROR_NP_TITLE_DAT_FILE_NOT_FOUND";
    if (errorCode == -2141872637) return "SCE_NP_EXT_ERROR_OBJECT_ALREADY_INITIALIZED";
    if (errorCode == -2141872636) return "SCE_NP_EXT_ERROR_OBJECT_NOT_INITIALIZED";
    if (errorCode == -2141872631) return "SCE_NP_EXT_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141872592) return "SCE_NP_EXT_ERROR_PATH_TOO_LONG";
    if (errorCode == -2141872618) return "SCE_NP_EXT_ERROR_QUEUE_EMPTY";
    if (errorCode == -2141872619) return "SCE_NP_EXT_ERROR_QUEUE_FULL";
    if (errorCode == -2141872594) return "SCE_NP_EXT_ERROR_SERVICE_BASE_URL_NOT_FOUND";
    if (errorCode == -2141872612) return "SCE_NP_EXT_ERROR_STREAM_ALREADY_OPENED";
    if (errorCode == -2141872613) return "SCE_NP_EXT_ERROR_STREAM_NOT_OPENED";
    if (errorCode == -2141872622) return "SCE_NP_EXT_ERROR_TOO_MANY_HTTP_CONNECTION";
    if (errorCode == -2141872624) return "SCE_NP_EXT_ERROR_UNEXPECTED_EOF";
    if (errorCode == -2141872640) return "SCE_NP_EXT_ERROR_UNKNOWN";
    if (errorCode == -2141872596) return "SCE_NP_EXT_ERROR_UNKNOWN_BOOT_TYPE";
    if (errorCode == -2141872606) return "SCE_NP_EXT_ERROR_UNSUPPORTED_NPBIND_DAT";
    if (errorCode == -2141872604) return "SCE_NP_EXT_ERROR_UNSUPPORTED_NPTITLE_DAT";
    if (errorCode == -2141872597) return "SCE_NP_EXT_ERROR_USER_ACCOUNT_NOT_BOUND";
    if (errorCode == -2141872598) return "SCE_NP_EXT_ERROR_USER_NOT_FOUND";
    if (errorCode == -2141872635) return "SCE_NP_EXT_ERROR_WORK_ITEM_ALREADY_REGISTERED";
    if (errorCode == -2141872632) return "SCE_NP_EXT_ERROR_WORK_ITEM_NOT_FOUND";
    if (errorCode == -2141872634) return "SCE_NP_EXT_ERROR_WORKER_ALREADY_STARTED";
    if (errorCode == -2141872633) return "SCE_NP_EXT_ERROR_WORKER_NOT_RUNNING";
    if (errorCode == -2141869049) return "SCE_NP_GRIEF_REPORT_ERROR_ABORTED";
    if (errorCode == -2141869055) return "SCE_NP_GRIEF_REPORT_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141869034) return "SCE_NP_GRIEF_REPORT_ERROR_BAD_RESPONSE";
    if (errorCode == -2141869048) return "SCE_NP_GRIEF_REPORT_ERROR_BODY_TOO_LARGE";
    if (errorCode == -2141869040) return "SCE_NP_GRIEF_REPORT_ERROR_CLIENT_HANDLE_ALREADY_EXISTS";
    if (errorCode == -2141869047) return "SCE_NP_GRIEF_REPORT_ERROR_HTTP_SERVER";
    if (errorCode == -2141869045) return "SCE_NP_GRIEF_REPORT_ERROR_INSUFFICIENT_ARGUMENT";
    if (errorCode == -2141869041) return "SCE_NP_GRIEF_REPORT_ERROR_INVALID_ALIGNMENT";
    if (errorCode == -2141869052) return "SCE_NP_GRIEF_REPORT_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141869044) return "SCE_NP_GRIEF_REPORT_ERROR_INVALID_ID";
    if (errorCode == -2141869042) return "SCE_NP_GRIEF_REPORT_ERROR_INVALID_PARTITION";
    if (errorCode == -2141869046) return "SCE_NP_GRIEF_REPORT_ERROR_INVALID_SIGNATURE";
    if (errorCode == -2141869051) return "SCE_NP_GRIEF_REPORT_ERROR_INVALID_SIZE";
    if (errorCode == -2141869039) return "SCE_NP_GRIEF_REPORT_ERROR_NO_RESOURCE";
    if (errorCode == -2141869054) return "SCE_NP_GRIEF_REPORT_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141869053) return "SCE_NP_GRIEF_REPORT_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141869038) return "SCE_NP_GRIEF_REPORT_ERROR_REQUEST_BEFORE_END";
    if (errorCode == -2141869036) return "SCE_NP_GRIEF_REPORT_ERROR_TOO_MANY_NPID";
    if (errorCode == -2141869050) return "SCE_NP_GRIEF_REPORT_ERROR_TOO_MANY_OBJECTS";
    if (errorCode == -2141869037) return "SCE_NP_GRIEF_REPORT_ERROR_TOO_MANY_SLOTID";
    if (errorCode == -2141869043) return "SCE_NP_GRIEF_REPORT_ERROR_TRANSACTION_ALREADY_END";
    if (errorCode == -2141869035) return "SCE_NP_GRIEF_REPORT_ERROR_UNKNOWN_TYPE";
    if (errorCode == -2141902074) return "SCE_NP_IN_GAME_MESSAGE_ERROR_ABORTED";
    if (errorCode == -2141902071) return "SCE_NP_IN_GAME_MESSAGE_ERROR_EXCEED_RATE_LIMIT";
    if (errorCode == -2141902075) return "SCE_NP_IN_GAME_MESSAGE_ERROR_HANDLE_NOT_FOUND";
    if (errorCode == -2141902078) return "SCE_NP_IN_GAME_MESSAGE_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141902077) return "SCE_NP_IN_GAME_MESSAGE_ERROR_LIB_CONTEXT_NOT_FOUND";
    if (errorCode == -2141902072) return "SCE_NP_IN_GAME_MESSAGE_ERROR_NOT_PREPARED";
    if (errorCode == -2141902076) return "SCE_NP_IN_GAME_MESSAGE_ERROR_NOT_SIGNED_IN";
    if (errorCode == -2141902079) return "SCE_NP_IN_GAME_MESSAGE_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141902073) return "SCE_NP_IN_GAME_MESSAGE_ERROR_SIGNED_IN_USER_NOT_FOUND";
    if (errorCode == -2141870329) return "SCE_NP_IN_GAME_MESSAGE_ERROR_USER_SLOT_FULL";
    if (errorCode == -2141870333) return "SCE_NP_IN_GAME_MESSAGE_SERVICE_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141870330) return "SCE_NP_IN_GAME_MESSAGE_SERVICE_ERROR_CALLBACK_QUEUE_OVERFLOW";
    if (errorCode == -2141870334) return "SCE_NP_IN_GAME_MESSAGE_SERVICE_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141870331) return "SCE_NP_IN_GAME_MESSAGE_SERVICE_ERROR_IPC_CONTEXT_NOT_FOUND";
    if (errorCode == -2141870332) return "SCE_NP_IN_GAME_MESSAGE_SERVICE_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141870335) return "SCE_NP_IN_GAME_MESSAGE_SERVICE_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141872884) return "SCE_NP_IPC_ERROR_ABORTED_REQUEST_ID";
    if (errorCode == -2141872889) return "SCE_NP_IPC_ERROR_ALREADY_CONNECTED";
    if (errorCode == -2141872896) return "SCE_NP_IPC_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141872878) return "SCE_NP_IPC_ERROR_ALREADY_REGISTERED";
    if (errorCode == -2141872885) return "SCE_NP_IPC_ERROR_BUSY_REQUEST_ID";
    if (errorCode == -2141872869) return "SCE_NP_IPC_ERROR_EVF_COND";
    if (errorCode == -2141872893) return "SCE_NP_IPC_ERROR_INTERNAL";
    if (errorCode == -2141872892) return "SCE_NP_IPC_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141872876) return "SCE_NP_IPC_ERROR_INVALID_PARAMETER";
    if (errorCode == -2141872886) return "SCE_NP_IPC_ERROR_INVALID_REQUEST_ID";
    if (errorCode == -2141872873) return "SCE_NP_IPC_ERROR_NO_CALLBACK";
    if (errorCode == -2141872890) return "SCE_NP_IPC_ERROR_NO_OBJECT";
    if (errorCode == -2141872872) return "SCE_NP_IPC_ERROR_NO_SESSION";
    if (errorCode == -2141872888) return "SCE_NP_IPC_ERROR_NOT_CONNECTED";
    if (errorCode == -2141872895) return "SCE_NP_IPC_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141872883) return "SCE_NP_IPC_ERROR_NOT_OUTSTANDING";
    if (errorCode == -2141872877) return "SCE_NP_IPC_ERROR_NOT_REGISTERED";
    if (errorCode == -2141872894) return "SCE_NP_IPC_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141872879) return "SCE_NP_IPC_ERROR_QUEUE_EMPTY";
    if (errorCode == -2141872880) return "SCE_NP_IPC_ERROR_QUEUE_FULL";
    if (errorCode == -2141872868) return "SCE_NP_IPC_ERROR_REQUEST_NOT_FINISHED";
    if (errorCode == -2141872871) return "SCE_NP_IPC_ERROR_SERVICE_ALREADY_INITIALIZED";
    if (errorCode == -2141872874) return "SCE_NP_IPC_ERROR_SERVICE_NOT_FOUND";
    if (errorCode == -2141872870) return "SCE_NP_IPC_ERROR_SERVICE_NOT_INITIALIZED";
    if (errorCode == -2141872882) return "SCE_NP_IPC_ERROR_TIMEOUT";
    if (errorCode == -2141872881) return "SCE_NP_IPC_ERROR_TOO_MANY_CLIENT";
    if (errorCode == -2141872891) return "SCE_NP_IPC_ERROR_TOO_MANY_OBJECTS";
    if (errorCode == -2141872887) return "SCE_NP_IPC_ERROR_TOO_MANY_REQUEST";
    if (errorCode == -2141872875) return "SCE_NP_IPC_ERROR_TOO_MANY_SERVICE";
    if (errorCode == -2141879803) return "SCE_NP_KDC_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141879793) return "SCE_NP_KDC_ERROR_ALREADY_INITIALIZED_GLOBAL";
    if (errorCode == -2141879776) return "SCE_NP_KDC_ERROR_HTTPS_CN_CHECK";
    if (errorCode == -2141879773) return "SCE_NP_KDC_ERROR_HTTPS_INTERNAL";
    if (errorCode == -2141879774) return "SCE_NP_KDC_ERROR_HTTPS_INVALID_CERT";
    if (errorCode == -2141879772) return "SCE_NP_KDC_ERROR_HTTPS_NOT_AFTER_CHECK";
    if (errorCode == -2141879771) return "SCE_NP_KDC_ERROR_HTTPS_NOT_BEFORE_CHECK";
    if (errorCode == -2141879775) return "SCE_NP_KDC_ERROR_HTTPS_UNKNOWN_CA";
    if (errorCode == -2141879805) return "SCE_NP_KDC_ERROR_INSUFFICIENT_BUFFER";
    if (errorCode == -2141879806) return "SCE_NP_KDC_ERROR_INVALID_PARAM";
    if (errorCode == -2141879797) return "SCE_NP_KDC_ERROR_NO_CONSOLE_NUM";
    if (errorCode == -2141879804) return "SCE_NP_KDC_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141879794) return "SCE_NP_KDC_ERROR_NOT_INITIALIZED_GLOBAL";
    if (errorCode == -2141879807) return "SCE_NP_KDC_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141879800) return "SCE_NP_KDC_ERROR_PARAM_NOT_FOUND";
    if (errorCode == -2141879801) return "SCE_NP_KDC_ERROR_PARSE_HEADER";
    if (errorCode == -2141879802) return "SCE_NP_KDC_ERROR_REQUIRED_HEADER_NOT_FOUND";
    if (errorCode == -2141879798) return "SCE_NP_KDC_ERROR_SERVER_RESPONSE";
    if (errorCode == -2141879796) return "SCE_NP_KDC_ERROR_UNKNOWN";
    if (errorCode == -2141879799) return "SCE_NP_KDC_ERROR_UNKNOWN_REASON_CODE";
    if (errorCode == -2141879795) return "SCE_NP_KDC_ERROR_USING_MAX_KDC_ID";
    if (errorCode == -2141879504) return "SCE_NP_KDC_SERVER_ERROR_ACCOUNT_IS_CLOSED";
    if (errorCode == -2141879503) return "SCE_NP_KDC_SERVER_ERROR_ACCOUNT_IS_SUSPENDED";
    if (errorCode == -2141879502) return "SCE_NP_KDC_SERVER_ERROR_ACCOUNT_NEEDS_REAPPROVAL_OF_EULA";
    if (errorCode == -2141879472) return "SCE_NP_KDC_SERVER_ERROR_ACTIVATED_CONSOLE_IS_FULL";
    if (errorCode == -2141879511) return "SCE_NP_KDC_SERVER_ERROR_ACTTYPE_MISMATCH";
    if (errorCode == -2141879532) return "SCE_NP_KDC_SERVER_ERROR_ACTTYPE_NOT_YET_AVAILABLE";
    if (errorCode == -2141879512) return "SCE_NP_KDC_SERVER_ERROR_BAD_CONSOLE_TOKEN";
    if (errorCode == -2141879513) return "SCE_NP_KDC_SERVER_ERROR_CONSOLE_ID_SUSPENDED";
    if (errorCode == -2141879471) return "SCE_NP_KDC_SERVER_ERROR_CONSOLE_NOT_ACTIVATED";
    if (errorCode == -2141879469) return "SCE_NP_KDC_SERVER_ERROR_CONTENT_BOUND_TO_OTHER_CONSOLE";
    if (errorCode == -2141879467) return "SCE_NP_KDC_SERVER_ERROR_CONTENT_IS_NOT_AVAILABLE";
    if (errorCode == -2141879501) return "SCE_NP_KDC_SERVER_ERROR_IAT_VALUE_OUT_OF_RANGE";
    if (errorCode == -2141879516) return "SCE_NP_KDC_SERVER_ERROR_INVALID_CONSOLE_ID";
    if (errorCode == -2141879456) return "SCE_NP_KDC_SERVER_ERROR_INVALID_CONSOLE_RAMDOM";
    if (errorCode == -2141879536) return "SCE_NP_KDC_SERVER_ERROR_INVALID_DATA_LENGTH";
    if (errorCode == -2141879518) return "SCE_NP_KDC_SERVER_ERROR_INVALID_PRODUCT_ID";
    if (errorCode == -2141879520) return "SCE_NP_KDC_SERVER_ERROR_INVALID_SERVICE_ID";
    if (errorCode == -2141879535) return "SCE_NP_KDC_SERVER_ERROR_INVALID_USER_AGENT";
    if (errorCode == -2141879519) return "SCE_NP_KDC_SERVER_ERROR_INVALID_USER_CREDENTIAL";
    if (errorCode == -2141879470) return "SCE_NP_KDC_SERVER_ERROR_PRIMARY_CONSOLE_CANNOT_CHANGED";
    if (errorCode == -2141879550) return "SCE_NP_KDC_SERVER_ERROR_SERVICE_IS_BUSY";
    if (errorCode == -2141879552) return "SCE_NP_KDC_SERVER_ERROR_SERVICE_IS_END";
    if (errorCode == -2141879551) return "SCE_NP_KDC_SERVER_ERROR_SERVICE_STOPS_TEMPORARILY";
    if (errorCode == -2141879424) return "SCE_NP_KDC_SERVER_ERROR_UNKNOWN";
    if (errorCode == -2141879534) return "SCE_NP_KDC_SERVER_ERROR_UNSUPPORTED_VERSION";
    if (errorCode == -2141873406) return "SCE_NP_MANAGER_ERROR_ABORTED";
    if (errorCode == -2141873401) return "SCE_NP_MANAGER_ERROR_ALREADY_BOUND";
    if (errorCode == -2141873395) return "SCE_NP_MANAGER_ERROR_AUTH_WEB_API_SERVICE_END";
    if (errorCode == -2141873394) return "SCE_NP_MANAGER_ERROR_AUTH_WEB_API_SERVICE_UNAVAILABLE";
    if (errorCode == -2141873407) return "SCE_NP_MANAGER_ERROR_BAD_RESPONSE";
    if (errorCode == -2141873387) return "SCE_NP_MANAGER_ERROR_CORRUPTED";
    if (errorCode == -2141873390) return "SCE_NP_MANAGER_ERROR_DATA_DIGEST_NOT_MATCHED";
    if (errorCode == -2141873392) return "SCE_NP_MANAGER_ERROR_DATA_SIZE_NOT_MATCHED";
    if (errorCode == -2141873391) return "SCE_NP_MANAGER_ERROR_DATA_VERSION_NOT_MATCHED";
    if (errorCode == -2141873402) return "SCE_NP_MANAGER_ERROR_ID_NOT_AVAILABLE";
    if (errorCode == -2141873408) return "SCE_NP_MANAGER_ERROR_INTERNAL";
    if (errorCode == -2141873389) return "SCE_NP_MANAGER_ERROR_INVALID_ACCOUNT_ID";
    if (errorCode == -2141873397) return "SCE_NP_MANAGER_ERROR_INVALID_CREDENTIAL";
    if (errorCode == -2141873388) return "SCE_NP_MANAGER_ERROR_INVALID_ONLINE_ID";
    if (errorCode == -2141873405) return "SCE_NP_MANAGER_ERROR_INVALID_TOKEN";
    if (errorCode == -2141873386) return "SCE_NP_MANAGER_ERROR_MULTIPLE_USERS_FOUND";
    if (errorCode == -2141873398) return "SCE_NP_MANAGER_ERROR_NOT_CACHED";
    if (errorCode == -2141873396) return "SCE_NP_MANAGER_ERROR_NP_ENVIRONMENT_NOT_MATCHED";
    if (errorCode == -2141873399) return "SCE_NP_MANAGER_ERROR_PARSE_URI";
    if (errorCode == -2141873404) return "SCE_NP_MANAGER_ERROR_TOO_MANY_OBJECTS";
    if (errorCode == -2141873385) return "SCE_NP_MANAGER_ERROR_USER_LOGGED_OUT";
    if (errorCode == -2141873403) return "SCE_NP_MANAGER_ERROR_VARIANT_ACCOUNT_ID";
    if (errorCode == -2141909974) return "SCE_NP_MATCHING2_ERROR_ABORTED";
    if (errorCode == -2141910014) return "SCE_NP_MATCHING2_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141909980) return "SCE_NP_MATCHING2_ERROR_ALREADY_JOINED";
    if (errorCode == -2141909977) return "SCE_NP_MATCHING2_ERROR_BUSY";
    if (errorCode == -2141909959) return "SCE_NP_MATCHING2_ERROR_CANNOT_ABORT";
    if (errorCode == -2141909986) return "SCE_NP_MATCHING2_ERROR_CONNECTION_CLOSED_BY_SERVER";
    if (errorCode == -2141910011) return "SCE_NP_MATCHING2_ERROR_CONTEXT_ALREADY_EXISTS";
    if (errorCode == -2141910009) return "SCE_NP_MATCHING2_ERROR_CONTEXT_ALREADY_STARTED";
    if (errorCode == -2141910012) return "SCE_NP_MATCHING2_ERROR_CONTEXT_MAX";
    if (errorCode == -2141910010) return "SCE_NP_MATCHING2_ERROR_CONTEXT_NOT_FOUND";
    if (errorCode == -2141910008) return "SCE_NP_MATCHING2_ERROR_CONTEXT_NOT_STARTED";
    if (errorCode == -2141909971) return "SCE_NP_MATCHING2_ERROR_CONTEXT_STOPPED";
    if (errorCode == -2141909989) return "SCE_NP_MATCHING2_ERROR_DESTINATION_DISAPPEARED";
    if (errorCode == -2141909990) return "SCE_NP_MATCHING2_ERROR_INSUFFICIENT_BUFFER";
    if (errorCode == -2141909987) return "SCE_NP_MATCHING2_ERROR_INVALID_ALIGNMENT";
    if (errorCode == -2141910006) return "SCE_NP_MATCHING2_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141909999) return "SCE_NP_MATCHING2_ERROR_INVALID_ATTRIBUTE_ID";
    if (errorCode == -2141909960) return "SCE_NP_MATCHING2_ERROR_INVALID_ATTRIBUTE_SIZE";
    if (errorCode == -2141909993) return "SCE_NP_MATCHING2_ERROR_INVALID_BLOCK_KICK_FLAG";
    if (errorCode == -2141909998) return "SCE_NP_MATCHING2_ERROR_INVALID_CASTTYPE";
    if (errorCode == -2141910005) return "SCE_NP_MATCHING2_ERROR_INVALID_CONTEXT_ID";
    if (errorCode == -2141910002) return "SCE_NP_MATCHING2_ERROR_INVALID_LOBBY_ID";
    if (errorCode == -2141909994) return "SCE_NP_MATCHING2_ERROR_INVALID_MATCHING_SPACE";
    if (errorCode == -2141909996) return "SCE_NP_MATCHING2_ERROR_INVALID_MAX_SLOT";
    if (errorCode == -2141910000) return "SCE_NP_MATCHING2_ERROR_INVALID_MEMBER_ID";
    if (errorCode == -2141909992) return "SCE_NP_MATCHING2_ERROR_INVALID_MESSAGE_TARGET";
    if (errorCode == -2141909995) return "SCE_NP_MATCHING2_ERROR_INVALID_OPT_SIZE";
    if (errorCode == -2141909970) return "SCE_NP_MATCHING2_ERROR_INVALID_REQUEST_PARAMETER";
    if (errorCode == -2141910001) return "SCE_NP_MATCHING2_ERROR_INVALID_ROOM_ID";
    if (errorCode == -2141910004) return "SCE_NP_MATCHING2_ERROR_INVALID_SERVER_ID";
    if (errorCode == -2141909979) return "SCE_NP_MATCHING2_ERROR_INVALID_SESSION_TYPE";
    if (errorCode == -2141909961) return "SCE_NP_MATCHING2_ERROR_INVALID_SLOTGROUP";
    if (errorCode == -2141909997) return "SCE_NP_MATCHING2_ERROR_INVALID_SORT_METHOD";
    if (errorCode == -2141910003) return "SCE_NP_MATCHING2_ERROR_INVALID_WORLD_ID";
    if (errorCode == -2141909981) return "SCE_NP_MATCHING2_ERROR_JOINED_SESSION_MAX";
    if (errorCode == -2141909964) return "SCE_NP_MATCHING2_ERROR_KEEPALIVE_TIMEOUT";
    if (errorCode == -2141909965) return "SCE_NP_MATCHING2_ERROR_LOBBY_MEMBER_NOT_FOUND";
    if (errorCode == -2141909966) return "SCE_NP_MATCHING2_ERROR_LOBBY_NOT_FOUND";
    if (errorCode == -2141909975) return "SCE_NP_MATCHING2_ERROR_NOT_ALLOWED";
    if (errorCode == -2141910013) return "SCE_NP_MATCHING2_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141909969) return "SCE_NP_MATCHING2_ERROR_NOT_NP_SIGN_IN";
    if (errorCode == -2141909978) return "SCE_NP_MATCHING2_ERROR_NP_SIGNED_OUT";
    if (errorCode == -2141910015) return "SCE_NP_MATCHING2_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141909991) return "SCE_NP_MATCHING2_ERROR_RANGE_FILTER_MAX";
    if (errorCode == -2141909973) return "SCE_NP_MATCHING2_ERROR_REQUEST_NOT_FOUND";
    if (errorCode == -2141909988) return "SCE_NP_MATCHING2_ERROR_REQUEST_TIMEOUT";
    if (errorCode == -2141909967) return "SCE_NP_MATCHING2_ERROR_ROOM_MEMBER_NOT_FOUND";
    if (errorCode == -2141909968) return "SCE_NP_MATCHING2_ERROR_ROOM_NOT_FOUND";
    if (errorCode == -2141909976) return "SCE_NP_MATCHING2_ERROR_SERVER_NOT_AVAILABLE";
    if (errorCode == -2141910007) return "SCE_NP_MATCHING2_ERROR_SERVER_NOT_FOUND";
    if (errorCode == -2141909972) return "SCE_NP_MATCHING2_ERROR_SESSION_DESTROYED";
    if (errorCode == -2141909958) return "SCE_NP_MATCHING2_ERROR_SESSION_NOT_FOUND";
    if (errorCode == -2141909984) return "SCE_NP_MATCHING2_ERROR_SSL_HANDSHAKE";
    if (errorCode == -2141909982) return "SCE_NP_MATCHING2_ERROR_SSL_RECV";
    if (errorCode == -2141909983) return "SCE_NP_MATCHING2_ERROR_SSL_SEND";
    if (errorCode == -2141909985) return "SCE_NP_MATCHING2_ERROR_SSL_VERIFY_FAILED";
    if (errorCode == -2141909962) return "SCE_NP_MATCHING2_ERROR_TIMEDOUT";
    if (errorCode == -2141909963) return "SCE_NP_MATCHING2_ERROR_TIMEOUT_TOO_SHORT";
    if (errorCode == -2141909712) return "SCE_NP_MATCHING2_SERVER_ERROR_ALREADY_JOINED";
    if (errorCode == -2141909759) return "SCE_NP_MATCHING2_SERVER_ERROR_BAD_REQUEST";
    if (errorCode == -2141909752) return "SCE_NP_MATCHING2_SERVER_ERROR_BLOCKED";
    if (errorCode == -2141909709) return "SCE_NP_MATCHING2_SERVER_ERROR_BLOCKED_USER_IN_ROOM";
    if (errorCode == -2141909757) return "SCE_NP_MATCHING2_SERVER_ERROR_BUSY";
    if (errorCode == -2141909745) return "SCE_NP_MATCHING2_SERVER_ERROR_CLOSED";
    if (errorCode == -2141909720) return "SCE_NP_MATCHING2_SERVER_ERROR_CONSOLE_BANNED";
    if (errorCode == -2141909714) return "SCE_NP_MATCHING2_SERVER_ERROR_DUPLICATE_GROUP_LABEL";
    if (errorCode == -2141909756) return "SCE_NP_MATCHING2_SERVER_ERROR_END_OF_SERVICE";
    if (errorCode == -2141909747) return "SCE_NP_MATCHING2_SERVER_ERROR_ENTITLEMENT_REQUIRED";
    if (errorCode == -2141909748) return "SCE_NP_MATCHING2_SERVER_ERROR_EXPIRED_TICKET";
    if (errorCode == -2141909753) return "SCE_NP_MATCHING2_SERVER_ERROR_FORBIDDEN";
    if (errorCode == -2141909733) return "SCE_NP_MATCHING2_SERVER_ERROR_GROUP_FULL";
    if (errorCode == -2141909731) return "SCE_NP_MATCHING2_SERVER_ERROR_GROUP_PASSWORD_MISMATCH";
    if (errorCode == -2141909755) return "SCE_NP_MATCHING2_SERVER_ERROR_INTERNAL_SERVER_ERROR";
    if (errorCode == -2141909716) return "SCE_NP_MATCHING2_SERVER_ERROR_INVALID_GROUP_SLOT_NUM";
    if (errorCode == -2141909715) return "SCE_NP_MATCHING2_SERVER_ERROR_INVALID_PASSWORD_SLOT_MASK";
    if (errorCode == -2141909749) return "SCE_NP_MATCHING2_SERVER_ERROR_INVALID_SIGNATURE";
    if (errorCode == -2141909750) return "SCE_NP_MATCHING2_SERVER_ERROR_INVALID_TICKET";
    if (errorCode == -2141909723) return "SCE_NP_MATCHING2_SERVER_ERROR_LOBBY_ALREADY_EXIST";
    if (errorCode == -2141909736) return "SCE_NP_MATCHING2_SERVER_ERROR_LOBBY_FULL";
    if (errorCode == -2141909711) return "SCE_NP_MATCHING2_SERVER_ERROR_NAT_TYPE_MISMATCH";
    if (errorCode == -2141909717) return "SCE_NP_MATCHING2_SERVER_ERROR_NO_PASSWORD";
    if (errorCode == -2141909719) return "SCE_NP_MATCHING2_SERVER_ERROR_NO_ROOMGROUP";
    if (errorCode == -2141909746) return "SCE_NP_MATCHING2_SERVER_ERROR_NO_SUCH_CONTEXT";
    if (errorCode == -2141909718) return "SCE_NP_MATCHING2_SERVER_ERROR_NO_SUCH_GROUP";
    if (errorCode == -2141909742) return "SCE_NP_MATCHING2_SERVER_ERROR_NO_SUCH_LOBBY";
    if (errorCode == -2141909740) return "SCE_NP_MATCHING2_SERVER_ERROR_NO_SUCH_LOBBY_INSTANCE";
    if (errorCode == -2141909741) return "SCE_NP_MATCHING2_SERVER_ERROR_NO_SUCH_ROOM";
    if (errorCode == -2141909739) return "SCE_NP_MATCHING2_SERVER_ERROR_NO_SUCH_ROOM_INSTANCE";
    if (errorCode == -2141909744) return "SCE_NP_MATCHING2_SERVER_ERROR_NO_SUCH_TITLE";
    if (errorCode == -2141909732) return "SCE_NP_MATCHING2_SERVER_ERROR_NO_SUCH_USER";
    if (errorCode == -2141909743) return "SCE_NP_MATCHING2_SERVER_ERROR_NO_SUCH_WORLD";
    if (errorCode == -2141909737) return "SCE_NP_MATCHING2_SERVER_ERROR_PASSWORD_MISMATCH";
    if (errorCode == -2141909754) return "SCE_NP_MATCHING2_SERVER_ERROR_PLAYER_BANNED";
    if (errorCode == -2141909713) return "SCE_NP_MATCHING2_SERVER_ERROR_REQUEST_OVERFLOW";
    if (errorCode == -2141909722) return "SCE_NP_MATCHING2_SERVER_ERROR_ROOM_ALREADY_EXIST";
    if (errorCode == -2141909735) return "SCE_NP_MATCHING2_SERVER_ERROR_ROOM_FULL";
    if (errorCode == -2141909710) return "SCE_NP_MATCHING2_SERVER_ERROR_ROOM_INCONSISTENCY";
    if (errorCode == -2141909758) return "SCE_NP_MATCHING2_SERVER_ERROR_SERVICE_UNAVAILABLE";
    if (errorCode == -2141909730) return "SCE_NP_MATCHING2_SERVER_ERROR_TITLE_PASSPHRASE_MISMATCH";
    if (errorCode == -2141909751) return "SCE_NP_MATCHING2_SERVER_ERROR_UNSUPPORTED_NP_ENV";
    if (errorCode == -2141909502) return "SCE_NP_MATCHING2_SIGNALING_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141909484) return "SCE_NP_MATCHING2_SIGNALING_ERROR_CONN_IN_PROGRESS";
    if (errorCode == -2141909490) return "SCE_NP_MATCHING2_SIGNALING_ERROR_CONN_NOT_FOUND";
    if (errorCode == -2141909491) return "SCE_NP_MATCHING2_SIGNALING_ERROR_CONNID_NOT_AVAILABLE";
    if (errorCode == -2141909486) return "SCE_NP_MATCHING2_SIGNALING_ERROR_CTX_MAX";
    if (errorCode == -2141909499) return "SCE_NP_MATCHING2_SIGNALING_ERROR_CTX_NOT_FOUND";
    if (errorCode == -2141909500) return "SCE_NP_MATCHING2_SIGNALING_ERROR_CTXID_NOT_AVAILABLE";
    if (errorCode == -2141909483) return "SCE_NP_MATCHING2_SIGNALING_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141909494) return "SCE_NP_MATCHING2_SIGNALING_ERROR_INVALID_NAMESPACE";
    if (errorCode == -2141909479) return "SCE_NP_MATCHING2_SIGNALING_ERROR_MATCHING2_PEER_NOT_FOUND";
    if (errorCode == -2141909493) return "SCE_NP_MATCHING2_SIGNALING_ERROR_NETINFO_NOT_AVAILABLE";
    if (errorCode == -2141909503) return "SCE_NP_MATCHING2_SIGNALING_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141909501) return "SCE_NP_MATCHING2_SIGNALING_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141909482) return "SCE_NP_MATCHING2_SIGNALING_ERROR_OWN_NP_ID";
    if (errorCode == -2141909496) return "SCE_NP_MATCHING2_SIGNALING_ERROR_PARSER_CREATE_FAILED";
    if (errorCode == -2141909495) return "SCE_NP_MATCHING2_SIGNALING_ERROR_PARSER_FAILED";
    if (errorCode == -2141909492) return "SCE_NP_MATCHING2_SIGNALING_ERROR_PEER_NOT_RESPONDING";
    if (errorCode == -2141909489) return "SCE_NP_MATCHING2_SIGNALING_ERROR_PEER_UNREACHABLE";
    if (errorCode == -2141909497) return "SCE_NP_MATCHING2_SIGNALING_ERROR_REQ_NOT_FOUND";
    if (errorCode == -2141909498) return "SCE_NP_MATCHING2_SIGNALING_ERROR_REQID_NOT_AVAILABLE";
    if (errorCode == -2141909485) return "SCE_NP_MATCHING2_SIGNALING_ERROR_RESULT_NOT_FOUND";
    if (errorCode == -2141909480) return "SCE_NP_MATCHING2_SIGNALING_ERROR_TERMINATED_BY_MYSELF";
    if (errorCode == -2141909488) return "SCE_NP_MATCHING2_SIGNALING_ERROR_TERMINATED_BY_PEER";
    if (errorCode == -2141909487) return "SCE_NP_MATCHING2_SIGNALING_ERROR_TIMEOUT";
    if (errorCode == -2141909481) return "SCE_NP_MATCHING2_SIGNALING_ERROR_TOO_MANY_CONN";
    if (errorCode == -2141873919) return "SCE_NP_MATCHING2_SIGNALING_INTERNAL_ERROR_CONN_NOT_ACTIVATED";
    if (errorCode == -2141875710) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141875694) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_BANNED";
    if (errorCode == -2141875693) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_BLOCK_LIST";
    if (errorCode == -2141875680) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_BLOCKLIST_IN_PROGRESS";
    if (errorCode == -2141875675) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_BLOCKLIST_RETREIVAL_FAILED";
    if (errorCode == -2141875695) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_CONNECTION_SIGNED_OUT";
    if (errorCode == -2141875697) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_CONNECTION_TERMINATED";
    if (errorCode == -2141875696) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_CONNECTION_TIMED_OUT";
    if (errorCode == -2141875683) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_CREATE_IN_PROGRESS";
    if (errorCode == -2141875699) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_CREATE_JOIN_GENERAL";
    if (errorCode == -2141875678) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_IN_A_PARTY";
    if (errorCode == -2141875708) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141875673) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_INVALID_BLOCKLIST_STATUS_CODE";
    if (errorCode == -2141875672) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_INVALID_FRIENDSLIST_STATUS_CODE";
    if (errorCode == -2141875706) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_INVALID_STATE";
    if (errorCode == -2141875674) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_INVALID_WEBAPI_STATUS_CODE";
    if (errorCode == -2141875668) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_INVITE_IN_PROGRESS";
    if (errorCode == -2141875700) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_JOIN_GENERAL";
    if (errorCode == -2141875682) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_JOIN_IN_PROGRESS";
    if (errorCode == -2141875679) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_KICK_IN_PROGRESS";
    if (errorCode == -2141875681) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_LEAVE_IN_PROGRESS";
    if (errorCode == -2141875671) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_M2_CONTEXT_IN_PROGRESS";
    if (errorCode == -2141875686) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_MATCHING2_CONNECTION_LOST";
    if (errorCode == -2141875702) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_MATCHING2_ERROR";
    if (errorCode == -2141875687) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_NO_FRIENDS_IN_A_PARTY";
    if (errorCode == -2141875676) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_NO_IP_ADDRESS";
    if (errorCode == -2141875703) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_NO_SUCH_ROOM";
    if (errorCode == -2141875692) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_NO_SUCH_USER";
    if (errorCode == -2141875677) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_NOT_IN_A_PARTY";
    if (errorCode == -2141875709) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141875688) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_NP_INVALID_USER";
    if (errorCode == -2141875689) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_NP_STATE_SIGNED_OUT";
    if (errorCode == -2141875690) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_NP_STATE_UNKNOWN";
    if (errorCode == -2141875707) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141875669) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_PARENTAL_CHECK_CONTROL_FAILED";
    if (errorCode == -2141875670) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_PARENTAL_CHECK_CONTROL_IN_PROGRESS";
    if (errorCode == -2141875701) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_REQUEST_PENDING";
    if (errorCode == -2141875704) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_ROOM_FULL";
    if (errorCode == -2141875691) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_SEND_BUSY";
    if (errorCode == -2141875698) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_SERVER_MAINTENANCE";
    if (errorCode == -2141875711) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_UNKNOWN";
    if (errorCode == -2141875705) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_UNKNOWN_NPID";
    if (errorCode == -2141875685) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_VULGAR_CHAT_MSG";
    if (errorCode == -2141875684) return "SCE_NP_PARTY_API_FOR_SHELL_ERROR_VULGAR_LOOKUP";
    if (errorCode == -2141903614) return "SCE_NP_PARTY_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141903612) return "SCE_NP_PARTY_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141903598) return "SCE_NP_PARTY_ERROR_INVALID_LOCAL_PARTY_MEMBER";
    if (errorCode == -2141903597) return "SCE_NP_PARTY_ERROR_INVALID_PROCESS_TYPE";
    if (errorCode == -2141903599) return "SCE_NP_PARTY_ERROR_INVALID_STATE";
    if (errorCode == -2141903608) return "SCE_NP_PARTY_ERROR_MEMBER_NOT_FOUND";
    if (errorCode == -2141903610) return "SCE_NP_PARTY_ERROR_NOT_IN_PARTY";
    if (errorCode == -2141903613) return "SCE_NP_PARTY_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141903611) return "SCE_NP_PARTY_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141903607) return "SCE_NP_PARTY_ERROR_SEND_BUSY";
    if (errorCode == -2141903600) return "SCE_NP_PARTY_ERROR_SEND_OUT_OF_CONTEXT";
    if (errorCode == -2141903615) return "SCE_NP_PARTY_ERROR_UNKNOWN";
    if (errorCode == -2141903609) return "SCE_NP_PARTY_ERROR_VOICE_NOT_ENABLED";
    if (errorCode == -2141869821) return "SCE_NP_PLUS_LOGGER_ERROR_ABORTED";
    if (errorCode == -2141869822) return "SCE_NP_PLUS_LOGGER_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141869816) return "SCE_NP_PLUS_LOGGER_ERROR_ALREADY_REGISTRED";
    if (errorCode == -2141869817) return "SCE_NP_PLUS_LOGGER_ERROR_BAD_RESPONSE";
    if (errorCode == -2141869820) return "SCE_NP_PLUS_LOGGER_ERROR_INTERNAL";
    if (errorCode == -2141869819) return "SCE_NP_PLUS_LOGGER_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141869812) return "SCE_NP_PLUS_LOGGER_ERROR_NO_SUCH_APPLICATION";
    if (errorCode == -2141869815) return "SCE_NP_PLUS_LOGGER_ERROR_NO_SUCH_REQUEST";
    if (errorCode == -2141869814) return "SCE_NP_PLUS_LOGGER_ERROR_NO_SUCH_USER";
    if (errorCode == -2141869823) return "SCE_NP_PLUS_LOGGER_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141869818) return "SCE_NP_PLUS_LOGGER_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141869811) return "SCE_NP_PLUS_LOGGER_ERROR_TOO_MANY_APPLICATIONS";
    if (errorCode == -2141869813) return "SCE_NP_PLUS_LOGGER_ERROR_TOO_MANY_USERS";
    if (errorCode == -2141870584) return "SCE_NP_PRESENCE_ERROR_ABORTED";
    if (errorCode == -2141870589) return "SCE_NP_PRESENCE_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141870586) return "SCE_NP_PRESENCE_ERROR_CALLBACK_QUEUE_OVERFLOW";
    if (errorCode == -2141870590) return "SCE_NP_PRESENCE_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141870587) return "SCE_NP_PRESENCE_ERROR_IPC_CONTEXT_NOT_FOUND";
    if (errorCode == -2141870588) return "SCE_NP_PRESENCE_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141870591) return "SCE_NP_PRESENCE_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141870585) return "SCE_NP_PRESENCE_ERROR_REQUEST_NOT_FOUND";
    if (errorCode == -2141872112) return "SCE_NP_PUSH_ERROR_ABORTED";
    if (errorCode == -2141872127) return "SCE_NP_PUSH_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141872120) return "SCE_NP_PUSH_ERROR_ALREADY_STARTED";
    if (errorCode == -2141872089) return "SCE_NP_PUSH_ERROR_CALLBACK_ALREADY_REGISTERED";
    if (errorCode == -2141872111) return "SCE_NP_PUSH_ERROR_DISCONNECTED";
    if (errorCode == -2141872087) return "SCE_NP_PUSH_ERROR_DISCONNECTED_INVALID_MSG";
    if (errorCode == -2141872121) return "SCE_NP_PUSH_ERROR_FIELD_NOT_FOUND";
    if (errorCode == -2141872128) return "SCE_NP_PUSH_ERROR_INTERNAL";
    if (errorCode == -2141872125) return "SCE_NP_PUSH_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141872117) return "SCE_NP_PUSH_ERROR_INVALID_CTL_STATE";
    if (errorCode == -2141872094) return "SCE_NP_PUSH_ERROR_INVALID_LOGIN_TIME";
    if (errorCode == -2141872123) return "SCE_NP_PUSH_ERROR_INVALID_RESPONSE";
    if (errorCode == -2141872116) return "SCE_NP_PUSH_ERROR_INVALID_SESSION_STATE";
    if (errorCode == -2141872101) return "SCE_NP_PUSH_ERROR_INVALID_TRAN_ID";
    if (errorCode == -2141872106) return "SCE_NP_PUSH_ERROR_IPC_PROCESS_CONTEXT_NOT_FOUND";
    if (errorCode == -2141872103) return "SCE_NP_PUSH_ERROR_IPC_QUEUE_FULL";
    if (errorCode == -2141872105) return "SCE_NP_PUSH_ERROR_IPC_USER_CONTEXT_NOT_FOUND";
    if (errorCode == -2141872086) return "SCE_NP_PUSH_ERROR_NETWORK_NOT_AVAILABLE";
    if (errorCode == -2141872104) return "SCE_NP_PUSH_ERROR_NO_PACKET";
    if (errorCode == -2141872113) return "SCE_NP_PUSH_ERROR_NO_SIGNEDIN_USER";
    if (errorCode == -2141872126) return "SCE_NP_PUSH_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141872085) return "SCE_NP_PUSH_ERROR_NOT_SIGNED_IN";
    if (errorCode == -2141872119) return "SCE_NP_PUSH_ERROR_NOT_STARTED";
    if (errorCode == -2141872124) return "SCE_NP_PUSH_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141872099) return "SCE_NP_PUSH_ERROR_PARSE_ERROR_SOURCE";
    if (errorCode == -2141872122) return "SCE_NP_PUSH_ERROR_PARSE_PACKET";
    if (errorCode == -2141872098) return "SCE_NP_PUSH_ERROR_PARSE_QUERY_TYPE";
    if (errorCode == -2141872088) return "SCE_NP_PUSH_ERROR_PARSE_RETRY_INTERVAL";
    if (errorCode == -2141872100) return "SCE_NP_PUSH_ERROR_PARSE_RETURN_CODE";
    if (errorCode == -2141872097) return "SCE_NP_PUSH_ERROR_QUERY_RESPONSE_CLIENT_ERROR";
    if (errorCode == -2141872096) return "SCE_NP_PUSH_ERROR_QUERY_RESPONSE_INVALID_ERROR_SOURCE";
    if (errorCode == -2141872095) return "SCE_NP_PUSH_ERROR_QUERY_RESPONSE_INVALID_QUERY_TYPE";
    if (errorCode == -2141872110) return "SCE_NP_PUSH_ERROR_REQUEST_TIMEOUT";
    if (errorCode == -2141872114) return "SCE_NP_PUSH_ERROR_SERVER_ERROR";
    if (errorCode == -2141872091) return "SCE_NP_PUSH_ERROR_SERVICE_BASE_URL_NOT_FOUND";
    if (errorCode == -2141872102) return "SCE_NP_PUSH_ERROR_SESSION_NOT_ESTABLISHED";
    if (errorCode == -2141872118) return "SCE_NP_PUSH_ERROR_SESSION_NOT_FOUND";
    if (errorCode == -2141872107) return "SCE_NP_PUSH_ERROR_STOPPED";
    if (errorCode == -2141872090) return "SCE_NP_PUSH_ERROR_TOO_LONG_DATATYPE";
    if (errorCode == -2141872115) return "SCE_NP_PUSH_ERROR_TOO_MANY_USERS";
    if (errorCode == -2141872084) return "SCE_NP_PUSH_ERROR_UNKNOWN_BIND_USER_STATUS";
    if (errorCode == -2141872109) return "SCE_NP_PUSH_ERROR_USER_NOT_FOUND";
    if (errorCode == -2141872108) return "SCE_NP_PUSH_ERROR_USER_NOT_ONLINE";
    if (errorCode == -2141872092) return "SCE_NP_PUSH_ERROR_USER_REQUEST_ABORTED";
    if (errorCode == -2141872093) return "SCE_NP_PUSH_ERROR_USER_REQUEST_TIMEOUT";
    if (errorCode == -2141868796) return "SCE_NP_SERVICE_CHECKER_ERROR_ABORTED";
    if (errorCode == -2141868799) return "SCE_NP_SERVICE_CHECKER_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141868793) return "SCE_NP_SERVICE_CHECKER_ERROR_CONFLICT";
    if (errorCode == -2141868791) return "SCE_NP_SERVICE_CHECKER_ERROR_FILE_MALFORMED";
    if (errorCode == -2141868790) return "SCE_NP_SERVICE_CHECKER_ERROR_FILE_UNSUPPORTED";
    if (errorCode == -2141868792) return "SCE_NP_SERVICE_CHECKER_ERROR_HTTP_SERVER";
    if (errorCode == -2141868789) return "SCE_NP_SERVICE_CHECKER_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141868794) return "SCE_NP_SERVICE_CHECKER_ERROR_INVALID_REQUEST_ID";
    if (errorCode == -2141868797) return "SCE_NP_SERVICE_CHECKER_ERROR_NO_MEMORY";
    if (errorCode == -2141868798) return "SCE_NP_SERVICE_CHECKER_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141868795) return "SCE_NP_SERVICE_CHECKER_ERROR_TOO_MANY_REQUEST";
    if (errorCode == -2141903102) return "SCE_NP_SIGNALING_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141903084) return "SCE_NP_SIGNALING_ERROR_CONN_IN_PROGRESS";
    if (errorCode == -2141903090) return "SCE_NP_SIGNALING_ERROR_CONN_NOT_FOUND";
    if (errorCode == -2141903091) return "SCE_NP_SIGNALING_ERROR_CONNID_NOT_AVAILABLE";
    if (errorCode == -2141903086) return "SCE_NP_SIGNALING_ERROR_CTX_MAX";
    if (errorCode == -2141903099) return "SCE_NP_SIGNALING_ERROR_CTX_NOT_FOUND";
    if (errorCode == -2141903100) return "SCE_NP_SIGNALING_ERROR_CTXID_NOT_AVAILABLE";
    if (errorCode == -2141903078) return "SCE_NP_SIGNALING_ERROR_EXCEED_RATE_LIMIT";
    if (errorCode == -2141903083) return "SCE_NP_SIGNALING_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141903094) return "SCE_NP_SIGNALING_ERROR_INVALID_NAMESPACE";
    if (errorCode == -2141903093) return "SCE_NP_SIGNALING_ERROR_NETINFO_NOT_AVAILABLE";
    if (errorCode == -2141903103) return "SCE_NP_SIGNALING_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141903101) return "SCE_NP_SIGNALING_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141903082) return "SCE_NP_SIGNALING_ERROR_OWN_NP_ID";
    if (errorCode == -2141903096) return "SCE_NP_SIGNALING_ERROR_PARSER_CREATE_FAILED";
    if (errorCode == -2141903095) return "SCE_NP_SIGNALING_ERROR_PARSER_FAILED";
    if (errorCode == -2141903092) return "SCE_NP_SIGNALING_ERROR_PEER_NOT_RESPONDING";
    if (errorCode == -2141903089) return "SCE_NP_SIGNALING_ERROR_PEER_UNREACHABLE";
    if (errorCode == -2141903079) return "SCE_NP_SIGNALING_ERROR_PROHIBITED_TO_USE";
    if (errorCode == -2141903097) return "SCE_NP_SIGNALING_ERROR_REQ_NOT_FOUND";
    if (errorCode == -2141903098) return "SCE_NP_SIGNALING_ERROR_REQID_NOT_AVAILABLE";
    if (errorCode == -2141903085) return "SCE_NP_SIGNALING_ERROR_RESULT_NOT_FOUND";
    if (errorCode == -2141903080) return "SCE_NP_SIGNALING_ERROR_TERMINATED_BY_MYSELF";
    if (errorCode == -2141903088) return "SCE_NP_SIGNALING_ERROR_TERMINATED_BY_PEER";
    if (errorCode == -2141903087) return "SCE_NP_SIGNALING_ERROR_TIMEOUT";
    if (errorCode == -2141903081) return "SCE_NP_SIGNALING_ERROR_TOO_MANY_CONN";
    if (errorCode == -2141874680) return "SCE_NP_SIGNALING_INTERNAL_ERROR_ALLOCATOR";
    if (errorCode == -2141874678) return "SCE_NP_SIGNALING_INTERNAL_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141874673) return "SCE_NP_SIGNALING_INTERNAL_ERROR_CALLBACK_QUEUE_OVERFLOW";
    if (errorCode == -2141874684) return "SCE_NP_SIGNALING_INTERNAL_ERROR_CONN_NOT_ACTIVATED";
    if (errorCode == -2141874686) return "SCE_NP_SIGNALING_INTERNAL_ERROR_DATA_TOO_BIG";
    if (errorCode == -2141874685) return "SCE_NP_SIGNALING_INTERNAL_ERROR_INVALID_ACTION";
    if (errorCode == -2141874687) return "SCE_NP_SIGNALING_INTERNAL_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141874674) return "SCE_NP_SIGNALING_INTERNAL_ERROR_INVALID_DATA_TYPE";
    if (errorCode == -2141874681) return "SCE_NP_SIGNALING_INTERNAL_ERROR_INVALID_NAMESPACE";
    if (errorCode == -2141874679) return "SCE_NP_SIGNALING_INTERNAL_ERROR_IPC_CONTEXT_NOT_FOUND";
    if (errorCode == -2141874677) return "SCE_NP_SIGNALING_INTERNAL_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141874683) return "SCE_NP_SIGNALING_INTERNAL_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141874682) return "SCE_NP_SIGNALING_INTERNAL_ERROR_PARSER_FAILED";
    if (errorCode == -2141874675) return "SCE_NP_SIGNALING_INTERNAL_ERROR_XMPP_IPC_INVALID_ID";
    if (errorCode == -2141874676) return "SCE_NP_SIGNALING_INTERNAL_ERROR_XMPP_IPC_INVALID_MSG_TYPE";
    if (errorCode == -2141874559) return "SCE_NP_SIGNALING_SERVER_ERROR_UNKNOWN";
    if (errorCode == -2141875198) return "SCE_NP_SNS_ERROR_ACCOUNT_NOT_BOUND";
    if (errorCode == -2141875200) return "SCE_NP_SNS_ERROR_INTERNAL";
    if (errorCode == -2141875199) return "SCE_NP_SNS_ERROR_PERMISSION_NOT_ALLOWED";
    if (errorCode == -2141875197) return "SCE_NP_SNS_ERROR_UNKNOWN_SERVER_ERROR";
    if (errorCode == -2133131261) return "SCE_NP_SNS_FACEBOOK_DIALOG_ERROR_ACCESS_NOT_ALLOWED";
    if (errorCode == -2133131263) return "SCE_NP_SNS_FACEBOOK_DIALOG_ERROR_INTERNAL";
    if (errorCode == -2133131262) return "SCE_NP_SNS_FACEBOOK_DIALOG_ERROR_NOT_SIGNIN";
    if (errorCode == -2133131260) return "SCE_NP_SNS_FACEBOOK_DIALOG_ERROR_UGM_RESTRICTION";
    if (errorCode == -2141903354) return "SCE_NP_SNS_FACEBOOK_ERROR_ABORTED";
    if (errorCode == -2141903353) return "SCE_NP_SNS_FACEBOOK_ERROR_ACCOUNT_NOT_BOUND";
    if (errorCode == -2141903352) return "SCE_NP_SNS_FACEBOOK_ERROR_CANCELED_BY_SYSTEM";
    if (errorCode == -2141903356) return "SCE_NP_SNS_FACEBOOK_ERROR_EXCEEDS_MAX";
    if (errorCode == -2141903358) return "SCE_NP_SNS_FACEBOOK_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141903357) return "SCE_NP_SNS_FACEBOOK_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141903351) return "SCE_NP_SNS_FACEBOOK_ERROR_SUB_ACCOUNT";
    if (errorCode == -2141903355) return "SCE_NP_SNS_FACEBOOK_ERROR_UGM_RESTRICTION";
    if (errorCode == -2141903359) return "SCE_NP_SNS_FACEBOOK_ERROR_UNKNOWN";
    if (errorCode == -2141870845) return "SCE_NP_TICKET_PARSER_ERROR_ENTITLEMENT_NOT_FOUND";
    if (errorCode == -2141870846) return "SCE_NP_TICKET_PARSER_ERROR_PARAM_NOT_FOUND";
    if (errorCode == -2141870847) return "SCE_NP_TICKET_PARSER_ERROR_UNSUPPORTED_TICKET_VERSION";
    if (errorCode == -2141869560) return "SCE_NP_TITLE_METADATA_ERROR_ABORTED";
    if (errorCode == -2141869566) return "SCE_NP_TITLE_METADATA_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141869558) return "SCE_NP_TITLE_METADATA_ERROR_BAD_RESPONSE";
    if (errorCode == -2141869561) return "SCE_NP_TITLE_METADATA_ERROR_BUSY";
    if (errorCode == -2141869562) return "SCE_NP_TITLE_METADATA_ERROR_INTERNAL";
    if (errorCode == -2141869565) return "SCE_NP_TITLE_METADATA_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141869564) return "SCE_NP_TITLE_METADATA_ERROR_INVALID_SIZE";
    if (errorCode == -2141869559) return "SCE_NP_TITLE_METADATA_ERROR_NO_SUCH_REQUEST";
    if (errorCode == -2141869556) return "SCE_NP_TITLE_METADATA_ERROR_NOT_FOUND";
    if (errorCode == -2141869567) return "SCE_NP_TITLE_METADATA_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141869563) return "SCE_NP_TITLE_METADATA_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141869557) return "SCE_NP_TITLE_METADATA_ERROR_PARSER_FAILED";
    if (errorCode == -2141907449) return "SCE_NP_TROPHY_ERROR_ABORT";
    if (errorCode == -2141907442) return "SCE_NP_TROPHY_ERROR_ACCOUNTID_NOT_MATCH";
    if (errorCode == -2141907454) return "SCE_NP_TROPHY_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141907440) return "SCE_NP_TROPHY_ERROR_ALREADY_REGISTERED";
    if (errorCode == -2141907230) return "SCE_NP_TROPHY_ERROR_APPLICATION_CONTEXT_ALREADY_EXISTS";
    if (errorCode == -2141907229) return "SCE_NP_TROPHY_ERROR_APPLICATION_CONTEXT_NOT_FOUND";
    if (errorCode == -2141907246) return "SCE_NP_TROPHY_ERROR_BIND_TITLE_NOT_FOUND";
    if (errorCode == -2141907439) return "SCE_NP_TROPHY_ERROR_BROKEN_DATA";
    if (errorCode == -2141907417) return "SCE_NP_TROPHY_ERROR_BROKEN_TITLE_CONF";
    if (errorCode == -2141907309) return "SCE_NP_TROPHY_ERROR_BUSY";
    if (errorCode == -2141907269) return "SCE_NP_TROPHY_ERROR_CANCELED_BY_BG";
    if (errorCode == -2141907304) return "SCE_NP_TROPHY_ERROR_CANCELED_BY_CLIENT_CLOSED";
    if (errorCode == -2141907301) return "SCE_NP_TROPHY_ERROR_CANCELED_BY_CLIENT_SUSPEND";
    if (errorCode == -2141907271) return "SCE_NP_TROPHY_ERROR_CANCELED_BY_GAME";
    if (errorCode == -2141907247) return "SCE_NP_TROPHY_ERROR_CANCELED_BY_LOGOUT";
    if (errorCode == -2141907270) return "SCE_NP_TROPHY_ERROR_CANCELED_BY_SYSTEM";
    if (errorCode == -2141907206) return "SCE_NP_TROPHY_ERROR_CANNOT_RECOVER_TITLE_ENTRY_INFO";
    if (errorCode == -2141907242) return "SCE_NP_TROPHY_ERROR_CONF_FILE_NP_COMM_ID_NOT_MATCH";
    if (errorCode == -2141907317) return "SCE_NP_TROPHY_ERROR_CONFSIGN_VERIFICATION_FAILURE";
    if (errorCode == -2141907437) return "SCE_NP_TROPHY_ERROR_CONTEXT_ALREADY_EXISTS";
    if (errorCode == -2141907421) return "SCE_NP_TROPHY_ERROR_CONTEXT_EXCEEDS_MAX";
    if (errorCode == -2141907426) return "SCE_NP_TROPHY_ERROR_CONTEXT_USER_LOGOUT";
    if (errorCode == -2141907291) return "SCE_NP_TROPHY_ERROR_DATA_FILE_ALREADY_OPENED";
    if (errorCode == -2141907294) return "SCE_NP_TROPHY_ERROR_DATA_FILE_BROKEN";
    if (errorCode == -2141907293) return "SCE_NP_TROPHY_ERROR_DATA_FILE_INVALID_FORMAT";
    if (errorCode == -2141907254) return "SCE_NP_TROPHY_ERROR_DATA_FILE_INVALID_TROPSYS";
    if (errorCode == -2141907289) return "SCE_NP_TROPHY_ERROR_DATA_FILE_KEY_NOT_FOUND";
    if (errorCode == -2141907250) return "SCE_NP_TROPHY_ERROR_DATA_FILE_LOCAL_BIND";
    if (errorCode == -2141907290) return "SCE_NP_TROPHY_ERROR_DATA_FILE_NOT_OPENED";
    if (errorCode == -2141907288) return "SCE_NP_TROPHY_ERROR_DATA_FILE_NOT_WORKING";
    if (errorCode == -2141907226) return "SCE_NP_TROPHY_ERROR_DATA_FILE_NP_COMM_ID_EXISTS";
    if (errorCode == -2141907285) return "SCE_NP_TROPHY_ERROR_DATA_FILE_NP_COMM_ID_NOT_MATCH";
    if (errorCode == -2141907284) return "SCE_NP_TROPHY_ERROR_DATA_FILE_NP_TITLE_ID_NOT_MATCH";
    if (errorCode == -2141907286) return "SCE_NP_TROPHY_ERROR_DATA_FILE_STATUS_NOT_MATCH";
    if (errorCode == -2141907283) return "SCE_NP_TROPHY_ERROR_DATA_FILE_TROPHY_TITLE_ID_NOT_MATCH";
    if (errorCode == -2141907292) return "SCE_NP_TROPHY_ERROR_DATA_FILE_UNSUPPORTED_VERSION";
    if (errorCode == -2141907287) return "SCE_NP_TROPHY_ERROR_DATA_FILE_WORKING";
    if (errorCode == -2141907252) return "SCE_NP_TROPHY_ERROR_DECRYPT_STREAM";
    if (errorCode == -2141907297) return "SCE_NP_TROPHY_ERROR_DUPLICATED_STORAGE_HANDLE";
    if (errorCode == -2141907450) return "SCE_NP_TROPHY_ERROR_EXCEEDS_MAX";
    if (errorCode == -2141907313) return "SCE_NP_TROPHY_ERROR_FILE_ALREADY_OPENED";
    if (errorCode == -2141907315) return "SCE_NP_TROPHY_ERROR_FILE_NOT_OPENED";
    if (errorCode == -2141907320) return "SCE_NP_TROPHY_ERROR_GROUP_UNSUPPORTED";
    if (errorCode == -2141907420) return "SCE_NP_TROPHY_ERROR_HANDLE_EXCEEDS_MAX";
    if (errorCode == -2141907436) return "SCE_NP_TROPHY_ERROR_ICON_FILE_NOT_FOUND";
    if (errorCode == -2141907205) return "SCE_NP_TROPHY_ERROR_IMAGE_FILE_CORRUPTED";
    if (errorCode == -2141907416) return "SCE_NP_TROPHY_ERROR_INCONSISTENT_TITLE_CONF";
    if (errorCode == -2141907210) return "SCE_NP_TROPHY_ERROR_INST_SRC_SERVICE_LABEL_DUPLICATED";
    if (errorCode == -2141907451) return "SCE_NP_TROPHY_ERROR_INSUFFICIENT_BUFFER";
    if (errorCode == -2141907438) return "SCE_NP_TROPHY_ERROR_INSUFFICIENT_SPACE";
    if (errorCode == -2141907214) return "SCE_NP_TROPHY_ERROR_INT_CONTEXT_EXCEEDS_MAX";
    if (errorCode == -2141907215) return "SCE_NP_TROPHY_ERROR_INT_HANDLE_EXCEEDS_MAX";
    if (errorCode == -2141907267) return "SCE_NP_TROPHY_ERROR_INVALID_ARBITER";
    if (errorCode == -2141907452) return "SCE_NP_TROPHY_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141907305) return "SCE_NP_TROPHY_ERROR_INVALID_CONFSIGN";
    if (errorCode == -2141907447) return "SCE_NP_TROPHY_ERROR_INVALID_CONTEXT";
    if (errorCode == -2141907314) return "SCE_NP_TROPHY_ERROR_INVALID_FILE_NAME";
    if (errorCode == -2141907321) return "SCE_NP_TROPHY_ERROR_INVALID_GRADE";
    if (errorCode == -2141907445) return "SCE_NP_TROPHY_ERROR_INVALID_GROUP_ID";
    if (errorCode == -2141907448) return "SCE_NP_TROPHY_ERROR_INVALID_HANDLE";
    if (errorCode == -2141907423) return "SCE_NP_TROPHY_ERROR_INVALID_NP_SERVICE_LABEL";
    if (errorCode == -2141907424) return "SCE_NP_TROPHY_ERROR_INVALID_NP_TITLE_ID";
    if (errorCode == -2141907243) return "SCE_NP_TROPHY_ERROR_INVALID_NP_TITLE_ID_CONFIG";
    if (errorCode == -2141907324) return "SCE_NP_TROPHY_ERROR_INVALID_NPCOMMID";
    if (errorCode == -2141907323) return "SCE_NP_TROPHY_ERROR_INVALID_NPCOMMSIGN";
    if (errorCode == -2141907251) return "SCE_NP_TROPHY_ERROR_INVALID_PLATFORM";
    if (errorCode == -2141907308) return "SCE_NP_TROPHY_ERROR_INVALID_SIGNATURE";
    if (errorCode == -2141907295) return "SCE_NP_TROPHY_ERROR_INVALID_STORAGE";
    if (errorCode == -2141907296) return "SCE_NP_TROPHY_ERROR_INVALID_STORAGE_HANDLE";
    if (errorCode == -2141907263) return "SCE_NP_TROPHY_ERROR_INVALID_STREAM";
    if (errorCode == -2141907432) return "SCE_NP_TROPHY_ERROR_INVALID_TROPHY_CONF_FORMAT";
    if (errorCode == -2141907446) return "SCE_NP_TROPHY_ERROR_INVALID_TROPHY_ID";
    if (errorCode == -2141907434) return "SCE_NP_TROPHY_ERROR_INVALID_TRP_FILE_FORMAT";
    if (errorCode == -2141907218) return "SCE_NP_TROPHY_ERROR_INVALID_TRP_URI";
    if (errorCode == -2141907268) return "SCE_NP_TROPHY_ERROR_INVALID_USER_CONTEXT";
    if (errorCode == -2141907419) return "SCE_NP_TROPHY_ERROR_INVALID_USER_ID";
    if (errorCode == -2141907328) return "SCE_NP_TROPHY_ERROR_INVALID_VALUE";
    if (errorCode == -2141907299) return "SCE_NP_TROPHY_ERROR_MOUNT_POINT_NOT_MATCH";
    if (errorCode == -2141907228) return "SCE_NP_TROPHY_ERROR_NET_TRANS_FILE_COMMSIGN_NOT_FOUND";
    if (errorCode == -2141907277) return "SCE_NP_TROPHY_ERROR_NET_TRANS_FILE_INVALID_ENTRY_ATTR";
    if (errorCode == -2141907280) return "SCE_NP_TROPHY_ERROR_NET_TRANS_FILE_INVALID_ENTRY_TYPE";
    if (errorCode == -2141907278) return "SCE_NP_TROPHY_ERROR_NET_TRANS_FILE_NOT_FOUND";
    if (errorCode == -2141907279) return "SCE_NP_TROPHY_ERROR_NET_TRANS_FILE_TOO_MANY_ENTRIES";
    if (errorCode == -2141907249) return "SCE_NP_TROPHY_ERROR_NETWORK_SYNC_FAILED";
    if (errorCode == -2141907222) return "SCE_NP_TROPHY_ERROR_NO_BIND_INFO_IN_POSTING_ACTIVITY_OBSOLETE";
    if (errorCode == -2141907310) return "SCE_NP_TROPHY_ERROR_NO_IMPL";
    if (errorCode == -2141907455) return "SCE_NP_TROPHY_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141907441) return "SCE_NP_TROPHY_ERROR_NOT_REGISTERED";
    if (errorCode == -2141907422) return "SCE_NP_TROPHY_ERROR_NOT_SUPPORTED";
    if (errorCode == -2141907245) return "SCE_NP_TROPHY_ERROR_NP_BIND_INFO_NOT_FOUND_OBSOLETE";
    if (errorCode == -2141907207) return "SCE_NP_TROPHY_ERROR_NPCOMMSIGN_NOT_FOUND";
    if (errorCode == -2141907322) return "SCE_NP_TROPHY_ERROR_NPCOMMSIGN_VERIFICATION_FAILURE";
    if (errorCode == -2141907453) return "SCE_NP_TROPHY_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141907259) return "SCE_NP_TROPHY_ERROR_PARSE_XML_ENTITY_FAILED";
    if (errorCode == -2141907281) return "SCE_NP_TROPHY_ERROR_PLATINUM_CANNOT_LOCK";
    if (errorCode == -2141907443) return "SCE_NP_TROPHY_ERROR_PLATINUM_CANNOT_UNLOCK";
    if (errorCode == -2141907300) return "SCE_NP_TROPHY_ERROR_PROCESS_CONTEXT_ALREADY_EXISTS";
    if (errorCode == -2141907302) return "SCE_NP_TROPHY_ERROR_PROCESS_CONTEXT_NOT_FOUND";
    if (errorCode == -2141907244) return "SCE_NP_TROPHY_ERROR_PROMOTE_NP_BIND_INFO_NOT_FOUND_OBSOLETE";
    if (errorCode == -2141907217) return "SCE_NP_TROPHY_ERROR_READ_ONLY_STORAGE";
    if (errorCode == -2141907241) return "SCE_NP_TROPHY_ERROR_RECOVERY_FAILED";
    if (errorCode == -2141907264) return "SCE_NP_TROPHY_ERROR_RECOVERY_REQUIRED";
    if (errorCode == -2141907231) return "SCE_NP_TROPHY_ERROR_SERVICE_APPLICATION_CONTEXT_EXCEEDS_MAX";
    if (errorCode == -2141907238) return "SCE_NP_TROPHY_ERROR_SERVICE_ARBITER_SLOT_EXCEEDS_MAX";
    if (errorCode == -2141907236) return "SCE_NP_TROPHY_ERROR_SERVICE_CONTEXT_SLOT_EXCEEDS_MAX";
    if (errorCode == -2141907235) return "SCE_NP_TROPHY_ERROR_SERVICE_HANDLE_SLOT_EXCEEDS_MAX";
    if (errorCode == -2141907209) return "SCE_NP_TROPHY_ERROR_SERVICE_LABEL_NOT_MATCH";
    if (errorCode == -2141907233) return "SCE_NP_TROPHY_ERROR_SERVICE_PROCESS_CONTEXT_EXCEEDS_MAX";
    if (errorCode == -2141907237) return "SCE_NP_TROPHY_ERROR_SERVICE_STORAGE_SLOT_EXCEEDS_MAX";
    if (errorCode == -2141907234) return "SCE_NP_TROPHY_ERROR_SERVICE_STREAM_SLOT_EXCEEDS_MAX";
    if (errorCode == -2141907232) return "SCE_NP_TROPHY_ERROR_SERVICE_USER_CONTEXT_EXCEEDS_MAX";
    if (errorCode == -2141907306) return "SCE_NP_TROPHY_ERROR_SHA1_DIGEST_LEN_OBSOLETE";
    if (errorCode == -2141907303) return "SCE_NP_TROPHY_ERROR_SHUTDOWN";
    if (errorCode == -2141907307) return "SCE_NP_TROPHY_ERROR_SIGNATURE_VERIFICATION_FAILURE";
    if (errorCode == -2141907327) return "SCE_NP_TROPHY_ERROR_SRVALUE_BROKEN";
    if (errorCode == -2141907325) return "SCE_NP_TROPHY_ERROR_SRVALUE_EMPTY";
    if (errorCode == -2141907326) return "SCE_NP_TROPHY_ERROR_SRVALUE_EXISTS";
    if (errorCode == -2141907266) return "SCE_NP_TROPHY_ERROR_STORAGE_ALREADY_OPENED";
    if (errorCode == -2141907298) return "SCE_NP_TROPHY_ERROR_STORAGE_BUSY";
    if (errorCode == -2141907265) return "SCE_NP_TROPHY_ERROR_STORAGE_NOT_OPENED";
    if (errorCode == -2141907256) return "SCE_NP_TROPHY_ERROR_STREAM_ALREADY_OPENED";
    if (errorCode == -2141907318) return "SCE_NP_TROPHY_ERROR_STREAM_NOT_OPENED";
    if (errorCode == -2141907208) return "SCE_NP_TROPHY_ERROR_SUMMARY_NOT_FOUND";
    if (errorCode == -2141907240) return "SCE_NP_TROPHY_ERROR_SYSTEM_CONTEXT_EXCEEDS_MAX";
    if (errorCode == -2141907239) return "SCE_NP_TROPHY_ERROR_SYSTEM_HANDLE_EXCEEDS_MAX";
    if (errorCode == -2141907261) return "SCE_NP_TROPHY_ERROR_TITLE_CONF_BROKEN_OBSOLETE";
    if (errorCode == -2141907224) return "SCE_NP_TROPHY_ERROR_TITLE_CONF_DIR_NOT_FOUND";
    if (errorCode == -2141907213) return "SCE_NP_TROPHY_ERROR_TITLE_CONF_NOT_FOUND_OBSOLETE";
    if (errorCode == -2141907418) return "SCE_NP_TROPHY_ERROR_TITLE_CONF_NOT_INSTALLED";
    if (errorCode == -2141907223) return "SCE_NP_TROPHY_ERROR_TITLE_DATA_BROKEN";
    if (errorCode == -2141907225) return "SCE_NP_TROPHY_ERROR_TITLE_DATA_DIR_NOT_FOUND";
    if (errorCode == -2141907282) return "SCE_NP_TROPHY_ERROR_TITLE_DATA_FILE_NOT_FOUND";
    if (errorCode == -2141907212) return "SCE_NP_TROPHY_ERROR_TITLE_DATA_NOT_FOUND";
    if (errorCode == -2141907262) return "SCE_NP_TROPHY_ERROR_TITLE_NOT_FOUND";
    if (errorCode == -2141907227) return "SCE_NP_TROPHY_ERROR_TITLE_NP_COMM_ID_NOT_MATCH";
    if (errorCode == -2141907272) return "SCE_NP_TROPHY_ERROR_TITLE_PARAM_FILE_BROKEN";
    if (errorCode == -2141907273) return "SCE_NP_TROPHY_ERROR_TITLE_PARAM_FILE_NOT_FOUND";
    if (errorCode == -2141907211) return "SCE_NP_TROPHY_ERROR_TOO_MANY_INST_SRC_ENTRY";
    if (errorCode == -2141907444) return "SCE_NP_TROPHY_ERROR_TROPHY_ALREADY_UNLOCKED";
    if (errorCode == -2141907260) return "SCE_NP_TROPHY_ERROR_TROPHY_CONF_FILE_NOT_FOUND";
    if (errorCode == -2141907319) return "SCE_NP_TROPHY_ERROR_TROPHY_IS_NOT_PLATINUM";
    if (errorCode == -2141907430) return "SCE_NP_TROPHY_ERROR_TROPHY_NOT_UNLOCKED";
    if (errorCode == -2141907216) return "SCE_NP_TROPHY_ERROR_TROPHY_TITLE_ID_NOT_MATCH";
    if (errorCode == -2141907257) return "SCE_NP_TROPHY_ERROR_TRP_BUSY";
    if (errorCode == -2141907311) return "SCE_NP_TROPHY_ERROR_TRP_ENTRY_FILE_NOT_FOUND";
    if (errorCode == -2141907435) return "SCE_NP_TROPHY_ERROR_TRP_FILE_NOT_FOUND";
    if (errorCode == -2141907316) return "SCE_NP_TROPHY_ERROR_TRP_FILE_VERIFICATION_FAILURE";
    if (errorCode == -2141907312) return "SCE_NP_TROPHY_ERROR_TRP_TOO_MANY_OPEN";
    if (errorCode == -2141907258) return "SCE_NP_TROPHY_ERROR_UNEXPECTED_EOF";
    if (errorCode == -2141907456) return "SCE_NP_TROPHY_ERROR_UNKNOWN";
    if (errorCode == -2141907221) return "SCE_NP_TROPHY_ERROR_UNKNOWN_BOOT_TYPE";
    if (errorCode == -2141907429) return "SCE_NP_TROPHY_ERROR_UNLOCK_DENIED";
    if (errorCode == -2141907431) return "SCE_NP_TROPHY_ERROR_UNSUPPORTED_TROPHY_CONF";
    if (errorCode == -2141907255) return "SCE_NP_TROPHY_ERROR_UNSUPPORTED_TROPHY_SYSTEM";
    if (errorCode == -2141907433) return "SCE_NP_TROPHY_ERROR_UNSUPPORTED_TRP_FILE";
    if (errorCode == -2141907253) return "SCE_NP_TROPHY_ERROR_UNSUPPORTED_TRP_KEY";
    if (errorCode == -2141907425) return "SCE_NP_TROPHY_ERROR_USE_TRP_FOR_DEVELOPMENT";
    if (errorCode == -2141907248) return "SCE_NP_TROPHY_ERROR_USER_CONTEXT_NOT_FOUND";
    if (errorCode == -2141907276) return "SCE_NP_TROPHY_ERROR_USER_DATA_FILE_NOT_FOUND";
    if (errorCode == -2141907274) return "SCE_NP_TROPHY_ERROR_USER_DATA_FILE_TITLE_ALREADY_EXISTS";
    if (errorCode == -2141907275) return "SCE_NP_TROPHY_ERROR_USER_DATA_FILE_TITLE_NOT_FOUND";
    if (errorCode == -2141907428) return "SCE_NP_TROPHY_ERROR_USER_NOT_FOUND";
    if (errorCode == -2141907427) return "SCE_NP_TROPHY_ERROR_USER_NOT_LOGGED_IN";
    if (errorCode == -2141907220) return "SCE_NP_TROPHY_ERROR_USER_SUMMARY_FILE_BROKEN";
    if (errorCode == -2141907219) return "SCE_NP_TROPHY_ERROR_USER_SUMMARY_FILE_NOT_FOUND";
    if (errorCode == -2141907191) return "SCE_NP_TROPHY_NET_ERROR_BAD_RESPONSE";
    if (errorCode == -2141907187) return "SCE_NP_TROPHY_NET_ERROR_BAD_STATUS";
    if (errorCode == -2141907192) return "SCE_NP_TROPHY_NET_ERROR_BEFORE_SERVICE";
    if (errorCode == -2141907189) return "SCE_NP_TROPHY_NET_ERROR_BUILD_REQUEST";
    if (errorCode == -2141907193) return "SCE_NP_TROPHY_NET_ERROR_END_OF_SERVICE";
    if (errorCode == -2141907198) return "SCE_NP_TROPHY_NET_ERROR_FILE_ALREADY_OPENED";
    if (errorCode == -2141907199) return "SCE_NP_TROPHY_NET_ERROR_FILE_NOT_FOUND";
    if (errorCode == -2141907197) return "SCE_NP_TROPHY_NET_ERROR_FILE_NOT_OPENED";
    if (errorCode == -2141907190) return "SCE_NP_TROPHY_NET_ERROR_INVALID_SIGNATURE";
    if (errorCode == -2141907194) return "SCE_NP_TROPHY_NET_ERROR_MAINTENANCE";
    if (errorCode == -2141907195) return "SCE_NP_TROPHY_NET_ERROR_SERVICE_UNAVAILABLE";
    if (errorCode == -2141907186) return "SCE_NP_TROPHY_NET_ERROR_STORAGE_ALREADY_OPENED";
    if (errorCode == -2141907185) return "SCE_NP_TROPHY_NET_ERROR_STORAGE_NOT_OPENED";
    if (errorCode == -2141907196) return "SCE_NP_TROPHY_NET_ERROR_TROPHY_CONF_FILE_NOT_FOUND";
    if (errorCode == -2141907200) return "SCE_NP_TROPHY_NET_ERROR_UNKNOWN";
    if (errorCode == -2141907188) return "SCE_NP_TROPHY_NET_ERROR_UNSUPPORTED_NET_CONF_FILE_KEY";
    if (errorCode == -2141906943) return "SCE_NP_TROPHY_SERVER_ERROR_BAD_REQUEST";
    if (errorCode == -2141906934) return "SCE_NP_TROPHY_SERVER_ERROR_BANNED";
    if (errorCode == -2141906927) return "SCE_NP_TROPHY_SERVER_ERROR_BLACKLISTED_ID";
    if (errorCode == -2141906940) return "SCE_NP_TROPHY_SERVER_ERROR_EXPIRED_TICKET";
    if (errorCode == -2141906937) return "SCE_NP_TROPHY_SERVER_ERROR_INTERNAL_SERVER_ERROR";
    if (errorCode == -2141906939) return "SCE_NP_TROPHY_SERVER_ERROR_INVALID_JID";
    if (errorCode == -2141906941) return "SCE_NP_TROPHY_SERVER_ERROR_INVALID_SIGNATURE";
    if (errorCode == -2141906942) return "SCE_NP_TROPHY_SERVER_ERROR_INVALID_TICKET";
    if (errorCode == -2141906873) return "SCE_NP_TROPHY_SERVER_ERROR_NO_SUCH_TROPHY_USER";
    if (errorCode == -2141906845) return "SCE_NP_TROPHY_SERVER_ERROR_NOT_AUTHORIZED";
    if (errorCode == -2141873152) return "SCE_NP_UTIL_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141911550) return "SCE_NP_UTIL_ERROR_INSUFFICIENT";
    if (errorCode == -2141873148) return "SCE_NP_UTIL_ERROR_INTERNAL";
    if (errorCode == -2141911551) return "SCE_NP_UTIL_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141911544) return "SCE_NP_UTIL_ERROR_INVALID_CHARACTER";
    if (errorCode == -2141911546) return "SCE_NP_UTIL_ERROR_INVALID_NP_ENV";
    if (errorCode == -2141911547) return "SCE_NP_UTIL_ERROR_INVALID_NP_ID";
    if (errorCode == -2141911548) return "SCE_NP_UTIL_ERROR_INVALID_PROTOCOL_ID";
    if (errorCode == -2141911542) return "SCE_NP_UTIL_ERROR_INVALID_TITLEID";
    if (errorCode == -2141873151) return "SCE_NP_UTIL_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141911543) return "SCE_NP_UTIL_ERROR_NOT_MATCH";
    if (errorCode == -2141873147) return "SCE_NP_UTIL_ERROR_NP_DEBUG_SETTING_OFF";
    if (errorCode == -2141911549) return "SCE_NP_UTIL_ERROR_PARSER_FAILED";
    if (errorCode == -2141873149) return "SCE_NP_UTIL_ERROR_SERVER_ERROR_INVALID_HTTP_STATUS_CODE";
    if (errorCode == -2141873150) return "SCE_NP_UTIL_ERROR_SERVER_ERROR_PARSER_FAILED";
    if (errorCode == -2141911538) return "SCE_NP_UTIL_ERROR_UNKNOWN";
    if (errorCode == -2141872378) return "SCE_NP_WEB_SOCKET_ERROR_ABORTED";
    if (errorCode == -2141872383) return "SCE_NP_WEB_SOCKET_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141872375) return "SCE_NP_WEB_SOCKET_ERROR_BAD_RESPONSE";
    if (errorCode == -2141872374) return "SCE_NP_WEB_SOCKET_ERROR_DISCONNECTED";
    if (errorCode == -2141872376) return "SCE_NP_WEB_SOCKET_ERROR_HANDSHAKE_FAILED";
    if (errorCode == -2141872377) return "SCE_NP_WEB_SOCKET_ERROR_HTTP_STATUS_CODE_INVALID";
    if (errorCode == -2141872384) return "SCE_NP_WEB_SOCKET_ERROR_INTERNAL";
    if (errorCode == -2141872381) return "SCE_NP_WEB_SOCKET_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141872379) return "SCE_NP_WEB_SOCKET_ERROR_INVALID_OPERATION";
    if (errorCode == -2141872371) return "SCE_NP_WEB_SOCKET_ERROR_NO_SUCH_REQ_HEADER";
    if (errorCode == -2141872382) return "SCE_NP_WEB_SOCKET_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141872380) return "SCE_NP_WEB_SOCKET_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141872372) return "SCE_NP_WEB_SOCKET_ERROR_REQ_HEADER_OVER_MAX";
    if (errorCode == -2141872370) return "SCE_NP_WEB_SOCKET_ERROR_RESPONSE_NOT_AVAILABLE";
    if (errorCode == -2141872373) return "SCE_NP_WEB_SOCKET_ERROR_TIMEOUT";
    if (errorCode == -2141902583) return "SCE_NP_WEBAPI_ERROR_ABORTED";
    if (errorCode == -2141902567) return "SCE_NP_WEBAPI_ERROR_HANDLE_BUSY";
    if (errorCode == -2141902579) return "SCE_NP_WEBAPI_ERROR_HANDLE_NOT_FOUND";
    if (errorCode == -2141902590) return "SCE_NP_WEBAPI_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141902584) return "SCE_NP_WEBAPI_ERROR_INVALID_CONTENT_PARAMETER";
    if (errorCode == -2141902572) return "SCE_NP_WEBAPI_ERROR_INVALID_HTTP_STATUS_CODE";
    if (errorCode == -2141902589) return "SCE_NP_WEBAPI_ERROR_INVALID_LIB_CONTEXT_ID";
    if (errorCode == -2141902575) return "SCE_NP_WEBAPI_ERROR_LIB_CONTEXT_BUSY";
    if (errorCode == -2141902566) return "SCE_NP_WEBAPI_ERROR_LIB_CONTEXT_MAX";
    if (errorCode == -2141902588) return "SCE_NP_WEBAPI_ERROR_LIB_CONTEXT_NOT_FOUND";
    if (errorCode == -2141902569) return "SCE_NP_WEBAPI_ERROR_MULTIPART_PART_NOT_FOUND";
    if (errorCode == -2141902585) return "SCE_NP_WEBAPI_ERROR_NOT_SIGNED_IN";
    if (errorCode == -2141902591) return "SCE_NP_WEBAPI_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141902568) return "SCE_NP_WEBAPI_ERROR_PARAMETER_TOO_LONG";
    if (errorCode == -2141902570) return "SCE_NP_WEBAPI_ERROR_PROHIBITED_FUNCTION_CALL";
    if (errorCode == -2141902571) return "SCE_NP_WEBAPI_ERROR_PROHIBITED_HTTP_HEADER";
    if (errorCode == -2141902580) return "SCE_NP_WEBAPI_ERROR_PUSH_EVENT_CALLBACK_NOT_FOUND";
    if (errorCode == -2141902581) return "SCE_NP_WEBAPI_ERROR_PUSH_EVENT_FILTER_NOT_FOUND";
    if (errorCode == -2141902573) return "SCE_NP_WEBAPI_ERROR_REQUEST_BUSY";
    if (errorCode == -2141902586) return "SCE_NP_WEBAPI_ERROR_REQUEST_NOT_FOUND";
    if (errorCode == -2141902577) return "SCE_NP_WEBAPI_ERROR_SERVICE_PUSH_EVENT_CALLBACK_NOT_FOUND";
    if (errorCode == -2141902578) return "SCE_NP_WEBAPI_ERROR_SERVICE_PUSH_EVENT_FILTER_NOT_FOUND";
    if (errorCode == -2141902576) return "SCE_NP_WEBAPI_ERROR_SIGNED_IN_USER_NOT_FOUND";
    if (errorCode == -2141902582) return "SCE_NP_WEBAPI_ERROR_USER_CONTEXT_ALREADY_EXIST";
    if (errorCode == -2141902574) return "SCE_NP_WEBAPI_ERROR_USER_CONTEXT_BUSY";
    if (errorCode == -2141902565) return "SCE_NP_WEBAPI_ERROR_USER_CONTEXT_MAX";
    if (errorCode == -2141902587) return "SCE_NP_WEBAPI_ERROR_USER_CONTEXT_NOT_FOUND";
    if (errorCode == -2141871101) return "SCE_NP_WEBAPI_INTERNAL_ERROR_INVALID_LANG_ID";
    if (errorCode == -2141871102) return "SCE_NP_WEBAPI_INTERNAL_ERROR_NO_PERMISSION_FOR_CALL_FUNC";
    if (errorCode == -2141871103) return "SCE_NP_WEBAPI_INTERNAL_ERROR_PARSER_FAILED";
    if (errorCode == -2110771447) return "SCE_NP_WEBAPI_SERVER_ERROR_ACTIVITY_FEED_CLIENT_ERROR";
    if (errorCode == -2110771357) return "SCE_NP_WEBAPI_SERVER_ERROR_ACTIVITY_FEED_CONTENT_NOT_FOUND";
    if (errorCode == -2110771351) return "SCE_NP_WEBAPI_SERVER_ERROR_ACTIVITY_FEED_HTTP_NOT_IMPLEMENTED";
    if (errorCode == -2110771454) return "SCE_NP_WEBAPI_SERVER_ERROR_ACTIVITY_FEED_INTERNAL_ERROR";
    if (errorCode == -2110771399) return "SCE_NP_WEBAPI_SERVER_ERROR_ACTIVITY_FEED_INVALID_ASPECT_RATIO";
    if (errorCode == -2110771400) return "SCE_NP_WEBAPI_SERVER_ERROR_ACTIVITY_FEED_INVALID_JSON";
    if (errorCode == -2110771451) return "SCE_NP_WEBAPI_SERVER_ERROR_ACTIVITY_FEED_INVALID_PARAMETER";
    if (errorCode == -2110771397) return "SCE_NP_WEBAPI_SERVER_ERROR_ACTIVITY_FEED_INVALID_POST_OR_STORY";
    if (errorCode == -2110771438) return "SCE_NP_WEBAPI_SERVER_ERROR_ACTIVITY_FEED_INVALID_PSN_ACCESS_TOKEN";
    if (errorCode == -2110771455) return "SCE_NP_WEBAPI_SERVER_ERROR_ACTIVITY_FEED_INVALID_REQUEST";
    if (errorCode == -2110771406) return "SCE_NP_WEBAPI_SERVER_ERROR_ACTIVITY_FEED_NO_FEED_CONTENT";
    if (errorCode == -2110771356) return "SCE_NP_WEBAPI_SERVER_ERROR_ACTIVITY_FEED_NOT_AUTHORIZED";
    if (errorCode == -2110771449) return "SCE_NP_WEBAPI_SERVER_ERROR_ACTIVITY_FEED_NOT_IMPLEMENTED";
    if (errorCode == -2110771398) return "SCE_NP_WEBAPI_SERVER_ERROR_ACTIVITY_FEED_ONLINE_ID_NOT_SET";
    if (errorCode == -2110771407) return "SCE_NP_WEBAPI_SERVER_ERROR_ACTIVITY_FEED_POST_RATE_LIMIT_EXCEEDED";
    if (errorCode == -2110771436) return "SCE_NP_WEBAPI_SERVER_ERROR_ACTIVITY_FEED_PRIVACY_VIOLATION";
    if (errorCode == -2110771353) return "SCE_NP_WEBAPI_SERVER_ERROR_ACTIVITY_FEED_REQUEST_TOO_LONG";
    if (errorCode == -2110771352) return "SCE_NP_WEBAPI_SERVER_ERROR_ACTIVITY_FEED_REQUEST_URI_TOO_LONG";
    if (errorCode == -2110771448) return "SCE_NP_WEBAPI_SERVER_ERROR_ACTIVITY_FEED_SERVER_ERROR";
    if (errorCode == -2110771453) return "SCE_NP_WEBAPI_SERVER_ERROR_ACTIVITY_FEED_SERVICE_UNAVAILABLE";
    if (errorCode == -2110771403) return "SCE_NP_WEBAPI_SERVER_ERROR_ACTIVITY_FEED_TITLE_ID_DOES_NOT_MATCH";
    if (errorCode == -2110771446) return "SCE_NP_WEBAPI_SERVER_ERROR_ACTIVITY_FEED_UNSUPPORTED_MEDIA_TYPE";
    if (errorCode == -2111831540) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_ACCESS_DENIED_BY_PRIVACY_LEVEL";
    if (errorCode == -2111832050) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_ACCESS_DENIED_BY_RESOURCE_OWNERSHIP";
    if (errorCode == -2111831542) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_ACCESS_DENIED_DUE_TO_TITILE_MISMATCH";
    if (errorCode == -2111831552) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_ACCESS_TOKEN_REQUIRED";
    if (errorCode == -2111831292) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_AUTHORIZATION_SERVER_ERROR";
    if (errorCode == -2111832063) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_BAD_REQUEST";
    if (errorCode == -2111831545) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_BANNED_APPLICATION";
    if (errorCode == -2111831543) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_BANNED_DEVICE";
    if (errorCode == -2111831544) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_BANNED_USER";
    if (errorCode == -2111831675) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_BLOCKED_USER_EXISTS";
    if (errorCode == -2111831550) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_EXPIRED_ACCESS_TOKEN";
    if (errorCode == -2111831547) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_EXPIRED_NP_TITLE_TOKEN";
    if (errorCode == -2111831743) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_HEADER_REQUIRED";
    if (errorCode == -2111831295) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_INTERNAL_SERVER_ERROR";
    if (errorCode == -2111831551) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_INVALID_ACCESS_TOKEN";
    if (errorCode == -2111831040) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_INVALID_API_GROUP";
    if (errorCode == -2111831680) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_INVALID_BODY";
    if (errorCode == -2111831678) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_INVALID_BODY_PARAMETER";
    if (errorCode == -2111831676) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_INVALID_BODY_PARAMETER_COMBINATION";
    if (errorCode == -2111831677) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_INVALID_BODY_PARAMETER_LIST_LENGTH";
    if (errorCode == -2111831744) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_INVALID_HEADER";
    if (errorCode == -2111831673) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_INVALID_MULTIPART_HEADER";
    if (errorCode == -2111832057) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_INVALID_NP_COMMUNICATION_ID";
    if (errorCode == -2111832060) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_INVALID_NP_ENVIRONMENT";
    if (errorCode == -2111832058) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_INVALID_NP_SERVICE_LABEL";
    if (errorCode == -2111832055) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_INVALID_NP_SERVICE_NAME";
    if (errorCode == -2111832059) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_INVALID_NP_TITLE_ID";
    if (errorCode == -2111831548) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_INVALID_NP_TITLE_TOKEN";
    if (errorCode == -2111832054) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_INVALID_OAUTH_CLIENT_ID";
    if (errorCode == -2111831804) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_INVALID_PARAMETER_IN_URL";
    if (errorCode == -2111831807) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_INVALID_QUERY_PARAMETER";
    if (errorCode == -2111831806) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_INVALID_QUERY_PARAMETER_COMBINATION";
    if (errorCode == -2111831808) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_INVALID_QUERY_STRING";
    if (errorCode == -2111832056) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_INVALID_SERVICE_ID";
    if (errorCode == -2111831674) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_MANDATORY_BODY_PARAMETER_MISSING";
    if (errorCode == -2111831672) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_MANDATORY_MULTIPART_HEADER_MISSING";
    if (errorCode == -2111831803) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_MANDATORY_QUERY_PARAMETER_MISSING";
    if (errorCode == -2111831538) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_NEED_TO_UPGRADE";
    if (errorCode == -2111831546) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_NOT_AUTHORIZED";
    if (errorCode == -2111831539) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_NOT_AUTHORIZED_ACCESS_TOKEN";
    if (errorCode == -2111831421) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_NOT_AUTHORIZED_APPLICATION";
    if (errorCode == -2111831039) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_NOT_AUTHORIZED_APPLICATION_TO_USE_THE_API_GROUP";
    if (errorCode == -2111831537) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_NOT_AUTHORIZED_ON_PLATFORM";
    if (errorCode == -2111831420) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_NP_COMMUNICATION_ID_NOT_FOUND";
    if (errorCode == -2111831422) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_NP_SERVICE_LABEL_NOT_FOUND";
    if (errorCode == -2111831423) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_NP_TITLE_ID_NOT_FOUND";
    if (errorCode == -2111832053) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_NP_TITLE_ID_NOT_MATCHING_TOKENS";
    if (errorCode == -2111831549) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_NP_TITLE_TOKEN_REQUIRED";
    if (errorCode == -2111831679) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_NULL_VALUE_NOT_ALLOWED";
    if (errorCode == -2111831541) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_RATE_LIMIT_EXCEEDED";
    if (errorCode == -2111832051) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_RESOURCE_NOT_FOUND";
    if (errorCode == -2111831293) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_SERVER_BUSY";
    if (errorCode == -2111831231) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_SERVICE_CLOSED";
    if (errorCode == -2111831419) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_SERVICE_ID_NOT_FOUND";
    if (errorCode == -2111831294) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_SERVICE_TEMPORARILY_UNAVAILABLE";
    if (errorCode == -2111832061) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_TOO_LARGE_BODY";
    if (errorCode == -2111831805) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_UNAVAILABLE_QUERY_PARAMETER_FOR_RESOURCE";
    if (errorCode == -2111831232) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_UNDER_MAINTENANCE";
    if (errorCode == -2111831296) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_UNEXPECTED_ERROR";
    if (errorCode == -2111831424) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_UNKNOWN_CLIENT";
    if (errorCode == -2111831168) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_UNKNOWN_ERROR";
    if (errorCode == -2111832062) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_UNSUPPORTED_API_VERSION";
    if (errorCode == -2111832052) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_USER_NOT_FOUND";
    if (errorCode == -2111831536) return "SCE_NP_WEBAPI_SERVER_ERROR_ASM_USERS_ACCESS_TOKEN_REQUIRED";
    if (errorCode == -2110763255) return "SCE_NP_WEBAPI_SERVER_ERROR_COMMERCE_CLIENT_ERROR";
    if (errorCode == -2110763258) return "SCE_NP_WEBAPI_SERVER_ERROR_COMMERCE_DATA_ACCESS_ERROR";
    if (errorCode == -2110763162) return "SCE_NP_WEBAPI_SERVER_ERROR_COMMERCE_FORBIDDEN";
    if (errorCode == -2110763159) return "SCE_NP_WEBAPI_SERVER_ERROR_COMMERCE_HTTP_NOT_IMPLEMENTED";
    if (errorCode == -2110763262) return "SCE_NP_WEBAPI_SERVER_ERROR_COMMERCE_INTERNAL_ERROR";
    if (errorCode == -2110763259) return "SCE_NP_WEBAPI_SERVER_ERROR_COMMERCE_INVALID_PARAMETER";
    if (errorCode == -2110763246) return "SCE_NP_WEBAPI_SERVER_ERROR_COMMERCE_INVALID_PSN_ACCESS_TOKEN";
    if (errorCode == -2110763263) return "SCE_NP_WEBAPI_SERVER_ERROR_COMMERCE_INVALID_REQUEST";
    if (errorCode == -2110763163) return "SCE_NP_WEBAPI_SERVER_ERROR_COMMERCE_NOT_ALLOWED";
    if (errorCode == -2110763164) return "SCE_NP_WEBAPI_SERVER_ERROR_COMMERCE_NOT_AUTHORIZED";
    if (errorCode == -2110763257) return "SCE_NP_WEBAPI_SERVER_ERROR_COMMERCE_NOT_IMPLEMENTED";
    if (errorCode == -2110763161) return "SCE_NP_WEBAPI_SERVER_ERROR_COMMERCE_REQUEST_TOO_LONG";
    if (errorCode == -2110763160) return "SCE_NP_WEBAPI_SERVER_ERROR_COMMERCE_REQUEST_URI_TOO_LONG";
    if (errorCode == -2110763260) return "SCE_NP_WEBAPI_SERVER_ERROR_COMMERCE_RESOURCE_NOT_FOUND";
    if (errorCode == -2110763256) return "SCE_NP_WEBAPI_SERVER_ERROR_COMMERCE_SERVER_ERROR";
    if (errorCode == -2110763261) return "SCE_NP_WEBAPI_SERVER_ERROR_COMMERCE_SERVICE_UNAVAILABLE";
    if (errorCode == -2110763254) return "SCE_NP_WEBAPI_SERVER_ERROR_COMMERCE_UNSUPPORTED_MEDIA_TYPE";
    if (errorCode == -2110767351) return "SCE_NP_WEBAPI_SERVER_ERROR_ENTITLEMENTS_CLIENT_ERROR";
    if (errorCode == -2110767354) return "SCE_NP_WEBAPI_SERVER_ERROR_ENTITLEMENTS_DATA_ACCESS_ERROR";
    if (errorCode == -2110767258) return "SCE_NP_WEBAPI_SERVER_ERROR_ENTITLEMENTS_FORBIDDEN";
    if (errorCode == -2110767255) return "SCE_NP_WEBAPI_SERVER_ERROR_ENTITLEMENTS_HTTP_NOT_IMPLEMENTED";
    if (errorCode == -2110767358) return "SCE_NP_WEBAPI_SERVER_ERROR_ENTITLEMENTS_INTERNAL_ERROR";
    if (errorCode == -2110767355) return "SCE_NP_WEBAPI_SERVER_ERROR_ENTITLEMENTS_INVALID_PARAMETER";
    if (errorCode == -2110767342) return "SCE_NP_WEBAPI_SERVER_ERROR_ENTITLEMENTS_INVALID_PSN_ACCESS_TOKEN";
    if (errorCode == -2110767359) return "SCE_NP_WEBAPI_SERVER_ERROR_ENTITLEMENTS_INVALID_REQUEST";
    if (errorCode == -2110767259) return "SCE_NP_WEBAPI_SERVER_ERROR_ENTITLEMENTS_NOT_ALLOWED";
    if (errorCode == -2110767260) return "SCE_NP_WEBAPI_SERVER_ERROR_ENTITLEMENTS_NOT_AUTHORIZED";
    if (errorCode == -2110767353) return "SCE_NP_WEBAPI_SERVER_ERROR_ENTITLEMENTS_NOT_IMPLEMENTED";
    if (errorCode == -2110767257) return "SCE_NP_WEBAPI_SERVER_ERROR_ENTITLEMENTS_REQUEST_TOO_LONG";
    if (errorCode == -2110767256) return "SCE_NP_WEBAPI_SERVER_ERROR_ENTITLEMENTS_REQUEST_URI_TOO_LONG";
    if (errorCode == -2110767356) return "SCE_NP_WEBAPI_SERVER_ERROR_ENTITLEMENTS_RESOURCE_NOT_FOUND";
    if (errorCode == -2110767352) return "SCE_NP_WEBAPI_SERVER_ERROR_ENTITLEMENTS_SERVER_ERROR";
    if (errorCode == -2110767357) return "SCE_NP_WEBAPI_SERVER_ERROR_ENTITLEMENTS_SERVICE_UNAVAILABLE";
    if (errorCode == -2110767350) return "SCE_NP_WEBAPI_SERVER_ERROR_ENTITLEMENTS_UNSUPPORTED_MEDIA_TYPE";
    if (errorCode == -2111811060) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_ACCESS_DENIED_BY_PRIVACY_LEVEL";
    if (errorCode == -2111811570) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_ACCESS_DENIED_BY_RESOURCE_OWNERSHIP";
    if (errorCode == -2111811062) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_ACCESS_DENIED_DUE_TO_TITILE_MISMATCH";
    if (errorCode == -2111811072) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_ACCESS_TOKEN_REQUIRED";
    if (errorCode == -2111809535) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_ALREADY_USED_GAME_CUSTOM_DATA";
    if (errorCode == -2111810812) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_AUTHORIZATION_SERVER_ERROR";
    if (errorCode == -2111811583) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_BAD_REQUEST";
    if (errorCode == -2111811065) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_BANNED_APPLICATION";
    if (errorCode == -2111811063) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_BANNED_DEVICE";
    if (errorCode == -2111811064) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_BANNED_USER";
    if (errorCode == -2111811195) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_BLOCKED_USER_EXISTS";
    if (errorCode == -2111811070) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_EXPIRED_ACCESS_TOKEN";
    if (errorCode == -2111809536) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_EXPIRED_GAME_CUSTOM_DATA";
    if (errorCode == -2111811067) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_EXPIRED_NP_TITLE_TOKEN";
    if (errorCode == -2111811263) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_HEADER_REQUIRED";
    if (errorCode == -2111810815) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_INTERNAL_SERVER_ERROR";
    if (errorCode == -2111811071) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_INVALID_ACCESS_TOKEN";
    if (errorCode == -2111811200) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_INVALID_BODY";
    if (errorCode == -2111811198) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_INVALID_BODY_PARAMETER";
    if (errorCode == -2111811196) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_INVALID_BODY_PARAMETER_COMBINATION";
    if (errorCode == -2111811197) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_INVALID_BODY_PARAMETER_LIST_LENGTH";
    if (errorCode == -2111811264) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_INVALID_HEADER";
    if (errorCode == -2111811193) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_INVALID_MULTIPART_HEADER";
    if (errorCode == -2111811577) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_INVALID_NP_COMMUNICATION_ID";
    if (errorCode == -2111811580) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_INVALID_NP_ENVIRONMENT";
    if (errorCode == -2111811578) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_INVALID_NP_SERVICE_LABEL";
    if (errorCode == -2111811575) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_INVALID_NP_SERVICE_NAME";
    if (errorCode == -2111811579) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_INVALID_NP_TITLE_ID";
    if (errorCode == -2111811068) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_INVALID_NP_TITLE_TOKEN";
    if (errorCode == -2111811574) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_INVALID_OAUTH_CLIENT_ID";
    if (errorCode == -2111811324) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_INVALID_PARAMETER_IN_URL";
    if (errorCode == -2111811327) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_INVALID_QUERY_PARAMETER";
    if (errorCode == -2111811326) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_INVALID_QUERY_PARAMETER_COMBINATION";
    if (errorCode == -2111811328) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_INVALID_QUERY_STRING";
    if (errorCode == -2111811576) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_INVALID_SERVICE_ID";
    if (errorCode == -2111811194) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_MANDATORY_BODY_PARAMETER_MISSING";
    if (errorCode == -2111811192) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_MANDATORY_MULTIPART_HEADER_MISSING";
    if (errorCode == -2111811323) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_MANDATORY_QUERY_PARAMETER_MISSING";
    if (errorCode == -2111811058) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_NEED_TO_UPGRADE";
    if (errorCode == -2111811066) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_NOT_AUTHORIZED";
    if (errorCode == -2111811059) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_NOT_AUTHORIZED_ACCESS_TOKEN";
    if (errorCode == -2111810941) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_NOT_AUTHORIZED_APPLICATION";
    if (errorCode == -2111811057) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_NOT_AUTHORIZED_ON_PLATFORM";
    if (errorCode == -2111810940) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_NP_COMMUNICATION_ID_NOT_FOUND";
    if (errorCode == -2111810942) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_NP_SERVICE_LABEL_NOT_FOUND";
    if (errorCode == -2111810943) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_NP_TITLE_ID_NOT_FOUND";
    if (errorCode == -2111811573) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_NP_TITLE_ID_NOT_MATCHING_TOKENS";
    if (errorCode == -2111811069) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_NP_TITLE_TOKEN_REQUIRED";
    if (errorCode == -2111811199) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_NULL_VALUE_NOT_ALLOWED";
    if (errorCode == -2111811061) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_RATE_LIMIT_EXCEEDED";
    if (errorCode == -2111811571) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_RESOURCE_NOT_FOUND";
    if (errorCode == -2111810813) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_SERVER_BUSY";
    if (errorCode == -2111810751) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_SERVICE_CLOSED";
    if (errorCode == -2111810939) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_SERVICE_ID_NOT_FOUND";
    if (errorCode == -2111810814) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_SERVICE_TEMPORARILY_UNAVAILABLE";
    if (errorCode == -2111811581) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_TOO_LARGE_BODY";
    if (errorCode == -2111810560) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_TOO_LARGE_IMAGE_DATA";
    if (errorCode == -2111811325) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_UNAVAILABLE_QUERY_PARAMETER_FOR_RESOURCE";
    if (errorCode == -2111810752) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_UNDER_MAINTENANCE";
    if (errorCode == -2111810816) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_UNEXPECTED_ERROR";
    if (errorCode == -2111810944) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_UNKNOWN_CLIENT";
    if (errorCode == -2111810688) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_UNKNOWN_ERROR";
    if (errorCode == -2111811582) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_UNSUPPORTED_API_VERSION";
    if (errorCode == -2111811572) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_USER_NOT_FOUND";
    if (errorCode == -2111811056) return "SCE_NP_WEBAPI_SERVER_ERROR_GAME_CUSTOM_DATA_USERS_ACCESS_TOKEN_REQUIRED";
    if (errorCode == -2111786484) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_ACCESS_DENIED_BY_PRIVACY_LEVEL";
    if (errorCode == -2111786994) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_ACCESS_DENIED_BY_RESOURCE_OWNERSHIP";
    if (errorCode == -2111786486) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_ACCESS_DENIED_DUE_TO_TITILE_MISMATCH";
    if (errorCode == -2111786496) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_ACCESS_TOKEN_REQUIRED";
    if (errorCode == -2111786236) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_AUTHORIZATION_SERVER_ERROR";
    if (errorCode == -2111787007) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_BAD_REQUEST";
    if (errorCode == -2111786489) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_BANNED_APPLICATION";
    if (errorCode == -2111786487) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_BANNED_DEVICE";
    if (errorCode == -2111786488) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_BANNED_USER";
    if (errorCode == -2111786619) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_BLOCKED_USER_EXISTS";
    if (errorCode == -2111786494) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_EXPIRED_ACCESS_TOKEN";
    if (errorCode == -2111786491) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_EXPIRED_NP_TITLE_TOKEN";
    if (errorCode == -2111786687) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_HEADER_REQUIRED";
    if (errorCode == -2111786239) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_INTERNAL_SERVER_ERROR";
    if (errorCode == -2111786495) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_INVALID_ACCESS_TOKEN";
    if (errorCode == -2111786624) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_INVALID_BODY";
    if (errorCode == -2111786622) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_INVALID_BODY_PARAMETER";
    if (errorCode == -2111786620) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_INVALID_BODY_PARAMETER_COMBINATION";
    if (errorCode == -2111786621) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_INVALID_BODY_PARAMETER_LIST_LENGTH";
    if (errorCode == -2111786688) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_INVALID_HEADER";
    if (errorCode == -2111786617) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_INVALID_MULTIPART_HEADER";
    if (errorCode == -2111787001) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_INVALID_NP_COMMUNICATION_ID";
    if (errorCode == -2111787004) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_INVALID_NP_ENVIRONMENT";
    if (errorCode == -2111787002) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_INVALID_NP_SERVICE_LABEL";
    if (errorCode == -2111786999) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_INVALID_NP_SERVICE_NAME";
    if (errorCode == -2111787003) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_INVALID_NP_TITLE_ID";
    if (errorCode == -2111786492) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_INVALID_NP_TITLE_TOKEN";
    if (errorCode == -2111786998) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_INVALID_OAUTH_CLIENT_ID";
    if (errorCode == -2111786748) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_INVALID_PARAMETER_IN_URL";
    if (errorCode == -2111786751) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_INVALID_QUERY_PARAMETER";
    if (errorCode == -2111786750) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_INVALID_QUERY_PARAMETER_COMBINATION";
    if (errorCode == -2111786752) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_INVALID_QUERY_STRING";
    if (errorCode == -2111787000) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_INVALID_SERVICE_ID";
    if (errorCode == -2111786618) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_MANDATORY_BODY_PARAMETER_MISSING";
    if (errorCode == -2111786616) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_MANDATORY_MULTIPART_HEADER_MISSING";
    if (errorCode == -2111786747) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_MANDATORY_QUERY_PARAMETER_MISSING";
    if (errorCode == -2111786482) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_NEED_TO_UPGRADE";
    if (errorCode == -2111786490) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_NOT_AUTHORIZED";
    if (errorCode == -2111786483) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_NOT_AUTHORIZED_ACCESS_TOKEN";
    if (errorCode == -2111786365) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_NOT_AUTHORIZED_APPLICATION";
    if (errorCode == -2111786481) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_NOT_AUTHORIZED_ON_PLATFORM";
    if (errorCode == -2111786364) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_NP_COMMUNICATION_ID_NOT_FOUND";
    if (errorCode == -2111786366) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_NP_SERVICE_LABEL_NOT_FOUND";
    if (errorCode == -2111786367) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_NP_TITLE_ID_NOT_FOUND";
    if (errorCode == -2111786997) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_NP_TITLE_ID_NOT_MATCHING_TOKENS";
    if (errorCode == -2111786493) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_NP_TITLE_TOKEN_REQUIRED";
    if (errorCode == -2111786623) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_NULL_VALUE_NOT_ALLOWED";
    if (errorCode == -2111786485) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_RATE_LIMIT_EXCEEDED";
    if (errorCode == -2111786995) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_RESOURCE_NOT_FOUND";
    if (errorCode == -2111786237) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_SERVER_BUSY";
    if (errorCode == -2111786175) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_SERVICE_CLOSED";
    if (errorCode == -2111786363) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_SERVICE_ID_NOT_FOUND";
    if (errorCode == -2111786238) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_SERVICE_TEMPORARILY_UNAVAILABLE";
    if (errorCode == -2111787005) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_TOO_LARGE_BODY";
    if (errorCode == -2111786749) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_UNAVAILABLE_QUERY_PARAMETER_FOR_RESOURCE";
    if (errorCode == -2111786176) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_UNDER_MAINTENANCE";
    if (errorCode == -2111786240) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_UNEXPECTED_ERROR";
    if (errorCode == -2111786368) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_UNKNOWN_CLIENT";
    if (errorCode == -2111786112) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_UNKNOWN_ERROR";
    if (errorCode == -2111787006) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_UNSUPPORTED_API_VERSION";
    if (errorCode == -2111786996) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_USER_NOT_FOUND";
    if (errorCode == -2111786480) return "SCE_NP_WEBAPI_SERVER_ERROR_GRIEF_REPORT_USERS_ACCESS_TOKEN_REQUIRED";
    if (errorCode == -2111806964) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_ACCESS_DENIED_BY_PRIVACY_LEVEL";
    if (errorCode == -2111807474) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_ACCESS_DENIED_BY_RESOURCE_OWNERSHIP";
    if (errorCode == -2111806966) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_ACCESS_DENIED_DUE_TO_TITILE_MISMATCH";
    if (errorCode == -2111806976) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_ACCESS_TOKEN_REQUIRED";
    if (errorCode == -2111805437) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_ALREADY_GROUP_MEMBER";
    if (errorCode == -2111806716) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_AUTHORIZATION_SERVER_ERROR";
    if (errorCode == -2111807487) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_BAD_REQUEST";
    if (errorCode == -2111806969) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_BANNED_APPLICATION";
    if (errorCode == -2111806967) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_BANNED_DEVICE";
    if (errorCode == -2111806968) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_BANNED_USER";
    if (errorCode == -2111807099) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_BLOCKED_USER_EXISTS";
    if (errorCode == -2111805436) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_EXCEEDED_GROUP_MEMBERS_LIMIT";
    if (errorCode == -2111806974) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_EXPIRED_ACCESS_TOKEN";
    if (errorCode == -2111806971) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_EXPIRED_NP_TITLE_TOKEN";
    if (errorCode == -2111807167) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_HEADER_REQUIRED";
    if (errorCode == -2111806719) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_INTERNAL_SERVER_ERROR";
    if (errorCode == -2111806975) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_INVALID_ACCESS_TOKEN";
    if (errorCode == -2111807104) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_INVALID_BODY";
    if (errorCode == -2111807102) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_INVALID_BODY_PARAMETER";
    if (errorCode == -2111807100) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_INVALID_BODY_PARAMETER_COMBINATION";
    if (errorCode == -2111807101) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_INVALID_BODY_PARAMETER_LIST_LENGTH";
    if (errorCode == -2111807168) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_INVALID_HEADER";
    if (errorCode == -2111807097) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_INVALID_MULTIPART_HEADER";
    if (errorCode == -2111807481) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_INVALID_NP_COMMUNICATION_ID";
    if (errorCode == -2111807484) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_INVALID_NP_ENVIRONMENT";
    if (errorCode == -2111807482) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_INVALID_NP_SERVICE_LABEL";
    if (errorCode == -2111807479) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_INVALID_NP_SERVICE_NAME";
    if (errorCode == -2111807483) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_INVALID_NP_TITLE_ID";
    if (errorCode == -2111806972) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_INVALID_NP_TITLE_TOKEN";
    if (errorCode == -2111807478) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_INVALID_OAUTH_CLIENT_ID";
    if (errorCode == -2111807228) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_INVALID_PARAMETER_IN_URL";
    if (errorCode == -2111807231) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_INVALID_QUERY_PARAMETER";
    if (errorCode == -2111807230) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_INVALID_QUERY_PARAMETER_COMBINATION";
    if (errorCode == -2111807232) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_INVALID_QUERY_STRING";
    if (errorCode == -2111807480) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_INVALID_SERVICE_ID";
    if (errorCode == -2111807098) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_MANDATORY_BODY_PARAMETER_MISSING";
    if (errorCode == -2111807096) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_MANDATORY_MULTIPART_HEADER_MISSING";
    if (errorCode == -2111807227) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_MANDATORY_QUERY_PARAMETER_MISSING";
    if (errorCode == -2111806962) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_NEED_TO_UPGRADE";
    if (errorCode == -2111806970) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_NOT_AUTHORIZED";
    if (errorCode == -2111806963) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_NOT_AUTHORIZED_ACCESS_TOKEN";
    if (errorCode == -2111806845) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_NOT_AUTHORIZED_APPLICATION";
    if (errorCode == -2111806961) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_NOT_AUTHORIZED_ON_PLATFORM";
    if (errorCode == -2111806844) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_NP_COMMUNICATION_ID_NOT_FOUND";
    if (errorCode == -2111806846) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_NP_SERVICE_LABEL_NOT_FOUND";
    if (errorCode == -2111806847) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_NP_TITLE_ID_NOT_FOUND";
    if (errorCode == -2111807477) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_NP_TITLE_ID_NOT_MATCHING_TOKENS";
    if (errorCode == -2111806973) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_NP_TITLE_TOKEN_REQUIRED";
    if (errorCode == -2111807103) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_NULL_VALUE_NOT_ALLOWED";
    if (errorCode == -2111806965) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_RATE_LIMIT_EXCEEDED";
    if (errorCode == -2111807475) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_RESOURCE_NOT_FOUND";
    if (errorCode == -2111806717) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_SERVER_BUSY";
    if (errorCode == -2111806655) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_SERVICE_CLOSED";
    if (errorCode == -2111806843) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_SERVICE_ID_NOT_FOUND";
    if (errorCode == -2111806718) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_SERVICE_TEMPORARILY_UNAVAILABLE";
    if (errorCode == -2111807485) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_TOO_LARGE_BODY";
    if (errorCode == -2111806464) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_TOO_LARGE_IMAGE_DATA";
    if (errorCode == -2111805438) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_TOO_LARGE_VOICE_DATA";
    if (errorCode == -2111807229) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_UNAVAILABLE_QUERY_PARAMETER_FOR_RESOURCE";
    if (errorCode == -2111806656) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_UNDER_MAINTENANCE";
    if (errorCode == -2111806720) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_UNEXPECTED_ERROR";
    if (errorCode == -2111806848) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_UNKNOWN_CLIENT";
    if (errorCode == -2111806592) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_UNKNOWN_ERROR";
    if (errorCode == -2111807486) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_UNSUPPORTED_API_VERSION";
    if (errorCode == -2111807476) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_USER_NOT_FOUND";
    if (errorCode == -2111806960) return "SCE_NP_WEBAPI_SERVER_ERROR_GROUP_MESSAGING_USERS_ACCESS_TOKEN_REQUIRED";
    if (errorCode == -2098200476) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_100_CONTINUE";
    if (errorCode == -2098200475) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_101_SWITCHING_PROTOCOLS";
    if (errorCode == -2098200474) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_102_PROCESSING";
    if (errorCode == -2098200376) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_200_OK";
    if (errorCode == -2098200375) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_201_CREATED";
    if (errorCode == -2098200374) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_202_ACCEPTED";
    if (errorCode == -2098200373) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_203_NON_AUTHORITATIVE_INFORMATION";
    if (errorCode == -2098200372) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_204_NO_CONTENT";
    if (errorCode == -2098200371) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_205_RESET_CONTENT";
    if (errorCode == -2098200370) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_206_PARTIAL_CONTENT";
    if (errorCode == -2098200369) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_207_MULTI_STATUS";
    if (errorCode == -2098200368) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_208_ALREADY_REPORTED";
    if (errorCode == -2098200350) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_226_IM_USED";
    if (errorCode == -2098200276) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_300_MULTIPLE_CHOICES";
    if (errorCode == -2098200275) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_301_MOVED_PERMANENTLY";
    if (errorCode == -2098200274) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_302_FOUND";
    if (errorCode == -2098200273) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_303_SEE_OTHER";
    if (errorCode == -2098200272) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_304_NOT_MODIFIED";
    if (errorCode == -2098200271) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_305_USE_PROXY";
    if (errorCode == -2098200270) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_306_SWITCH_PROXY";
    if (errorCode == -2098200269) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_307_TEMPORARY_REDIRECT";
    if (errorCode == -2098200268) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_308_PERMANENT_REDIRECT";
    if (errorCode == -2098200176) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_400_BAD_REQUEST";
    if (errorCode == -2098200175) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_401_UNAUTHORIZED";
    if (errorCode == -2098200174) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_402_PAYMENT_REQUIRED";
    if (errorCode == -2098200173) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_403_FORBIDDEN";
    if (errorCode == -2098200172) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_404_NOT_FOUND";
    if (errorCode == -2098200171) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_405_METHOD_NOT_ALLOWED";
    if (errorCode == -2098200170) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_406_NOT_ACCEPTABLE";
    if (errorCode == -2098200169) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_407_PROXY_AUTHENTICATION_REQUIRED";
    if (errorCode == -2098200168) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_408_REQUEST_TIMEOUT";
    if (errorCode == -2098200167) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_409_CONFLICT";
    if (errorCode == -2098200166) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_410_GONE";
    if (errorCode == -2098200165) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_411_LENGTH_REQUIRED";
    if (errorCode == -2098200164) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_412_PRECONDITION_FAILED";
    if (errorCode == -2098200163) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_413_REQUEST_ENTITY_TOO_LARGE";
    if (errorCode == -2098200162) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_414_REQUEST_URI_TOO_LONG";
    if (errorCode == -2098200161) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_415_UNSUPPORTED_MEDIA_TYPE";
    if (errorCode == -2098200160) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_416_REQUESTED_RANGE_NOT_SATISFIABLE";
    if (errorCode == -2098200159) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_417_EXPECTATION_FAILED";
    if (errorCode == -2098200158) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_418_I_M_A_TEAPOT";
    if (errorCode == -2098200157) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_419_AUTHENTICATION_TIMEOUT";
    if (errorCode == -2098200156) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_420_METHOD_FAILURE_ENHANCE_YOUR_CALM";
    if (errorCode == -2098200154) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_422_UNPROCESSABLE_ENTITY";
    if (errorCode == -2098200153) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_423_LOCKED";
    if (errorCode == -2098200152) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_424_FAILED_DEPENDENCY";
    if (errorCode == -2098200151) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_425_METHOD_FAILURE";
    if (errorCode == -2098200150) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_426_UNORDERED_COLLECTION";
    if (errorCode == -2098200149) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_427_UPGRADE_REQUIRED";
    if (errorCode == -2098200148) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_428_PRECONDITION_REQUIRED";
    if (errorCode == -2098200147) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_429_TOO_MANY_REQUESTS";
    if (errorCode == -2098200145) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_431_REQUEST_HEADER_FIELDS_TOO_LARGE";
    if (errorCode == -2098200132) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_444_NO_RESPONSE";
    if (errorCode == -2098200127) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_449_RETRY_WITH";
    if (errorCode == -2098200126) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_450_BLOCKED_BY_WINDOWS_PARENTAL_CONTROLS";
    if (errorCode == -2098200125) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_451_UNAVAILABLE_FOR_LEGAL_REASONS";
    if (errorCode == -2098200077) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_499_CLIENT_CLOSED_REQUEST";
    if (errorCode == -2098200076) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_500_INTERNAL_SERVER_ERROR";
    if (errorCode == -2098200075) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_501_NOT_IMPLEMENTED";
    if (errorCode == -2098200074) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_502_BAD_GATEWAY";
    if (errorCode == -2098200073) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_503_SERVICE_UNAVAILABLE";
    if (errorCode == -2098200072) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_504_GATEWAY_TIMEOUT";
    if (errorCode == -2098200071) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_505_HTTP_VERSION_NOT_SUPPORTED";
    if (errorCode == -2098200070) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_506_VARIANT_ALSO_NEGOTIATES";
    if (errorCode == -2098200069) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_507_INSUFFICIENT_STORAGE";
    if (errorCode == -2098200068) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_508_LOOP_DETECTED";
    if (errorCode == -2098200067) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_509_BANDWIDTH_LIMIT_EXCEEDED";
    if (errorCode == -2098200066) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_510_NOT_EXTENDED";
    if (errorCode == -2098200065) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_511_NETWORK_AUTHENTICATION_REQUIRED";
    if (errorCode == -2098200054) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_522_CONNECTION_TIMED_OUT";
    if (errorCode == -2098199978) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_598_NETWORK_READ_TIMEOUT_ERROR";
    if (errorCode == -2098199977) return "SCE_NP_WEBAPI_SERVER_ERROR_HTTP_STATUS_CODE_599_NETWORK_CONNECT_TIMEOUT_ERROR";
    if (errorCode == -2111802868) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_ACCESS_DENIED_BY_PRIVACY_LEVEL";
    if (errorCode == -2111803378) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_ACCESS_DENIED_BY_RESOURCE_OWNERSHIP";
    if (errorCode == -2111802870) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_ACCESS_DENIED_DUE_TO_TITILE_MISMATCH";
    if (errorCode == -2111802880) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_ACCESS_TOKEN_REQUIRED";
    if (errorCode == -2111802620) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_AUTHORIZATION_SERVER_ERROR";
    if (errorCode == -2111803391) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_BAD_REQUEST";
    if (errorCode == -2111802873) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_BANNED_APPLICATION";
    if (errorCode == -2111802871) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_BANNED_DEVICE";
    if (errorCode == -2111802872) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_BANNED_USER";
    if (errorCode == -2111803003) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_BLOCKED_USER_EXISTS";
    if (errorCode == -2111802878) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_EXPIRED_ACCESS_TOKEN";
    if (errorCode == -2111802875) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_EXPIRED_NP_TITLE_TOKEN";
    if (errorCode == -2111803071) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_HEADER_REQUIRED";
    if (errorCode == -2111802623) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_INTERNAL_SERVER_ERROR";
    if (errorCode == -2111802879) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_INVALID_ACCESS_TOKEN";
    if (errorCode == -2111803008) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_INVALID_BODY";
    if (errorCode == -2111803006) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_INVALID_BODY_PARAMETER";
    if (errorCode == -2111803004) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_INVALID_BODY_PARAMETER_COMBINATION";
    if (errorCode == -2111803005) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_INVALID_BODY_PARAMETER_LIST_LENGTH";
    if (errorCode == -2111803072) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_INVALID_HEADER";
    if (errorCode == -2111803001) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_INVALID_MULTIPART_HEADER";
    if (errorCode == -2111803385) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_INVALID_NP_COMMUNICATION_ID";
    if (errorCode == -2111803388) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_INVALID_NP_ENVIRONMENT";
    if (errorCode == -2111803386) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_INVALID_NP_SERVICE_LABEL";
    if (errorCode == -2111803383) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_INVALID_NP_SERVICE_NAME";
    if (errorCode == -2111803387) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_INVALID_NP_TITLE_ID";
    if (errorCode == -2111802876) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_INVALID_NP_TITLE_TOKEN";
    if (errorCode == -2111803382) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_INVALID_OAUTH_CLIENT_ID";
    if (errorCode == -2111803132) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_INVALID_PARAMETER_IN_URL";
    if (errorCode == -2111803135) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_INVALID_QUERY_PARAMETER";
    if (errorCode == -2111803134) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_INVALID_QUERY_PARAMETER_COMBINATION";
    if (errorCode == -2111803136) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_INVALID_QUERY_STRING";
    if (errorCode == -2111803384) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_INVALID_SERVICE_ID";
    if (errorCode == -2111803002) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_MANDATORY_BODY_PARAMETER_MISSING";
    if (errorCode == -2111803000) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_MANDATORY_MULTIPART_HEADER_MISSING";
    if (errorCode == -2111803131) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_MANDATORY_QUERY_PARAMETER_MISSING";
    if (errorCode == -2111802866) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_NEED_TO_UPGRADE";
    if (errorCode == -2111802874) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_NOT_AUTHORIZED";
    if (errorCode == -2111802867) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_NOT_AUTHORIZED_ACCESS_TOKEN";
    if (errorCode == -2111802749) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_NOT_AUTHORIZED_APPLICATION";
    if (errorCode == -2111802865) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_NOT_AUTHORIZED_ON_PLATFORM";
    if (errorCode == -2111802748) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_NP_COMMUNICATION_ID_NOT_FOUND";
    if (errorCode == -2111802750) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_NP_SERVICE_LABEL_NOT_FOUND";
    if (errorCode == -2111802751) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_NP_TITLE_ID_NOT_FOUND";
    if (errorCode == -2111803381) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_NP_TITLE_ID_NOT_MATCHING_TOKENS";
    if (errorCode == -2111802877) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_NP_TITLE_TOKEN_REQUIRED";
    if (errorCode == -2111803007) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_NULL_VALUE_NOT_ALLOWED";
    if (errorCode == -2111802869) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_RATE_LIMIT_EXCEEDED";
    if (errorCode == -2111803379) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_RESOURCE_NOT_FOUND";
    if (errorCode == -2111802621) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_SERVER_BUSY";
    if (errorCode == -2111802559) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_SERVICE_CLOSED";
    if (errorCode == -2111802747) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_SERVICE_ID_NOT_FOUND";
    if (errorCode == -2111802622) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_SERVICE_TEMPORARILY_UNAVAILABLE";
    if (errorCode == -2111802368) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_TEMPLATE_NOT_PERMITTED";
    if (errorCode == -2111803389) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_TOO_LARGE_BODY";
    if (errorCode == -2111803133) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_UNAVAILABLE_QUERY_PARAMETER_FOR_RESOURCE";
    if (errorCode == -2111802560) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_UNDER_MAINTENANCE";
    if (errorCode == -2111802624) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_UNEXPECTED_ERROR";
    if (errorCode == -2111802752) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_UNKNOWN_CLIENT";
    if (errorCode == -2111802496) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_UNKNOWN_ERROR";
    if (errorCode == -2111803390) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_UNSUPPORTED_API_VERSION";
    if (errorCode == -2111803380) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_USER_NOT_FOUND";
    if (errorCode == -2111802864) return "SCE_NP_WEBAPI_SERVER_ERROR_NOTIFICATION_LIST_USERS_ACCESS_TOKEN_REQUIRED";
    if (errorCode == -2099249151) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_1_INVALID_REQUEST";
    if (errorCode == -2099249052) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_100_PASSWORD_WAS_RESET_BY_SERVER";
    if (errorCode == -2099249049) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_103_NEEDS_EULA_RE_AGREEMENT";
    if (errorCode == -2099249134) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_18_NEEDS_SOFTWARE_UPDATE";
    if (errorCode == -2099249150) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_2_UNKNOWN_ERROR_HAS_OCCURRED";
    if (errorCode == -2099249132) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_20_UNMATCH_SIGN_IN_ID_OR_PASSWORD";
    if (errorCode == -2099249125) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_27_ACCOUNT_HAS_BEEN_REMOVED_LOGICALLY";
    if (errorCode == -2099249124) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_28_ACCOUNT_HAS_BEEN_BANNED";
    if (errorCode == -2099249123) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_29_CONSOLE_HAS_BEEN_BANNED";
    if (errorCode == -2099245054) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4098_MANDATORY_PARAMETER_IS_MISSING";
    if (errorCode == -2099245053) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4099_PARAMETER_IS_MALFORMED";
    if (errorCode == -2099245050) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4102_BAD_CLIENT_CREDENTIALS";
    if (errorCode == -2099245038) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4114_INSUFFICIENT_SCOPE";
    if (errorCode == -2099245022) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4130_QUERY_PARAMETERS_NOT_ALLOWED_FOR_POST";
    if (errorCode == -2099245017) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4135_NEEDS_UPGRADE_TO_USE_PSN_SERVICE";
    if (errorCode == -2099245002) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4150_INVALID_REQUEST";
    if (errorCode == -2099245001) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4151_UNAUTHORIZED_CLIENT";
    if (errorCode == -2099245000) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4152_UNSUPPORTED_GRANT_TYPE";
    if (errorCode == -2099244999) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4153_INVALID_SCOPE";
    if (errorCode == -2099244998) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4154_INVALID_CONSOLE_TOKEN";
    if (errorCode == -2099244997) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4155_TOKEN_IS_EXPIRED_OR_NOT_FOUND";
    if (errorCode == -2099244996) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4156_UNSUPPORTED_RESPONSE_TYPE";
    if (errorCode == -2099244995) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4157_SERVER_ERROR";
    if (errorCode == -2099244994) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4158_TEMPORARILY_UNAVAILABLE";
    if (errorCode == -2099244993) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4159_INVALID_REFRESH_TOKEN";
    if (errorCode == -2099244992) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4160_NO_DETAILS_AVAILABLE";
    if (errorCode == -2099244991) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4161_CLIENT_WAS_NOT_FOUND";
    if (errorCode == -2099244990) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4162_ACCOUNT_MUST_BE_SUBACCOUNT_AND_NEEDS_EULA_RE_AGREEMENT";
    if (errorCode == -2099244987) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4165_PASSWORD_WAS_PROBABLY_CHANGED";
    if (errorCode == -2099244982) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4170_ACCESS_DENIED";
    if (errorCode == -2099244981) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4171_TOKEN_IS_EXPIRED";
    if (errorCode == -2099244980) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4172_TOKEN_IS_INVALID";
    if (errorCode == -2099244979) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4173_INVALID_CLIENT";
    if (errorCode == -2099244978) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4174_REDIRECT_URI_MISMATCH";
    if (errorCode == -2099244977) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4175_METHOD_NOT_ALLOWED";
    if (errorCode == -2099244976) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4176_ACCOUNT_HAS_BEEN_BANNED";
    if (errorCode == -2099244960) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4192_UNEXPECTED_PARAMETER";
    if (errorCode == -2099244953) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4199_SERVICE_HAS_ENDED";
    if (errorCode == -2099244950) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_4202_SERVICE_IS_UNDER_MAINTENANCE";
    if (errorCode == -2099249101) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_51_ERROR_CODE_RESERVED_FOR_FUTURE_USE";
    if (errorCode == -2099183516) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_100_CONTINUE";
    if (errorCode == -2099183515) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_101_SWITCHING_PROTOCOLS";
    if (errorCode == -2099183514) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_102_PROCESSING";
    if (errorCode == -2099183416) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_200_OK";
    if (errorCode == -2099183415) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_201_CREATED";
    if (errorCode == -2099183414) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_202_ACCEPTED";
    if (errorCode == -2099183413) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_203_NON_AUTHORITATIVE_INFORMATION";
    if (errorCode == -2099183412) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_204_NO_CONTENT";
    if (errorCode == -2099183411) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_205_RESET_CONTENT";
    if (errorCode == -2099183410) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_206_PARTIAL_CONTENT";
    if (errorCode == -2099183409) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_207_MULTI_STATUS";
    if (errorCode == -2099183408) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_208_ALREADY_REPORTED";
    if (errorCode == -2099183390) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_226_IM_USED";
    if (errorCode == -2099183316) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_300_MULTIPLE_CHOICES";
    if (errorCode == -2099183315) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_301_MOVED_PERMANENTLY";
    if (errorCode == -2099183314) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_302_FOUND";
    if (errorCode == -2099183313) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_303_SEE_OTHER";
    if (errorCode == -2099183312) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_304_NOT_MODIFIED";
    if (errorCode == -2099183311) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_305_USE_PROXY";
    if (errorCode == -2099183310) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_306_SWITCH_PROXY";
    if (errorCode == -2099183309) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_307_TEMPORARY_REDIRECT";
    if (errorCode == -2099183308) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_308_PERMANENT_REDIRECT";
    if (errorCode == -2099183216) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_400_BAD_REQUEST";
    if (errorCode == -2099183215) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_401_UNAUTHORIZED";
    if (errorCode == -2099183214) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_402_PAYMENT_REQUIRED";
    if (errorCode == -2099183213) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_403_FORBIDDEN";
    if (errorCode == -2099183212) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_404_NOT_FOUND";
    if (errorCode == -2099183211) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_405_METHOD_NOT_ALLOWED";
    if (errorCode == -2099183210) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_406_NOT_ACCEPTABLE";
    if (errorCode == -2099183209) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_407_PROXY_AUTHENTICATION_REQUIRED";
    if (errorCode == -2099183208) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_408_REQUEST_TIMEOUT";
    if (errorCode == -2099183207) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_409_CONFLICT";
    if (errorCode == -2099183206) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_410_GONE";
    if (errorCode == -2099183205) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_411_LENGTH_REQUIRED";
    if (errorCode == -2099183204) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_412_PRECONDITION_FAILED";
    if (errorCode == -2099183203) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_413_REQUEST_ENTITY_TOO_LARGE";
    if (errorCode == -2099183202) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_414_REQUEST_URI_TOO_LONG";
    if (errorCode == -2099183201) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_415_UNSUPPORTED_MEDIA_TYPE";
    if (errorCode == -2099183200) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_416_REQUESTED_RANGE_NOT_SATISFIABLE";
    if (errorCode == -2099183199) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_417_EXPECTATION_FAILED";
    if (errorCode == -2099183198) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_418_I_M_A_TEAPOT";
    if (errorCode == -2099183197) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_419_AUTHENTICATION_TIMEOUT";
    if (errorCode == -2099183196) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_420_METHOD_FAILURE_ENHANCE_YOUR_CALM";
    if (errorCode == -2099183194) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_422_UNPROCESSABLE_ENTITY";
    if (errorCode == -2099183193) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_423_LOCKED";
    if (errorCode == -2099183192) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_424_FAILED_DEPENDENCY";
    if (errorCode == -2099183191) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_425_METHOD_FAILURE";
    if (errorCode == -2099183190) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_426_UNORDERED_COLLECTION";
    if (errorCode == -2099183189) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_427_UPGRADE_REQUIRED";
    if (errorCode == -2099183188) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_428_PRECONDITION_REQUIRED";
    if (errorCode == -2099183187) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_429_TOO_MANY_REQUESTS";
    if (errorCode == -2099183185) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_431_REQUEST_HEADER_FIELDS_TOO_LARGE";
    if (errorCode == -2099183172) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_444_NO_RESPONSE";
    if (errorCode == -2099183167) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_449_RETRY_WITH";
    if (errorCode == -2099183166) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_450_BLOCKED_BY_WINDOWS_PARENTAL_CONTROLS";
    if (errorCode == -2099183165) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_451_UNAVAILABLE_FOR_LEGAL_REASONS";
    if (errorCode == -2099183117) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_499_CLIENT_CLOSED_REQUEST";
    if (errorCode == -2099183116) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_500_INTERNAL_SERVER_ERROR";
    if (errorCode == -2099183115) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_501_NOT_IMPLEMENTED";
    if (errorCode == -2099183114) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_502_BAD_GATEWAY";
    if (errorCode == -2099183113) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_503_SERVICE_UNAVAILABLE";
    if (errorCode == -2099183112) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_504_GATEWAY_TIMEOUT";
    if (errorCode == -2099183111) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_505_HTTP_VERSION_NOT_SUPPORTED";
    if (errorCode == -2099183110) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_506_VARIANT_ALSO_NEGOTIATES";
    if (errorCode == -2099183109) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_507_INSUFFICIENT_STORAGE";
    if (errorCode == -2099183108) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_508_LOOP_DETECTED";
    if (errorCode == -2099183107) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_509_BANDWIDTH_LIMIT_EXCEEDED";
    if (errorCode == -2099183106) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_510_NOT_EXTENDED";
    if (errorCode == -2099183105) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_511_NETWORK_AUTHENTICATION_REQUIRED";
    if (errorCode == -2099183094) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_522_CONNECTION_TIMED_OUT";
    if (errorCode == -2099183018) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_598_NETWORK_READ_TIMEOUT_ERROR";
    if (errorCode == -2099183017) return "SCE_NP_WEBAPI_SERVER_ERROR_OAUTH_HTTP_STATUS_CODE_599_NETWORK_CONNECT_TIMEOUT_ERROR";
    if (errorCode == -2111827444) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_ACCESS_DENIED_BY_PRIVACY_LEVEL";
    if (errorCode == -2111827954) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_ACCESS_DENIED_BY_RESOURCE_OWNERSHIP";
    if (errorCode == -2111827446) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_ACCESS_DENIED_DUE_TO_TITILE_MISMATCH";
    if (errorCode == -2111827456) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_ACCESS_TOKEN_REQUIRED";
    if (errorCode == -2111826943) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_ALREADY_BOUND_THE_USER";
    if (errorCode == -2111827196) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_AUTHORIZATION_SERVER_ERROR";
    if (errorCode == -2111827967) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_BAD_REQUEST";
    if (errorCode == -2111827449) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_BANNED_APPLICATION";
    if (errorCode == -2111827447) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_BANNED_DEVICE";
    if (errorCode == -2111827448) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_BANNED_USER";
    if (errorCode == -2111827579) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_BLOCKED_USER_EXISTS";
    if (errorCode == -2111826942) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_EXCEED_THE_MAX_COUNT_OF_BIND_USER";
    if (errorCode == -2111827454) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_EXPIRED_ACCESS_TOKEN";
    if (errorCode == -2111827451) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_EXPIRED_NP_TITLE_TOKEN";
    if (errorCode == -2111826683) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_FAILED_TO_DELIVER_NO_PERMISSION";
    if (errorCode == -2111826684) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_FAILED_TO_DELIVER_NO_SUCH_DEVICE";
    if (errorCode == -2111826687) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_FAILED_TO_DELIVER_NO_SUCH_USER";
    if (errorCode == -2111826686) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_FAILED_TO_DELIVER_THE_USER_IS_NOT_BIND_USER";
    if (errorCode == -2111826685) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_FAILED_TO_DELIVER_USER_STATUS_IS_NOT_ACTIVE";
    if (errorCode == -2111827647) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_HEADER_REQUIRED";
    if (errorCode == -2111827199) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_INTERNAL_SERVER_ERROR";
    if (errorCode == -2111827455) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_INVALID_ACCESS_TOKEN";
    if (errorCode == -2111827584) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_INVALID_BODY";
    if (errorCode == -2111827582) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_INVALID_BODY_PARAMETER";
    if (errorCode == -2111827580) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_INVALID_BODY_PARAMETER_COMBINATION";
    if (errorCode == -2111827581) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_INVALID_BODY_PARAMETER_LIST_LENGTH";
    if (errorCode == -2111827648) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_INVALID_HEADER";
    if (errorCode == -2111827577) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_INVALID_MULTIPART_HEADER";
    if (errorCode == -2111827961) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_INVALID_NP_COMMUNICATION_ID";
    if (errorCode == -2111827964) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_INVALID_NP_ENVIRONMENT";
    if (errorCode == -2111827962) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_INVALID_NP_SERVICE_LABEL";
    if (errorCode == -2111827959) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_INVALID_NP_SERVICE_NAME";
    if (errorCode == -2111827963) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_INVALID_NP_TITLE_ID";
    if (errorCode == -2111827452) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_INVALID_NP_TITLE_TOKEN";
    if (errorCode == -2111827958) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_INVALID_OAUTH_CLIENT_ID";
    if (errorCode == -2111827708) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_INVALID_PARAMETER_IN_URL";
    if (errorCode == -2111827711) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_INVALID_QUERY_PARAMETER";
    if (errorCode == -2111827710) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_INVALID_QUERY_PARAMETER_COMBINATION";
    if (errorCode == -2111827712) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_INVALID_QUERY_STRING";
    if (errorCode == -2111827960) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_INVALID_SERVICE_ID";
    if (errorCode == -2111827578) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_MANDATORY_BODY_PARAMETER_MISSING";
    if (errorCode == -2111827576) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_MANDATORY_MULTIPART_HEADER_MISSING";
    if (errorCode == -2111827707) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_MANDATORY_QUERY_PARAMETER_MISSING";
    if (errorCode == -2111827442) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_NEED_TO_UPGRADE";
    if (errorCode == -2111826682) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_NO_PERMISSION_TO_BECOME_ACTIVE_STATUS";
    if (errorCode == -2111826681) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_NOT_ALLOWED_TO_CHANGE_STATUS";
    if (errorCode == -2111827450) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_NOT_AUTHORIZED";
    if (errorCode == -2111827443) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_NOT_AUTHORIZED_ACCESS_TOKEN";
    if (errorCode == -2111827325) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_NOT_AUTHORIZED_APPLICATION";
    if (errorCode == -2111827441) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_NOT_AUTHORIZED_ON_PLATFORM";
    if (errorCode == -2111827324) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_NP_COMMUNICATION_ID_NOT_FOUND";
    if (errorCode == -2111827326) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_NP_SERVICE_LABEL_NOT_FOUND";
    if (errorCode == -2111827327) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_NP_TITLE_ID_NOT_FOUND";
    if (errorCode == -2111827957) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_NP_TITLE_ID_NOT_MATCHING_TOKENS";
    if (errorCode == -2111827453) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_NP_TITLE_TOKEN_REQUIRED";
    if (errorCode == -2111827583) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_NULL_VALUE_NOT_ALLOWED";
    if (errorCode == -2111827445) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_RATE_LIMIT_EXCEEDED";
    if (errorCode == -2111827955) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_RESOURCE_NOT_FOUND";
    if (errorCode == -2111827197) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_SERVER_BUSY";
    if (errorCode == -2111827135) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_SERVICE_CLOSED";
    if (errorCode == -2111827323) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_SERVICE_ID_NOT_FOUND";
    if (errorCode == -2111827198) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_SERVICE_TEMPORARILY_UNAVAILABLE";
    if (errorCode == -2111826941) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_THE_USER_IS_NOT_BIND_USER";
    if (errorCode == -2111827965) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_TOO_LARGE_BODY";
    if (errorCode == -2111827709) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_UNAVAILABLE_QUERY_PARAMETER_FOR_RESOURCE";
    if (errorCode == -2111827136) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_UNDER_MAINTENANCE";
    if (errorCode == -2111827200) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_UNEXPECTED_ERROR";
    if (errorCode == -2111827328) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_UNKNOWN_CLIENT";
    if (errorCode == -2111827072) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_UNKNOWN_ERROR";
    if (errorCode == -2111827966) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_UNSUPPORTED_API_VERSION";
    if (errorCode == -2111827956) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_USER_NOT_FOUND";
    if (errorCode == -2111827440) return "SCE_NP_WEBAPI_SERVER_ERROR_PUSH_NOTIFICATION_USERS_ACCESS_TOKEN_REQUIRED";
    if (errorCode == -2111815156) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_ACCESS_DENIED_BY_PRIVACY_LEVEL";
    if (errorCode == -2111815666) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_ACCESS_DENIED_BY_RESOURCE_OWNERSHIP";
    if (errorCode == -2111815158) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_ACCESS_DENIED_DUE_TO_TITILE_MISMATCH";
    if (errorCode == -2111815168) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_ACCESS_TOKEN_REQUIRED";
    if (errorCode == -2111814908) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_AUTHORIZATION_SERVER_ERROR";
    if (errorCode == -2111815679) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_BAD_REQUEST";
    if (errorCode == -2111815161) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_BANNED_APPLICATION";
    if (errorCode == -2111815159) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_BANNED_DEVICE";
    if (errorCode == -2111815160) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_BANNED_USER";
    if (errorCode == -2111815291) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_BLOCKED_USER_EXISTS";
    if (errorCode == -2111815166) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_EXPIRED_ACCESS_TOKEN";
    if (errorCode == -2111813632) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_EXPIRED_INVITATION";
    if (errorCode == -2111815163) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_EXPIRED_NP_TITLE_TOKEN";
    if (errorCode == -2111815359) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_HEADER_REQUIRED";
    if (errorCode == -2111814911) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_INTERNAL_SERVER_ERROR";
    if (errorCode == -2111815167) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_INVALID_ACCESS_TOKEN";
    if (errorCode == -2111815296) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_INVALID_BODY";
    if (errorCode == -2111815294) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_INVALID_BODY_PARAMETER";
    if (errorCode == -2111815292) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_INVALID_BODY_PARAMETER_COMBINATION";
    if (errorCode == -2111815293) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_INVALID_BODY_PARAMETER_LIST_LENGTH";
    if (errorCode == -2111815360) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_INVALID_HEADER";
    if (errorCode == -2111815289) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_INVALID_MULTIPART_HEADER";
    if (errorCode == -2111815673) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_INVALID_NP_COMMUNICATION_ID";
    if (errorCode == -2111815676) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_INVALID_NP_ENVIRONMENT";
    if (errorCode == -2111815674) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_INVALID_NP_SERVICE_LABEL";
    if (errorCode == -2111815671) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_INVALID_NP_SERVICE_NAME";
    if (errorCode == -2111815675) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_INVALID_NP_TITLE_ID";
    if (errorCode == -2111815164) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_INVALID_NP_TITLE_TOKEN";
    if (errorCode == -2111815670) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_INVALID_OAUTH_CLIENT_ID";
    if (errorCode == -2111815420) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_INVALID_PARAMETER_IN_URL";
    if (errorCode == -2111815423) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_INVALID_QUERY_PARAMETER";
    if (errorCode == -2111815422) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_INVALID_QUERY_PARAMETER_COMBINATION";
    if (errorCode == -2111815424) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_INVALID_QUERY_STRING";
    if (errorCode == -2111815672) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_INVALID_SERVICE_ID";
    if (errorCode == -2111815290) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_MANDATORY_BODY_PARAMETER_MISSING";
    if (errorCode == -2111815288) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_MANDATORY_MULTIPART_HEADER_MISSING";
    if (errorCode == -2111815419) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_MANDATORY_QUERY_PARAMETER_MISSING";
    if (errorCode == -2111815154) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_NEED_TO_UPGRADE";
    if (errorCode == -2111815162) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_NOT_AUTHORIZED";
    if (errorCode == -2111815155) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_NOT_AUTHORIZED_ACCESS_TOKEN";
    if (errorCode == -2111815037) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_NOT_AUTHORIZED_APPLICATION";
    if (errorCode == -2111815153) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_NOT_AUTHORIZED_ON_PLATFORM";
    if (errorCode == -2111814656) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_NOT_PERMIT_TO_ACCESS_THE_SESSION";
    if (errorCode == -2111815036) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_NP_COMMUNICATION_ID_NOT_FOUND";
    if (errorCode == -2111815038) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_NP_SERVICE_LABEL_NOT_FOUND";
    if (errorCode == -2111815039) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_NP_TITLE_ID_NOT_FOUND";
    if (errorCode == -2111815669) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_NP_TITLE_ID_NOT_MATCHING_TOKENS";
    if (errorCode == -2111815165) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_NP_TITLE_TOKEN_REQUIRED";
    if (errorCode == -2111815295) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_NULL_VALUE_NOT_ALLOWED";
    if (errorCode == -2111814654) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_ONLY_SESSION_CREATOR_PERMITTED";
    if (errorCode == -2111814653) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_ONLY_SESSION_MEMBER_PERMITTED";
    if (errorCode == -2111815157) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_RATE_LIMIT_EXCEEDED";
    if (errorCode == -2111815667) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_RESOURCE_NOT_FOUND";
    if (errorCode == -2111814909) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_SERVER_BUSY";
    if (errorCode == -2111814847) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_SERVICE_CLOSED";
    if (errorCode == -2111815035) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_SERVICE_ID_NOT_FOUND";
    if (errorCode == -2111814910) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_SERVICE_TEMPORARILY_UNAVAILABLE";
    if (errorCode == -2111814655) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_THE_SESSION_IS_FULL";
    if (errorCode == -2111815677) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_TOO_LARGE_BODY";
    if (errorCode == -2111815421) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_UNAVAILABLE_QUERY_PARAMETER_FOR_RESOURCE";
    if (errorCode == -2111814848) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_UNDER_MAINTENANCE";
    if (errorCode == -2111814912) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_UNEXPECTED_ERROR";
    if (errorCode == -2111815040) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_UNKNOWN_CLIENT";
    if (errorCode == -2111814784) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_UNKNOWN_ERROR";
    if (errorCode == -2111815678) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_UNSUPPORTED_API_VERSION";
    if (errorCode == -2111815668) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_USER_NOT_FOUND";
    if (errorCode == -2111815152) return "SCE_NP_WEBAPI_SERVER_ERROR_SESSION_INVITATION_USERS_ACCESS_TOKEN_REQUIRED";
    if (errorCode == -2110759156) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_3RD_PARTY_RATE_LIMIT_EXCEEDED";
    if (errorCode == -2110759159) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_CLIENT_ERROR";
    if (errorCode == -2110759069) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_CONTENT_NOT_FOUND";
    if (errorCode == -2110759162) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_DATA_ACCESS_ERROR";
    if (errorCode == -2110759066) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_FORBIDDEN";
    if (errorCode == -2110759063) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_HTTP_NOT_IMPLEMENTED";
    if (errorCode == -2110759166) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_INTERNAL_ERROR";
    if (errorCode == -2110759149) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_INVALID_3RD_PARTY_TOKEN";
    if (errorCode == -2110759100) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_INVALID_APP_ID";
    if (errorCode == -2110759112) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_INVALID_JSON";
    if (errorCode == -2110759102) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_INVALID_MASTER_TOKEN";
    if (errorCode == -2110759163) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_INVALID_PARAMETER";
    if (errorCode == -2110759150) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_INVALID_PSN_ACCESS_TOKEN";
    if (errorCode == -2110759167) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_INVALID_REQUEST";
    if (errorCode == -2110759099) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_NON_REGISTERED_TITLE_ID";
    if (errorCode == -2110759067) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_NOT_ALLOWED";
    if (errorCode == -2110759068) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_NOT_AUTHORIZED";
    if (errorCode == -2110759161) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_NOT_IMPLEMENTED";
    if (errorCode == -2110759097) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_NOT_SUPPORTED";
    if (errorCode == -2110759103) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_OG_TEMPLATE_ERROR";
    if (errorCode == -2110759119) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_POST_RATE_LIMIT_EXCEEDED";
    if (errorCode == -2110759148) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_PRIVACY_VIOLATION";
    if (errorCode == -2110759101) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_PROXY_AUTH_FAILURE";
    if (errorCode == -2110759065) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_REQUEST_TOO_LONG";
    if (errorCode == -2110759064) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_REQUEST_URI_TOO_LONG";
    if (errorCode == -2110759134) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_REQUIRE_AUTHORIZATION";
    if (errorCode == -2110759135) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_REQUIRE_PROFILE_UPDATE";
    if (errorCode == -2110759164) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_RESOURCE_NOT_FOUND";
    if (errorCode == -2110759160) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_SERVER_ERROR";
    if (errorCode == -2110759165) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_SERVICE_UNAVAILABLE";
    if (errorCode == -2110759158) return "SCE_NP_WEBAPI_SERVER_ERROR_SOCIAL_NETWORK_UNSUPPORTED_MEDIA_TYPE";
    if (errorCode == -2111790580) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_ACCESS_DENIED_BY_PRIVACY_LEVEL";
    if (errorCode == -2111791090) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_ACCESS_DENIED_BY_RESOURCE_OWNERSHIP";
    if (errorCode == -2111790582) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_ACCESS_DENIED_DUE_TO_TITILE_MISMATCH";
    if (errorCode == -2111790592) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_ACCESS_TOKEN_REQUIRED";
    if (errorCode == -2111790332) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_AUTHORIZATION_SERVER_ERROR";
    if (errorCode == -2111791103) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_BAD_REQUEST";
    if (errorCode == -2111790585) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_BANNED_APPLICATION";
    if (errorCode == -2111790583) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_BANNED_DEVICE";
    if (errorCode == -2111790584) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_BANNED_USER";
    if (errorCode == -2111790715) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_BLOCKED_USER_EXISTS";
    if (errorCode == -2111790590) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_EXPIRED_ACCESS_TOKEN";
    if (errorCode == -2111790587) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_EXPIRED_NP_TITLE_TOKEN";
    if (errorCode == -2111790783) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_HEADER_REQUIRED";
    if (errorCode == -2111790335) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_INTERNAL_SERVER_ERROR";
    if (errorCode == -2111790591) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_INVALID_ACCESS_TOKEN";
    if (errorCode == -2111790720) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_INVALID_BODY";
    if (errorCode == -2111790718) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_INVALID_BODY_PARAMETER";
    if (errorCode == -2111790716) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_INVALID_BODY_PARAMETER_COMBINATION";
    if (errorCode == -2111790717) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_INVALID_BODY_PARAMETER_LIST_LENGTH";
    if (errorCode == -2111790784) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_INVALID_HEADER";
    if (errorCode == -2111790713) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_INVALID_MULTIPART_HEADER";
    if (errorCode == -2111791097) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_INVALID_NP_COMMUNICATION_ID";
    if (errorCode == -2111791100) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_INVALID_NP_ENVIRONMENT";
    if (errorCode == -2111791098) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_INVALID_NP_SERVICE_LABEL";
    if (errorCode == -2111791095) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_INVALID_NP_SERVICE_NAME";
    if (errorCode == -2111791099) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_INVALID_NP_TITLE_ID";
    if (errorCode == -2111790588) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_INVALID_NP_TITLE_TOKEN";
    if (errorCode == -2111791094) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_INVALID_OAUTH_CLIENT_ID";
    if (errorCode == -2111790844) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_INVALID_PARAMETER_IN_URL";
    if (errorCode == -2111790847) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_INVALID_QUERY_PARAMETER";
    if (errorCode == -2111790846) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_INVALID_QUERY_PARAMETER_COMBINATION";
    if (errorCode == -2111790848) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_INVALID_QUERY_STRING";
    if (errorCode == -2111791096) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_INVALID_SERVICE_ID";
    if (errorCode == -2111790714) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_MANDATORY_BODY_PARAMETER_MISSING";
    if (errorCode == -2111790712) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_MANDATORY_MULTIPART_HEADER_MISSING";
    if (errorCode == -2111790843) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_MANDATORY_QUERY_PARAMETER_MISSING";
    if (errorCode == -2111790578) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_NEED_TO_UPGRADE";
    if (errorCode == -2111790586) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_NOT_AUTHORIZED";
    if (errorCode == -2111790579) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_NOT_AUTHORIZED_ACCESS_TOKEN";
    if (errorCode == -2111790461) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_NOT_AUTHORIZED_APPLICATION";
    if (errorCode == -2111790577) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_NOT_AUTHORIZED_ON_PLATFORM";
    if (errorCode == -2111790460) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_NP_COMMUNICATION_ID_NOT_FOUND";
    if (errorCode == -2111790462) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_NP_SERVICE_LABEL_NOT_FOUND";
    if (errorCode == -2111790463) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_NP_TITLE_ID_NOT_FOUND";
    if (errorCode == -2111791093) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_NP_TITLE_ID_NOT_MATCHING_TOKENS";
    if (errorCode == -2111790589) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_NP_TITLE_TOKEN_REQUIRED";
    if (errorCode == -2111790719) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_NULL_VALUE_NOT_ALLOWED";
    if (errorCode == -2111790581) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_RATE_LIMIT_EXCEEDED";
    if (errorCode == -2111791091) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_RESOURCE_NOT_FOUND";
    if (errorCode == -2111790333) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_SERVER_BUSY";
    if (errorCode == -2111790271) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_SERVICE_CLOSED";
    if (errorCode == -2111790459) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_SERVICE_ID_NOT_FOUND";
    if (errorCode == -2111790334) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_SERVICE_TEMPORARILY_UNAVAILABLE";
    if (errorCode == -2111791101) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_TOO_LARGE_BODY";
    if (errorCode == -2111790845) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_UNAVAILABLE_QUERY_PARAMETER_FOR_RESOURCE";
    if (errorCode == -2111790272) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_UNDER_MAINTENANCE";
    if (errorCode == -2111790336) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_UNEXPECTED_ERROR";
    if (errorCode == -2111790464) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_UNKNOWN_CLIENT";
    if (errorCode == -2111790208) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_UNKNOWN_ERROR";
    if (errorCode == -2111791102) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_UNSUPPORTED_API_VERSION";
    if (errorCode == -2111791092) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_USER_NOT_FOUND";
    if (errorCode == -2111790576) return "SCE_NP_WEBAPI_SERVER_ERROR_TROPHY_USERS_ACCESS_TOKEN_REQUIRED";
    if (errorCode == -2111782388) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_ACCESS_DENIED_BY_PRIVACY_LEVEL";
    if (errorCode == -2111782898) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_ACCESS_DENIED_BY_RESOURCE_OWNERSHIP";
    if (errorCode == -2111782390) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_ACCESS_DENIED_DUE_TO_TITILE_MISMATCH";
    if (errorCode == -2111782400) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_ACCESS_TOKEN_REQUIRED";
    if (errorCode == -2111782140) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_AUTHORIZATION_SERVER_ERROR";
    if (errorCode == -2111782911) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_BAD_REQUEST";
    if (errorCode == -2111782393) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_BANNED_APPLICATION";
    if (errorCode == -2111782391) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_BANNED_DEVICE";
    if (errorCode == -2111782392) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_BANNED_USER";
    if (errorCode == -2111782523) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_BLOCKED_USER_EXISTS";
    if (errorCode == -2111782398) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_EXPIRED_ACCESS_TOKEN";
    if (errorCode == -2111782395) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_EXPIRED_NP_TITLE_TOKEN";
    if (errorCode == -2111782591) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_HEADER_REQUIRED";
    if (errorCode == -2111782143) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_INTERNAL_SERVER_ERROR";
    if (errorCode == -2111782399) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_INVALID_ACCESS_TOKEN";
    if (errorCode == -2111782528) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_INVALID_BODY";
    if (errorCode == -2111782526) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_INVALID_BODY_PARAMETER";
    if (errorCode == -2111782524) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_INVALID_BODY_PARAMETER_COMBINATION";
    if (errorCode == -2111782525) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_INVALID_BODY_PARAMETER_LIST_LENGTH";
    if (errorCode == -2111782592) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_INVALID_HEADER";
    if (errorCode == -2111782521) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_INVALID_MULTIPART_HEADER";
    if (errorCode == -2111782905) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_INVALID_NP_COMMUNICATION_ID";
    if (errorCode == -2111782908) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_INVALID_NP_ENVIRONMENT";
    if (errorCode == -2111782906) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_INVALID_NP_SERVICE_LABEL";
    if (errorCode == -2111782903) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_INVALID_NP_SERVICE_NAME";
    if (errorCode == -2111782907) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_INVALID_NP_TITLE_ID";
    if (errorCode == -2111782396) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_INVALID_NP_TITLE_TOKEN";
    if (errorCode == -2111782902) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_INVALID_OAUTH_CLIENT_ID";
    if (errorCode == -2111782652) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_INVALID_PARAMETER_IN_URL";
    if (errorCode == -2111782655) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_INVALID_QUERY_PARAMETER";
    if (errorCode == -2111782654) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_INVALID_QUERY_PARAMETER_COMBINATION";
    if (errorCode == -2111782656) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_INVALID_QUERY_STRING";
    if (errorCode == -2111782904) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_INVALID_SERVICE_ID";
    if (errorCode == -2111782522) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_MANDATORY_BODY_PARAMETER_MISSING";
    if (errorCode == -2111782520) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_MANDATORY_MULTIPART_HEADER_MISSING";
    if (errorCode == -2111782651) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_MANDATORY_QUERY_PARAMETER_MISSING";
    if (errorCode == -2111782386) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_NEED_TO_UPGRADE";
    if (errorCode == -2111782394) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_NOT_AUTHORIZED";
    if (errorCode == -2111782387) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_NOT_AUTHORIZED_ACCESS_TOKEN";
    if (errorCode == -2111782269) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_NOT_AUTHORIZED_APPLICATION";
    if (errorCode == -2111782385) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_NOT_AUTHORIZED_ON_PLATFORM";
    if (errorCode == -2111782268) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_NP_COMMUNICATION_ID_NOT_FOUND";
    if (errorCode == -2111782270) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_NP_SERVICE_LABEL_NOT_FOUND";
    if (errorCode == -2111782271) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_NP_TITLE_ID_NOT_FOUND";
    if (errorCode == -2111782901) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_NP_TITLE_ID_NOT_MATCHING_TOKENS";
    if (errorCode == -2111782397) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_NP_TITLE_TOKEN_REQUIRED";
    if (errorCode == -2111782527) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_NULL_VALUE_NOT_ALLOWED";
    if (errorCode == -2111782389) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_RATE_LIMIT_EXCEEDED";
    if (errorCode == -2111782899) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_RESOURCE_NOT_FOUND";
    if (errorCode == -2111782141) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_SERVER_BUSY";
    if (errorCode == -2111782079) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_SERVICE_CLOSED";
    if (errorCode == -2111782267) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_SERVICE_ID_NOT_FOUND";
    if (errorCode == -2111782142) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_SERVICE_TEMPORARILY_UNAVAILABLE";
    if (errorCode == -2111782909) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_TOO_LARGE_BODY";
    if (errorCode == -2111782653) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_UNAVAILABLE_QUERY_PARAMETER_FOR_RESOURCE";
    if (errorCode == -2111782080) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_UNDER_MAINTENANCE";
    if (errorCode == -2111782144) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_UNEXPECTED_ERROR";
    if (errorCode == -2111782272) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_UNKNOWN_CLIENT";
    if (errorCode == -2111782016) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_UNKNOWN_ERROR";
    if (errorCode == -2111782910) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_UNSUPPORTED_API_VERSION";
    if (errorCode == -2111782900) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_USER_NOT_FOUND";
    if (errorCode == -2111782384) return "SCE_NP_WEBAPI_SERVER_ERROR_TSS_USERS_ACCESS_TOKEN_REQUIRED";
    if (errorCode == -2097152001) return "SCE_NP_WEBAPI_SERVER_ERROR_UNEXPECTED_ERROR";
    if (errorCode == -2111823348) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_ACCESS_DENIED_BY_PRIVACY_LEVEL";
    if (errorCode == -2111823858) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_ACCESS_DENIED_BY_RESOURCE_OWNERSHIP";
    if (errorCode == -2111823350) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_ACCESS_DENIED_DUE_TO_TITILE_MISMATCH";
    if (errorCode == -2111823360) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_ACCESS_TOKEN_REQUIRED";
    if (errorCode == -2111821566) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_ALREADY_FRIEND";
    if (errorCode == -2111821565) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_ALREADY_FRIEND_REQUESTED";
    if (errorCode == -2111821559) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_ALREADY_NAME_SHARING_REQUESTED";
    if (errorCode == -2111823100) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_AUTHORIZATION_SERVER_ERROR";
    if (errorCode == -2111823871) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_BAD_REQUEST";
    if (errorCode == -2111823353) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_BANNED_APPLICATION";
    if (errorCode == -2111823351) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_BANNED_DEVICE";
    if (errorCode == -2111823352) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_BANNED_USER";
    if (errorCode == -2111821056) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_BLOCK_LIST_FULL";
    if (errorCode == -2111821561) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_BLOCKED_USER";
    if (errorCode == -2111823483) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_BLOCKED_USER_EXISTS";
    if (errorCode == -2111822847) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_CANNOT_ADD_YOUR_OWN_SELF";
    if (errorCode == -2111821556) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_CANNOT_SPECIFY_YOUR_OWN_SELF";
    if (errorCode == -2111820800) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_CONSOLE_NOT_REGISTERED";
    if (errorCode == -2111821311) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_DEVICE_ID_NOT_MATCHED";
    if (errorCode == -2111823358) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_EXPIRED_ACCESS_TOKEN";
    if (errorCode == -2111823355) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_EXPIRED_NP_TITLE_TOKEN";
    if (errorCode == -2111820797) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_FAILED_TO_SEND_WAKE_UP_PACKET_DEVICE_NOT_BOUND";
    if (errorCode == -2111820796) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_FAILED_TO_SEND_WAKE_UP_PACKET_SERVER_ERROR";
    if (errorCode == -2111820798) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_FAILED_TO_SEND_WAKE_UP_PACKET_USER_NOT_BOUND";
    if (errorCode == -2111821568) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_FRIEND_REQUEST_NOT_FOUND";
    if (errorCode == -2111823551) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_HEADER_REQUIRED";
    if (errorCode == -2111823103) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_INTERNAL_SERVER_ERROR";
    if (errorCode == -2111823359) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_INVALID_ACCESS_TOKEN";
    if (errorCode == -2111823488) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_INVALID_BODY";
    if (errorCode == -2111823486) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_INVALID_BODY_PARAMETER";
    if (errorCode == -2111823484) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_INVALID_BODY_PARAMETER_COMBINATION";
    if (errorCode == -2111823485) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_INVALID_BODY_PARAMETER_LIST_LENGTH";
    if (errorCode == -2111823552) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_INVALID_HEADER";
    if (errorCode == -2111823481) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_INVALID_MULTIPART_HEADER";
    if (errorCode == -2111823865) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_INVALID_NP_COMMUNICATION_ID";
    if (errorCode == -2111823868) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_INVALID_NP_ENVIRONMENT";
    if (errorCode == -2111823866) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_INVALID_NP_SERVICE_LABEL";
    if (errorCode == -2111823863) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_INVALID_NP_SERVICE_NAME";
    if (errorCode == -2111823867) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_INVALID_NP_TITLE_ID";
    if (errorCode == -2111823356) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_INVALID_NP_TITLE_TOKEN";
    if (errorCode == -2111823862) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_INVALID_OAUTH_CLIENT_ID";
    if (errorCode == -2111823612) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_INVALID_PARAMETER_IN_URL";
    if (errorCode == -2111823615) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_INVALID_QUERY_PARAMETER";
    if (errorCode == -2111823614) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_INVALID_QUERY_PARAMETER_COMBINATION";
    if (errorCode == -2111823616) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_INVALID_QUERY_STRING";
    if (errorCode == -2111823864) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_INVALID_SERVICE_ID";
    if (errorCode == -2111823482) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_MANDATORY_BODY_PARAMETER_MISSING";
    if (errorCode == -2111823480) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_MANDATORY_MULTIPART_HEADER_MISSING";
    if (errorCode == -2111823611) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_MANDATORY_QUERY_PARAMETER_MISSING";
    if (errorCode == -2111821562) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_NAME_ALREADY_SHARED";
    if (errorCode == -2111821558) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_NAME_REGISTRATION_REQUIRED";
    if (errorCode == -2111821560) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_NAME_SHARING_REQUEST_NOT_FOUND";
    if (errorCode == -2111823346) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_NEED_TO_UPGRADE";
    if (errorCode == -2111821312) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_NON_FRIEND_NOT_ALLOWED";
    if (errorCode == -2111823354) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_NOT_AUTHORIZED";
    if (errorCode == -2111823347) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_NOT_AUTHORIZED_ACCESS_TOKEN";
    if (errorCode == -2111823229) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_NOT_AUTHORIZED_APPLICATION";
    if (errorCode == -2111823345) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_NOT_AUTHORIZED_ON_PLATFORM";
    if (errorCode == -2111821567) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_NOT_IN_FRIEND_LIST";
    if (errorCode == -2111823228) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_NP_COMMUNICATION_ID_NOT_FOUND";
    if (errorCode == -2111823230) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_NP_SERVICE_LABEL_NOT_FOUND";
    if (errorCode == -2111823231) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_NP_TITLE_ID_NOT_FOUND";
    if (errorCode == -2111821310) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_NP_TITLE_ID_NOT_MATCHED";
    if (errorCode == -2111823861) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_NP_TITLE_ID_NOT_MATCHING_TOKENS";
    if (errorCode == -2111823357) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_NP_TITLE_TOKEN_REQUIRED";
    if (errorCode == -2111823487) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_NULL_VALUE_NOT_ALLOWED";
    if (errorCode == -2111820799) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_OTHER_CONSOLE_ALREADY_REGISTERED";
    if (errorCode == -2111823349) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_RATE_LIMIT_EXCEEDED";
    if (errorCode == -2111822848) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_REQUEST_NOT_ALLOWED_DUE_TO_ONLINE_STATUS";
    if (errorCode == -2111821563) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_REQUESTED_USERS_FRIEND_LIST_FULL";
    if (errorCode == -2111821564) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_REQUESTERS_FRIEND_LIST_FULL";
    if (errorCode == -2111823859) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_RESOURCE_NOT_FOUND";
    if (errorCode == -2111823101) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_SERVER_BUSY";
    if (errorCode == -2111823039) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_SERVICE_CLOSED";
    if (errorCode == -2111823227) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_SERVICE_ID_NOT_FOUND";
    if (errorCode == -2111823102) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_SERVICE_TEMPORARILY_UNAVAILABLE";
    if (errorCode == -2111820544) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_START_LOG_NOT_FOUND";
    if (errorCode == -2111821557) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_TARGET_USER_NOT_REGISTERED_NAME";
    if (errorCode == -2111823869) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_TOO_LARGE_BODY";
    if (errorCode == -2111823613) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_UNAVAILABLE_QUERY_PARAMETER_FOR_RESOURCE";
    if (errorCode == -2111823040) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_UNDER_MAINTENANCE";
    if (errorCode == -2111823104) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_UNEXPECTED_ERROR";
    if (errorCode == -2111823232) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_UNKNOWN_CLIENT";
    if (errorCode == -2111822976) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_UNKNOWN_ERROR";
    if (errorCode == -2111823870) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_UNSUPPORTED_API_VERSION";
    if (errorCode == -2111823860) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_USER_NOT_FOUND";
    if (errorCode == -2111823344) return "SCE_NP_WEBAPI_SERVER_ERROR_USER_PROFILE_USERS_ACCESS_TOKEN_REQUIRED";
    if (errorCode == -2145900143) return "SCE_ORBIS_SWU_ERROR_CLOSE_POWER_BUTTON";
    if (errorCode == -2145900285) return "SCE_ORBIS_SWU_ERROR_CONNECT";
    if (errorCode == -2145900287) return "SCE_ORBIS_SWU_ERROR_KILL";
    if (errorCode == -2145900160) return "SCE_ORBIS_SWU_ERROR_NOT_FOUND";
    if (errorCode == -2145900144) return "SCE_ORBIS_SWU_ERROR_OPEN_POWER_BUTTON";
    if (errorCode == -2145900142) return "SCE_ORBIS_SWU_ERROR_READ_POWER_BUTTON";
    if (errorCode == -2145900283) return "SCE_ORBIS_SWU_ERROR_SEND";
    if (errorCode == -2145900286) return "SCE_ORBIS_SWU_ERROR_SOCKET";
    if (errorCode == -2145900284) return "SCE_ORBIS_SWU_ERROR_SOCKET_CLOSE";
    if (errorCode == -2145900191) return "SCE_ORBIS_SWU_ERROR_STAT";
    if (errorCode == -2145900192) return "SCE_ORBIS_SWU_ERROR_UNLINK";
    if (errorCode == -2145900159) return "SCE_ORBIS_SWU_ERROR_WRONG_PUP";
    if (errorCode == -2136014780) return "SCE_PAF_ERROR_ALARM";
    if (errorCode == -2136014816) return "SCE_PAF_ERROR_ALREADY";
    if (errorCode == -2136014815) return "SCE_PAF_ERROR_BUSY";
    if (errorCode == -2136014799) return "SCE_PAF_ERROR_CPUDI";
    if (errorCode == -2135992063) return "SCE_PAF_ERROR_DIR_ERROR";
    if (errorCode == -2135992062) return "SCE_PAF_ERROR_DIR_NOENT";
    if (errorCode == -2136014782) return "SCE_PAF_ERROR_EVENTFLAG";
    if (errorCode == -2135994303) return "SCE_PAF_ERROR_FILE_ASYNC_BUSY";
    if (errorCode == -2135994335) return "SCE_PAF_ERROR_FILE_BAD_FD";
    if (errorCode == -2135994331) return "SCE_PAF_ERROR_FILE_EACCESS";
    if (errorCode == -2135994367) return "SCE_PAF_ERROR_FILE_ERROR";
    if (errorCode == -2135994330) return "SCE_PAF_ERROR_FILE_EXIST";
    if (errorCode == -2135994366) return "SCE_PAF_ERROR_FILE_INVALID_ARG";
    if (errorCode == -2135994362) return "SCE_PAF_ERROR_FILE_INVALID_CALL";
    if (errorCode == -2135994333) return "SCE_PAF_ERROR_FILE_MFILE";
    if (errorCode == -2135994302) return "SCE_PAF_ERROR_FILE_NO_ASYNC";
    if (errorCode == -2135994364) return "SCE_PAF_ERROR_FILE_NO_IMPL";
    if (errorCode == -2135994365) return "SCE_PAF_ERROR_FILE_NO_MEMORY";
    if (errorCode == -2135994332) return "SCE_PAF_ERROR_FILE_NODEV";
    if (errorCode == -2135994329) return "SCE_PAF_ERROR_FILE_NOSPACE";
    if (errorCode == -2135994334) return "SCE_PAF_ERROR_FILE_NOT_FOUND";
    if (errorCode == -2135994327) return "SCE_PAF_ERROR_FILE_NOT_OPENED";
    if (errorCode == -2135994363) return "SCE_PAF_ERROR_FILE_NOT_SUPPORTED";
    if (errorCode == -2135994328) return "SCE_PAF_ERROR_FILE_OPENED";
    if (errorCode == -2136014800) return "SCE_PAF_ERROR_ILLEGAL_CONTEXT";
    if (errorCode == -2136014705) return "SCE_PAF_ERROR_INVALID_ARG";
    if (errorCode == -2136014714) return "SCE_PAF_ERROR_INVALID_COMMAND";
    if (errorCode == -2136014715) return "SCE_PAF_ERROR_INVALID_FLAG";
    if (errorCode == -2136014712) return "SCE_PAF_ERROR_INVALID_FORMAT";
    if (errorCode == -2136014720) return "SCE_PAF_ERROR_INVALID_ID";
    if (errorCode == -2136014718) return "SCE_PAF_ERROR_INVALID_INDEX";
    if (errorCode == -2136014713) return "SCE_PAF_ERROR_INVALID_MODE";
    if (errorCode == -2136014719) return "SCE_PAF_ERROR_INVALID_NAME";
    if (errorCode == -2136014717) return "SCE_PAF_ERROR_INVALID_POINTER";
    if (errorCode == -2136014716) return "SCE_PAF_ERROR_INVALID_SIZE";
    if (errorCode == -2136014706) return "SCE_PAF_ERROR_INVALID_VALUE";
    if (errorCode == -2136012543) return "SCE_PAF_ERROR_JOB_INVAID_STATUS";
    if (errorCode == -2136012542) return "SCE_PAF_ERROR_JOB_NO_THREAD";
    if (errorCode == -2136014811) return "SCE_PAF_ERROR_NOT_FOUND";
    if (errorCode == -2136014845) return "SCE_PAF_ERROR_NOT_IMPLEMENTED";
    if (errorCode == -2136014847) return "SCE_PAF_ERROR_NOT_INITIALIZED";
    if (errorCode == -2136014844) return "SCE_PAF_ERROR_NOT_SUPPORTED";
    if (errorCode == -2136014814) return "SCE_PAF_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2136014813) return "SCE_PAF_ERROR_PRIV_REQUIRED";
    if (errorCode == -2136014783) return "SCE_PAF_ERROR_SEMAPHORE";
    if (errorCode == -2136014784) return "SCE_PAF_ERROR_THREAD";
    if (errorCode == -2136013054) return "SCE_PAF_ERROR_THREAD_ALREADY_STARTED";
    if (errorCode == -2136013055) return "SCE_PAF_ERROR_THREAD_START_FAILED";
    if (errorCode == -2136014812) return "SCE_PAF_ERROR_TIMEOUT";
    if (errorCode == -2136014781) return "SCE_PAF_ERROR_TIMER";
    if (errorCode == -2136014846) return "SCE_PAF_ERROR_UNMATCHED_VERSION";
    if (errorCode == -2134769655) return "SCE_PARTITION_FORMATTER_ERROR_CANCELED";
    if (errorCode == -2134769664) return "SCE_PARTITION_FORMATTER_ERROR_GENERAL";
    if (errorCode == -2134769663) return "SCE_PARTITION_FORMATTER_ERROR_INVAL";
    if (errorCode == -2134769661) return "SCE_PARTITION_FORMATTER_ERROR_IO";
    if (errorCode == -2134769660) return "SCE_PARTITION_FORMATTER_ERROR_MKFS";
    if (errorCode == -2134769659) return "SCE_PARTITION_FORMATTER_ERROR_MKFS_INVAL";
    if (errorCode == -2134769657) return "SCE_PARTITION_FORMATTER_ERROR_MKFS_UFS";
    if (errorCode == -2134769662) return "SCE_PARTITION_FORMATTER_ERROR_NOMEM";
    if (errorCode == -2134769656) return "SCE_PARTITION_FORMATTER_ERROR_NOT_AVAILABLE";
    if (errorCode == -2134769658) return "SCE_PARTITION_FORMATTER_ERROR_NOT_FOUND";
    if (errorCode == -2132934583) return "SCE_PF_AUTH_CLEINT_SERVER_ERROR_INVALID_REQUEST_BODY_SIZE";
    if (errorCode == -2132934653) return "SCE_PF_AUTH_CLIENT_ERROR_ABORTED";
    if (errorCode == -2132934637) return "SCE_PF_AUTH_CLIENT_ERROR_AUTH_FAILED";
    if (errorCode == -2132934638) return "SCE_PF_AUTH_CLIENT_ERROR_CONSOLE_BANNED";
    if (errorCode == -2132934636) return "SCE_PF_AUTH_CLIENT_ERROR_CONSOLE_TOKEN_BUFFER_SIZE_NOT_ENOUGH";
    if (errorCode == -2132934639) return "SCE_PF_AUTH_CLIENT_ERROR_EMERGENT_SYSTEM_SOFTWARE_UPDATE_REQUIRED";
    if (errorCode == -2132934655) return "SCE_PF_AUTH_CLIENT_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2132934654) return "SCE_PF_AUTH_CLIENT_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2132934635) return "SCE_PF_AUTH_CLIENT_ERROR_SIGNATURE_NOT_VALID";
    if (errorCode == -2132934640) return "SCE_PF_AUTH_CLIENT_ERROR_UNSUPPORTED_SYSTEM_SOFTWARE_VERSION";
    if (errorCode == -2132934601) return "SCE_PF_AUTH_CLIENT_SERVER_ERROR_BAD_REQUEST";
    if (errorCode == -2132934581) return "SCE_PF_AUTH_CLIENT_SERVER_ERROR_CERTPS_SIGNATURE_VERIFICATION_FAILED";
    if (errorCode == -2132934576) return "SCE_PF_AUTH_CLIENT_SERVER_ERROR_CREATED_CONSOLE_TOKEN_TOO_LARGE";
    if (errorCode == -2132934578) return "SCE_PF_AUTH_CLIENT_SERVER_ERROR_DPS_MATCHING_CONFIRMATION_FAILED";
    if (errorCode == -2132934579) return "SCE_PF_AUTH_CLIENT_SERVER_ERROR_DPS_SIGNATURE_VERIFICATION_FAILED";
    if (errorCode == -2132934588) return "SCE_PF_AUTH_CLIENT_SERVER_ERROR_INTERNAL_SERVER_ERROR";
    if (errorCode == -2132934604) return "SCE_PF_AUTH_CLIENT_SERVER_ERROR_INVALID_NP_ENVIRONMENT";
    if (errorCode == -2132934605) return "SCE_PF_AUTH_CLIENT_SERVER_ERROR_INVALID_QUERY_STRING";
    if (errorCode == -2132934606) return "SCE_PF_AUTH_CLIENT_SERVER_ERROR_INVALID_REQUEST_BODY";
    if (errorCode == -2132934577) return "SCE_PF_AUTH_CLIENT_SERVER_ERROR_KSES_HASH_MATCHING_FAILED";
    if (errorCode == -2132934582) return "SCE_PF_AUTH_CLIENT_SERVER_ERROR_MESSAGE_FORMAT_SIGNATURE_VERIFICATION_FAILED";
    if (errorCode == -2132934580) return "SCE_PF_AUTH_CLIENT_SERVER_ERROR_NO_C1_DATA";
    if (errorCode == -2132934590) return "SCE_PF_AUTH_CLIENT_SERVER_ERROR_NOT_AUTHORIZED";
    if (errorCode == -2132934575) return "SCE_PF_AUTH_CLIENT_SERVER_ERROR_NOT_FULFILL_A_REQUESTED_VERSION";
    if (errorCode == -2132934607) return "SCE_PF_AUTH_CLIENT_SERVER_ERROR_NULL_VALUE_NOT_ALLOWED";
    if (errorCode == -2132934589) return "SCE_PF_AUTH_CLIENT_SERVER_ERROR_RATE_LIMIT_EXCEEDED";
    if (errorCode == -2132934587) return "SCE_PF_AUTH_CLIENT_SERVER_ERROR_SERVER_BUSY";
    if (errorCode == -2132934586) return "SCE_PF_AUTH_CLIENT_SERVER_ERROR_SERVER_MAINTENANCE";
    if (errorCode == -2132934585) return "SCE_PF_AUTH_CLIENT_SERVER_ERROR_SERVICE_CLOSED";
    if (errorCode == -2132934603) return "SCE_PF_AUTH_CLIENT_SERVER_ERROR_TOOL_LARGE_BODY";
    if (errorCode == -2132934584) return "SCE_PF_AUTH_CLIENT_SERVER_ERROR_UNEXPECTED_ERROR";
    if (errorCode == -2132934608) return "SCE_PF_AUTH_CLIENT_SERVER_ERROR_UNKNOWN";
    if (errorCode == -2132934602) return "SCE_PF_AUTH_CLIENT_SERVER_ERROR_UNSUPPORTED_API_VERSION";
    if (errorCode == -2137178032) return "SCE_PHOTO_PROMOTER_ERROR_CREATE_THUMBNAIL";
    if (errorCode == -2137178031) return "SCE_PHOTO_PROMOTER_ERROR_DB_CORRUPTED";
    if (errorCode == -2137178030) return "SCE_PHOTO_PROMOTER_ERROR_FILE_CORRUPTED";
    if (errorCode == -2137178029) return "SCE_PHOTO_PROMOTER_ERROR_FILE_NOTSUPPORTED";
    if (errorCode == -2135818234) return "SCE_PLAYGO_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2135818233) return "SCE_PLAYGO_ERROR_ALREADY_STARTED";
    if (errorCode == -2135818228) return "SCE_PLAYGO_ERROR_BAD_CHUNK_ID";
    if (errorCode == -2135818231) return "SCE_PLAYGO_ERROR_BAD_HANDLE";
    if (errorCode == -2135818224) return "SCE_PLAYGO_ERROR_BAD_LOCUS";
    if (errorCode == -2135818230) return "SCE_PLAYGO_ERROR_BAD_POINTER";
    if (errorCode == -2135818229) return "SCE_PLAYGO_ERROR_BAD_SIZE";
    if (errorCode == -2135818227) return "SCE_PLAYGO_ERROR_BAD_SPEED";
    if (errorCode == -2135818225) return "SCE_PLAYGO_ERROR_EPERM";
    if (errorCode == -2135818238) return "SCE_PLAYGO_ERROR_FATAL";
    if (errorCode == -2135818236) return "SCE_PLAYGO_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2135818237) return "SCE_PLAYGO_ERROR_NO_MEMORY";
    if (errorCode == -2135818235) return "SCE_PLAYGO_ERROR_NOT_INITIALIZED";
    if (errorCode == -2135818232) return "SCE_PLAYGO_ERROR_NOT_STARTED";
    if (errorCode == -2135818226) return "SCE_PLAYGO_ERROR_NOT_SUPPORT_PLAYGO";
    if (errorCode == -2135818239) return "SCE_PLAYGO_ERROR_UNKNOWN";
    if (errorCode == -2136735698) return "SCE_PROCESS_STARTER_ERROR_3DTV_DETECTED";
    if (errorCode == -2136735702) return "SCE_PROCESS_STARTER_ERROR_ACTIVATE_DISC_PLAYER";
    if (errorCode == -2136735720) return "SCE_PROCESS_STARTER_ERROR_ALLREADY_MOUNTED";
    if (errorCode == -2136735703) return "SCE_PROCESS_STARTER_ERROR_ALREADY_INSTALLED";
    if (errorCode == -2136735736) return "SCE_PROCESS_STARTER_ERROR_APPLICATION_ALLREADY_RUNNING";
    if (errorCode == -2136735710) return "SCE_PROCESS_STARTER_ERROR_APPLICATION_NOT_FOUND";
    if (errorCode == -2136735700) return "SCE_PROCESS_STARTER_ERROR_AREA_SETTING";
    if (errorCode == -2136735733) return "SCE_PROCESS_STARTER_ERROR_BD_DATA_CORRUPTED";
    if (errorCode == -2136735691) return "SCE_PROCESS_STARTER_ERROR_FATAL_FILESYSTEM";
    if (errorCode == -2136735721) return "SCE_PROCESS_STARTER_ERROR_FS_MOUNT";
    if (errorCode == -2136735732) return "SCE_PROCESS_STARTER_ERROR_HDD_DATA_CORRUPTED";
    if (errorCode == -2136735706) return "SCE_PROCESS_STARTER_ERROR_HOST_OVERLAY_MOUNT";
    if (errorCode == -2136735707) return "SCE_PROCESS_STARTER_ERROR_IN_DATA_INSTALL";
    if (errorCode == -2136735704) return "SCE_PROCESS_STARTER_ERROR_IN_DISC_LOAD";
    if (errorCode == -2136735709) return "SCE_PROCESS_STARTER_ERROR_IN_PATCH_INSTALL";
    if (errorCode == -2136735738) return "SCE_PROCESS_STARTER_ERROR_INSUFFICIENT_BUFFER";
    if (errorCode == -2136735699) return "SCE_PROCESS_STARTER_ERROR_INVALID_ACCOUNT";
    if (errorCode == -2136735743) return "SCE_PROCESS_STARTER_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2136735719) return "SCE_PROCESS_STARTER_ERROR_INVALID_SERVICE_LABEL";
    if (errorCode == -2136735740) return "SCE_PROCESS_STARTER_ERROR_KEY_NOT_FOUND";
    if (errorCode == -2136735697) return "SCE_PROCESS_STARTER_ERROR_LAUNCH_PS_CLOUD_BETA_SERVICE";
    if (errorCode == -2136735696) return "SCE_PROCESS_STARTER_ERROR_LAUNCH_PS_CLOUD_SERVICE";
    if (errorCode == -2136735729) return "SCE_PROCESS_STARTER_ERROR_LOGOUT_LAUNCH_USER";
    if (errorCode == -2136735737) return "SCE_PROCESS_STARTER_ERROR_MOUNT_FULL";
    if (errorCode == -2136735727) return "SCE_PROCESS_STARTER_ERROR_NEED_SYSTEM_UPDATE";
    if (errorCode == -2136735735) return "SCE_PROCESS_STARTER_ERROR_NO_DISC_INSERT";
    if (errorCode == -2136735693) return "SCE_PROCESS_STARTER_ERROR_NO_ENTITLEMENT";
    if (errorCode == -2136735742) return "SCE_PROCESS_STARTER_ERROR_NO_GAME_RUNNING";
    if (errorCode == -2136735723) return "SCE_PROCESS_STARTER_ERROR_NO_REQUIRED_PATCH_DOWNLOADED";
    if (errorCode == -2136735728) return "SCE_PROCESS_STARTER_ERROR_NO_SPACE";
    if (errorCode == -2136735739) return "SCE_PROCESS_STARTER_ERROR_NOT_GAME_MINIAPP_APPRICATION";
    if (errorCode == -2136735711) return "SCE_PROCESS_STARTER_ERROR_NOT_MOUNTED";
    if (errorCode == -2136735705) return "SCE_PROCESS_STARTER_ERROR_OTHER_DISC_INSERTED";
    if (errorCode == -2136735741) return "SCE_PROCESS_STARTER_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2136735730) return "SCE_PROCESS_STARTER_ERROR_PARENTAL";
    if (errorCode == -2136735731) return "SCE_PROCESS_STARTER_ERROR_REGION_RESTRICTION";
    if (errorCode == -2136735712) return "SCE_PROCESS_STARTER_ERROR_REQIRED_PSN_SIGNUP";
    if (errorCode == -2136735692) return "SCE_PROCESS_STARTER_ERROR_REQUIRED_HDCP";
    if (errorCode == -2136735722) return "SCE_PROCESS_STARTER_ERROR_REQUIRED_PATCH_DOWNLOADED";
    if (errorCode == -2136735724) return "SCE_PROCESS_STARTER_ERROR_REQUIRED_PATCH_IS_DOWNLOADING";
    if (errorCode == -2136735708) return "SCE_PROCESS_STARTER_ERROR_SKU_FLAG";
    if (errorCode == -2136735694) return "SCE_PROCESS_STARTER_ERROR_START_TIME_VALID_IN_FUTURE";
    if (errorCode == -2136735701) return "SCE_PROCESS_STARTER_ERROR_SYSTEM_UPDATE_IS_FOUND";
    if (errorCode == -2136735726) return "SCE_PROCESS_STARTER_ERROR_UNDER_CONSTRUCTION";
    if (errorCode == -2136735725) return "SCE_PROCESS_STARTER_ERROR_UNDER_UPDATING";
    if (errorCode == -2136735695) return "SCE_PROCESS_STARTER_ERROR_UNOPENED";
    if (errorCode == -2136735734) return "SCE_PROCESS_STARTER_ERROR_UNSUPPORTED_DATA";
    if (errorCode == -2136735690) return "SCE_PROCESS_STARTER_ERROR_UPDATE";
    if (errorCode == -2128740350) return "SCE_PROFILE_CACHE_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2128740347) return "SCE_PROFILE_CACHE_ERROR_INTERNAL";
    if (errorCode == -2128740349) return "SCE_PROFILE_CACHE_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2128740348) return "SCE_PROFILE_CACHE_ERROR_NO_MEMORY";
    if (errorCode == -2128740351) return "SCE_PROFILE_CACHE_ERROR_NOT_INITIALIZED";
    if (errorCode == -2130968573) return "SCE_REMOTEPLAY_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2130964431) return "SCE_REMOTEPLAY_ERROR_BASE64_INVALID_CHARACTER";
    if (errorCode == -2130964430) return "SCE_REMOTEPLAY_ERROR_BASE64_INVALID_LENGTH";
    if (errorCode == -2130964447) return "SCE_REMOTEPLAY_ERROR_INTERNAL_AUTHENTICATION";
    if (errorCode == -2130964472) return "SCE_REMOTEPLAY_ERROR_INTERNAL_BUFFER_OVERFLOW";
    if (errorCode == -2130964474) return "SCE_REMOTEPLAY_ERROR_INTERNAL_BUSY";
    if (errorCode == -2130964445) return "SCE_REMOTEPLAY_ERROR_INTERNAL_DISAPPROVAL";
    if (errorCode == -2130964477) return "SCE_REMOTEPLAY_ERROR_INTERNAL_FATAL";
    if (errorCode == -2130964476) return "SCE_REMOTEPLAY_ERROR_INTERNAL_INVALID_VALUE";
    if (errorCode == -2130964461) return "SCE_REMOTEPLAY_ERROR_INTERNAL_NETWORK_CLOSED";
    if (errorCode == -2130964463) return "SCE_REMOTEPLAY_ERROR_INTERNAL_NETWORK_ILLEGAL_DATA";
    if (errorCode == -2130964460) return "SCE_REMOTEPLAY_ERROR_INTERNAL_NETWORK_SEND";
    if (errorCode == -2130964462) return "SCE_REMOTEPLAY_ERROR_INTERNAL_NETWORK_TIMEOUT";
    if (errorCode == -2130964475) return "SCE_REMOTEPLAY_ERROR_INTERNAL_NOT_FOUND";
    if (errorCode == -2130964473) return "SCE_REMOTEPLAY_ERROR_INTERNAL_NOT_INITIALIZED";
    if (errorCode == -2130964416) return "SCE_REMOTEPLAY_ERROR_INTERNAL_NP_ONLINE_ID_INVALID";
    if (errorCode == -2130964412) return "SCE_REMOTEPLAY_ERROR_INTERNAL_REGIST_COMMAND_DATA_INVLID";
    if (errorCode == -2130964413) return "SCE_REMOTEPLAY_ERROR_INTERNAL_REGIST_COMMAND_INVLID";
    if (errorCode == -2130964414) return "SCE_REMOTEPLAY_ERROR_INTERNAL_REGIST_DEVICE_LIMITED";
    if (errorCode == -2130964415) return "SCE_REMOTEPLAY_ERROR_INTERNAL_REGIST_DEVICE_MISS";
    if (errorCode == -2130964411) return "SCE_REMOTEPLAY_ERROR_INTERNAL_REGIST_NETWORK_CLOSED";
    if (errorCode == -2130964410) return "SCE_REMOTEPLAY_ERROR_INTERNAL_REGIST_NETWORK_TIMEOUT";
    if (errorCode == -2130964409) return "SCE_REMOTEPLAY_ERROR_INTERNAL_REGIST_PINCODE_INVALID";
    if (errorCode == -2130964397) return "SCE_REMOTEPLAY_ERROR_INTERNAL_REMOTEPLAY_CONNECT_INVALID";
    if (errorCode == -2130964395) return "SCE_REMOTEPLAY_ERROR_INTERNAL_REMOTEPLAY_CONNECT_INVALID_BY_DISCPLAYER";
    if (errorCode == -2130964394) return "SCE_REMOTEPLAY_ERROR_INTERNAL_REMOTEPLAY_CONNECT_INVALID_BY_NON_60HZ";
    if (errorCode == -2130964396) return "SCE_REMOTEPLAY_ERROR_INTERNAL_REMOTEPLAY_CONNECT_INVALID_BY_RESTART";
    if (errorCode == -2130964400) return "SCE_REMOTEPLAY_ERROR_INTERNAL_REMOTEPLAY_CONNECT_LIMITED";
    if (errorCode == -2130964398) return "SCE_REMOTEPLAY_ERROR_INTERNAL_REMOTEPLAY_SETTING_INVALID";
    if (errorCode == -2130964399) return "SCE_REMOTEPLAY_ERROR_INTERNAL_REMOTEPLAY_VERSION_UNMATCH";
    if (errorCode == -2130964446) return "SCE_REMOTEPLAY_ERROR_INTERNAL_UNMATCHED_VERSION";
    if (errorCode == -2130964479) return "SCE_REMOTEPLAY_ERROR_INTRENAL_CANCEL";
    if (errorCode == -2130964478) return "SCE_REMOTEPLAY_ERROR_INTRENAL_TIMEOUT";
    if (errorCode == -2130968575) return "SCE_REMOTEPLAY_ERROR_INVALID_ARGS";
    if (errorCode == -2130968319) return "SCE_REMOTEPLAY_ERROR_INVALID_STATE";
    if (errorCode == -2130968318) return "SCE_REMOTEPLAY_ERROR_NOT_CONNECTED";
    if (errorCode == -2130968572) return "SCE_REMOTEPLAY_ERROR_NOT_INITIALIZED";
    if (errorCode == -2130968574) return "SCE_REMOTEPLAY_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2130968317) return "SCE_REMOTEPLAY_ERROR_REGISTERD";
    if (errorCode == -2132213749) return "SCE_RIFMGR_ERROR_ABORTED";
    if (errorCode == -2132213744) return "SCE_RIFMGR_ERROR_ACTIVATION_SLOT_FULL";
    if (errorCode == -2132213758) return "SCE_RIFMGR_ERROR_ALREADY_INITED";
    if (errorCode == -2132213759) return "SCE_RIFMGR_ERROR_BEFORE_INIT";
    if (errorCode == -2132213757) return "SCE_RIFMGR_ERROR_BROKEN";
    if (errorCode == -2132213741) return "SCE_RIFMGR_ERROR_BUSY";
    if (errorCode == -2132213737) return "SCE_RIFMGR_ERROR_BUSY_ACTIVATING";
    if (errorCode == -2132213742) return "SCE_RIFMGR_ERROR_DEACTIVATED";
    if (errorCode == -2132213735) return "SCE_RIFMGR_ERROR_DRM_FREE_RIF";
    if (errorCode == -2132213745) return "SCE_RIFMGR_ERROR_EXPIRED";
    if (errorCode == -2132213736) return "SCE_RIFMGR_ERROR_FAKE_RIF";
    if (errorCode == -2132213751) return "SCE_RIFMGR_ERROR_INTERNAL";
    if (errorCode == -2132213755) return "SCE_RIFMGR_ERROR_INVALID_FORMAT";
    if (errorCode == -2132213754) return "SCE_RIFMGR_ERROR_INVALID_ID";
    if (errorCode == -2132213748) return "SCE_RIFMGR_ERROR_INVALID_KAMAJI_RESPONSE";
    if (errorCode == -2132213747) return "SCE_RIFMGR_ERROR_INVALID_SECURE_RESPONSE";
    if (errorCode == -2132213753) return "SCE_RIFMGR_ERROR_INVALID_VALUE";
    if (errorCode == -2132213743) return "SCE_RIFMGR_ERROR_KDS_UNREACHABLE";
    if (errorCode == -2132213738) return "SCE_RIFMGR_ERROR_NOT_ACTIVE_SIGNED_IN";
    if (errorCode == -2132213756) return "SCE_RIFMGR_ERROR_NOT_FOUND";
    if (errorCode == -2132213750) return "SCE_RIFMGR_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2132213752) return "SCE_RIFMGR_ERROR_OUT_OF_SIZE";
    if (errorCode == -2132213740) return "SCE_RIFMGR_ERROR_PERSISTENT_ACTIVATION_SLOT_FULL";
    if (errorCode == -2132213739) return "SCE_RIFMGR_ERROR_RIF_UPDATE_FAILED";
    if (errorCode == -2132213746) return "SCE_RIFMGR_ERROR_START_TIME_VALID_IN_FUTURE";
    if (errorCode == -2139684836) return "SCE_RUDP_ERROR_ADDR_IN_USE";
    if (errorCode == -2139684835) return "SCE_RUDP_ERROR_ALREADY_BOUND";
    if (errorCode == -2139684827) return "SCE_RUDP_ERROR_ALREADY_ESTABLISHED";
    if (errorCode == -2139684834) return "SCE_RUDP_ERROR_ALREADY_EXISTS";
    if (errorCode == -2139684862) return "SCE_RUDP_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2139684838) return "SCE_RUDP_ERROR_BUFFER_TOO_SMALL";
    if (errorCode == -2139684844) return "SCE_RUDP_ERROR_CANCELLED";
    if (errorCode == -2139684850) return "SCE_RUDP_ERROR_CONN_QUALITY_LEVEL_MISMATCH";
    if (errorCode == -2139684854) return "SCE_RUDP_ERROR_CONN_REFUSED";
    if (errorCode == -2139684855) return "SCE_RUDP_ERROR_CONN_RESET";
    if (errorCode == -2139684853) return "SCE_RUDP_ERROR_CONN_TIMEOUT";
    if (errorCode == -2139684851) return "SCE_RUDP_ERROR_CONN_TRANSPORT_TYPE_MISMATCH";
    if (errorCode == -2139684852) return "SCE_RUDP_ERROR_CONN_VERSION_MISMATCH";
    if (errorCode == -2139684828) return "SCE_RUDP_ERROR_END_OF_DATA";
    if (errorCode == -2139684831) return "SCE_RUDP_ERROR_IN_PROGRESS";
    if (errorCode == -2139684856) return "SCE_RUDP_ERROR_INTERNAL";
    if (errorCode == -2139684860) return "SCE_RUDP_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2139684861) return "SCE_RUDP_ERROR_INVALID_CONTEXT_ID";
    if (errorCode == -2139684858) return "SCE_RUDP_ERROR_INVALID_MUXMODE";
    if (errorCode == -2139684859) return "SCE_RUDP_ERROR_INVALID_OPTION";
    if (errorCode == -2139684833) return "SCE_RUDP_ERROR_INVALID_POLL_ID";
    if (errorCode == -2139684839) return "SCE_RUDP_ERROR_INVALID_SOCKET";
    if (errorCode == -2139684843) return "SCE_RUDP_ERROR_INVALID_VPORT";
    if (errorCode == -2139684826) return "SCE_RUDP_ERROR_KEEP_ALIVE_FAILURE";
    if (errorCode == -2139684609) return "SCE_RUDP_ERROR_MEMLEAK";
    if (errorCode == -2139684857) return "SCE_RUDP_ERROR_MEMORY";
    if (errorCode == -2139684837) return "SCE_RUDP_ERROR_MSG_MALFORMED";
    if (errorCode == -2139684846) return "SCE_RUDP_ERROR_MSG_TOO_LARGE";
    if (errorCode == -2139684830) return "SCE_RUDP_ERROR_NO_EVENT_HANDLER";
    if (errorCode == -2139684847) return "SCE_RUDP_ERROR_NOT_ACCEPTABLE";
    if (errorCode == -2139684845) return "SCE_RUDP_ERROR_NOT_BOUND";
    if (errorCode == -2139684863) return "SCE_RUDP_ERROR_NOT_INITIALIZED";
    if (errorCode == -2139684829) return "SCE_RUDP_ERROR_PAYLOAD_TOO_LARGE";
    if (errorCode == -2139684849) return "SCE_RUDP_ERROR_THREAD";
    if (errorCode == -2139684848) return "SCE_RUDP_ERROR_THREAD_IN_USE";
    if (errorCode == -2139684832) return "SCE_RUDP_ERROR_TOO_MANY_CONTEXTS";
    if (errorCode == -2139684840) return "SCE_RUDP_ERROR_VPORT_EXHAUSTED";
    if (errorCode == -2139684841) return "SCE_RUDP_ERROR_VPORT_IN_USE";
    if (errorCode == -2139684842) return "SCE_RUDP_ERROR_WOULDBLOCK";
    if (errorCode == -2145845149) return "SCE_SAFEMODE_ERROR_CLOSE";
    if (errorCode == -2145845084) return "SCE_SAFEMODE_ERROR_CLOSE_ICC_CONFIGURATION";
    if (errorCode == -2145845087) return "SCE_SAFEMODE_ERROR_CLOSE_POWER_BUTTON";
    if (errorCode == -2145845247) return "SCE_SAFEMODE_ERROR_ENOMEM";
    if (errorCode == -2145845137) return "SCE_SAFEMODE_ERROR_GETMNTINFO";
    if (errorCode == -2145845102) return "SCE_SAFEMODE_ERROR_HDD_IOCTL";
    if (errorCode == -2145845101) return "SCE_SAFEMODE_ERROR_HDD_NONE";
    if (errorCode == -2145845103) return "SCE_SAFEMODE_ERROR_HDD_OPEN";
    if (errorCode == -2145845099) return "SCE_SAFEMODE_ERROR_HDD_SATA_BRIDGE";
    if (errorCode == -2145845100) return "SCE_SAFEMODE_ERROR_HDD_SIZE_ERROR";
    if (errorCode == -2145845104) return "SCE_SAFEMODE_ERROR_HDD_STAT";
    if (errorCode == -2145845199) return "SCE_SAFEMODE_ERROR_INVAL";
    if (errorCode == -2145845195) return "SCE_SAFEMODE_ERROR_IO_UPDATE_FILE_DISC";
    if (errorCode == -2145845196) return "SCE_SAFEMODE_ERROR_IO_UPDATE_FILE_USB";
    if (errorCode == -2145845083) return "SCE_SAFEMODE_ERROR_IOCTL_ICC_CONFIGURATION";
    if (errorCode == -2145845246) return "SCE_SAFEMODE_ERROR_KILL";
    if (errorCode == -2145845145) return "SCE_SAFEMODE_ERROR_MKDIR";
    if (errorCode == -2145845072) return "SCE_SAFEMODE_ERROR_NETCTL_CONNECT_TIME_OUT";
    if (errorCode == -2145845071) return "SCE_SAFEMODE_ERROR_NETWORK_CONNECTION_DISABLED";
    if (errorCode == -2145845138) return "SCE_SAFEMODE_ERROR_NMOUNT_DISC";
    if (errorCode == -2145845135) return "SCE_SAFEMODE_ERROR_NMOUNT_EAP_USER";
    if (errorCode == -2145845139) return "SCE_SAFEMODE_ERROR_NMOUNT_PREINST";
    if (errorCode == -2145845141) return "SCE_SAFEMODE_ERROR_NMOUNT_SYSTEM_DATA";
    if (errorCode == -2145845143) return "SCE_SAFEMODE_ERROR_NMOUNT_UPDATE";
    if (errorCode == -2145845144) return "SCE_SAFEMODE_ERROR_NMOUNT_USB";
    if (errorCode == -2145844992) return "SCE_SAFEMODE_ERROR_NMOUNT_USB_EINVAL";
    if (errorCode == -2145844991) return "SCE_SAFEMODE_ERROR_NMOUNT_USB_EIO";
    if (errorCode == -2145844990) return "SCE_SAFEMODE_ERROR_NMOUNT_USB_ENXIO";
    if (errorCode == -2145845140) return "SCE_SAFEMODE_ERROR_NMOUNT_USER";
    if (errorCode == -2145845200) return "SCE_SAFEMODE_ERROR_NOT_FOUND";
    if (errorCode == -2145845198) return "SCE_SAFEMODE_ERROR_NOT_RECOVERY_PUP";
    if (errorCode == -2145845085) return "SCE_SAFEMODE_ERROR_OPEN_ICC_CONFIGURATION";
    if (errorCode == -2145845088) return "SCE_SAFEMODE_ERROR_OPEN_POWER_BUTTON";
    if (errorCode == -2145845151) return "SCE_SAFEMODE_ERROR_OPEN_READ";
    if (errorCode == -2145845150) return "SCE_SAFEMODE_ERROR_OPEN_WRITE";
    if (errorCode == -2145845136) return "SCE_SAFEMODE_ERROR_PWRITE";
    if (errorCode == -2145845148) return "SCE_SAFEMODE_ERROR_READ";
    if (errorCode == -2145845086) return "SCE_SAFEMODE_ERROR_READ_POWER_BUTTON";
    if (errorCode == -2145845152) return "SCE_SAFEMODE_ERROR_STAT";
    if (errorCode == -2145844976) return "SCE_SAFEMODE_ERROR_STAT_USB_EIO";
    if (errorCode == -2145844975) return "SCE_SAFEMODE_ERROR_STAT_USB_ENXIO";
    if (errorCode == -2145845146) return "SCE_SAFEMODE_ERROR_UNLINK";
    if (errorCode == -2145845142) return "SCE_SAFEMODE_ERROR_UNMOUNT";
    if (errorCode == -2145845197) return "SCE_SAFEMODE_ERROR_UNSUPPORTED_PUP_BETA";
    if (errorCode == -2145845147) return "SCE_SAFEMODE_ERROR_WRITE";
    if (errorCode == -2137022464) return "SCE_SAVE_DATA_ERROR_ABORT";
    if (errorCode == -2137022454) return "SCE_SAVE_DATA_ERROR_AUTO_UPLOAD_SETTING_ARG";
    if (errorCode == -2137022455) return "SCE_SAVE_DATA_ERROR_AUTO_UPLOAD_SETTING_MAGIC";
    if (errorCode == -2137063411) return "SCE_SAVE_DATA_ERROR_BAD_MOUNTED";
    if (errorCode == -2137063409) return "SCE_SAVE_DATA_ERROR_BROKEN";
    if (errorCode == -2137063421) return "SCE_SAVE_DATA_ERROR_BUSY";
    if (errorCode == -2137022447) return "SCE_SAVE_DATA_ERROR_BUSY_FOR_SAVING";
    if (errorCode == -2137022452) return "SCE_SAVE_DATA_ERROR_CLOUD_NO_SPACE";
    if (errorCode == -2137022460) return "SCE_SAVE_DATA_ERROR_COPY_FORMAT";
    if (errorCode == -2137022457) return "SCE_SAVE_DATA_ERROR_DATA_IN_USE";
    if (errorCode == -2137022450) return "SCE_SAVE_DATA_ERROR_DEX_TOOL_SAVED";
    if (errorCode == -2137063417) return "SCE_SAVE_DATA_ERROR_EXISTS";
    if (errorCode == -2137022451) return "SCE_SAVE_DATA_ERROR_FAKED_OWNER";
    if (errorCode == -2137063410) return "SCE_SAVE_DATA_ERROR_FILE_NOT_FOUND";
    if (errorCode == -2137022449) return "SCE_SAVE_DATA_ERROR_FINALIZED";
    if (errorCode == -2137063418) return "SCE_SAVE_DATA_ERROR_FINGERPRINT_MISMATCH";
    if (errorCode == -2137063413) return "SCE_SAVE_DATA_ERROR_INTERNAL";
    if (errorCode == -2137022448) return "SCE_SAVE_DATA_ERROR_INVALID_DIRNAME";
    if (errorCode == -2137063407) return "SCE_SAVE_DATA_ERROR_INVALID_LOGIN_USER";
    if (errorCode == -2137063406) return "SCE_SAVE_DATA_ERROR_MEMORY_NOT_READY";
    if (errorCode == -2137063412) return "SCE_SAVE_DATA_ERROR_MOUNT_FULL";
    if (errorCode == -2137063408) return "SCE_SAVE_DATA_ERROR_MOUNT_INHIBIT";
    if (errorCode == -2137063419) return "SCE_SAVE_DATA_ERROR_NO_PERMISSION";
    if (errorCode == -2137063415) return "SCE_SAVE_DATA_ERROR_NO_SPACE";
    if (errorCode == -2137063414) return "SCE_SAVE_DATA_ERROR_NO_SPACE_FS";
    if (errorCode == -2137063416) return "SCE_SAVE_DATA_ERROR_NOT_FOUND";
    if (errorCode == -2137063423) return "SCE_SAVE_DATA_ERROR_NOT_INITIALIZED";
    if (errorCode == -2137063420) return "SCE_SAVE_DATA_ERROR_NOT_MOUNTED";
    if (errorCode == -2137022462) return "SCE_SAVE_DATA_ERROR_NOT_PSN_BINDED";
    if (errorCode == -2137063422) return "SCE_SAVE_DATA_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2137022461) return "SCE_SAVE_DATA_ERROR_OWNER_MISMATCH";
    if (errorCode == -2137063424) return "SCE_SAVE_DATA_ERROR_PARAMETER";
    if (errorCode == -2137022458) return "SCE_SAVE_DATA_ERROR_PROHIBITED_DATA";
    if (errorCode == -2137022459) return "SCE_SAVE_DATA_ERROR_REACHED_MAX_COUNT";
    if (errorCode == -2137022456) return "SCE_SAVE_DATA_ERROR_REVISION_CONFLICT";
    if (errorCode == -2137022463) return "SCE_SAVE_DATA_ERROR_UNSUPPORTED";
    if (errorCode == -2137022453) return "SCE_SAVE_DATA_ERROR_UPLOAD_FORMAT";
    if (errorCode == -2137030640) return "SCE_SAVE_DATA_I_ERROR_ABORT";
    if (errorCode == -2137030608) return "SCE_SAVE_DATA_I_ERROR_ALIAS_FULL";
    if (errorCode == -2137030607) return "SCE_SAVE_DATA_I_ERROR_ALIAS_UNKNOWN";
    if (errorCode == -2137030655) return "SCE_SAVE_DATA_I_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2137030495) return "SCE_SAVE_DATA_I_ERROR_ARCHIVE_BROKEN_IMAGE";
    if (errorCode == -2137030496) return "SCE_SAVE_DATA_I_ERROR_ARCHIVE_WRONG_STATUS";
    if (errorCode == -2137030490) return "SCE_SAVE_DATA_I_ERROR_ARCHIVE_Z_BUF";
    if (errorCode == -2137030492) return "SCE_SAVE_DATA_I_ERROR_ARCHIVE_Z_DATA";
    if (errorCode == -2137030494) return "SCE_SAVE_DATA_I_ERROR_ARCHIVE_Z_ERRNO";
    if (errorCode == -2137030491) return "SCE_SAVE_DATA_I_ERROR_ARCHIVE_Z_MEM";
    if (errorCode == -2137030493) return "SCE_SAVE_DATA_I_ERROR_ARCHIVE_Z_STREAM";
    if (errorCode == -2137030489) return "SCE_SAVE_DATA_I_ERROR_ARCHIVE_Z_VERSION";
    if (errorCode == -2137029632) return "SCE_SAVE_DATA_I_ERROR_AUTO_UPLOAD_SETTING_OFF";
    if (errorCode == -2137030571) return "SCE_SAVE_DATA_I_ERROR_BROKEN";
    if (errorCode == -2137030649) return "SCE_SAVE_DATA_I_ERROR_BUFFER_SIZE";
    if (errorCode == -2137030462) return "SCE_SAVE_DATA_I_ERROR_CACHE_CONFLICT";
    if (errorCode == -2137030463) return "SCE_SAVE_DATA_I_ERROR_CACHE_DATA_NOT_FOUND";
    if (errorCode == -2137030461) return "SCE_SAVE_DATA_I_ERROR_CACHE_EDIT_FILE";
    if (errorCode == -2137030464) return "SCE_SAVE_DATA_I_ERROR_CACHE_FILE_NOT_OPEN";
    if (errorCode == -2137030639) return "SCE_SAVE_DATA_I_ERROR_CANCELED";
    if (errorCode == -2137030563) return "SCE_SAVE_DATA_I_ERROR_CHECK_KEYSTONE";
    if (errorCode == -2137030528) return "SCE_SAVE_DATA_I_ERROR_COPY_FORMAT";
    if (errorCode == -2137030567) return "SCE_SAVE_DATA_I_ERROR_CREATE_PFS_IMAGE";
    if (errorCode == -2137030544) return "SCE_SAVE_DATA_I_ERROR_DB_NOT_FOUND";
    if (errorCode == -2137030543) return "SCE_SAVE_DATA_I_ERROR_DB_NOT_FOUND_DIR_EXIST";
    if (errorCode == -2137030542) return "SCE_SAVE_DATA_I_ERROR_DB_NOT_FOUND_RECORD_ITEM";
    if (errorCode == -2137030620) return "SCE_SAVE_DATA_I_ERROR_DIR_EXIST";
    if (errorCode == -2137030622) return "SCE_SAVE_DATA_I_ERROR_DIR_NOT_FOUND";
    if (errorCode == -2137030384) return "SCE_SAVE_DATA_I_ERROR_DOWNLOAD_DATA_BROKEN";
    if (errorCode == -2137030383) return "SCE_SAVE_DATA_I_ERROR_DOWNLOAD_DATA_IN_USE";
    if (errorCode == -2137030381) return "SCE_SAVE_DATA_I_ERROR_DOWNLOAD_NO_APP_INSTALLED";
    if (errorCode == -2137030380) return "SCE_SAVE_DATA_I_ERROR_DOWNLOAD_NOT_FOUND";
    if (errorCode == -2137030382) return "SCE_SAVE_DATA_I_ERROR_DOWNLOAD_STORAGE_NO_SPACE";
    if (errorCode == -2137029376) return "SCE_SAVE_DATA_I_ERROR_ENTRY_NOT_FOUND";
    if (errorCode == -2137030566) return "SCE_SAVE_DATA_I_ERROR_FAKE_BROKEN";
    if (errorCode == -2137030526) return "SCE_SAVE_DATA_I_ERROR_FAKED_OWNER";
    if (errorCode == -2137030619) return "SCE_SAVE_DATA_I_ERROR_FILE_EXIST";
    if (errorCode == -2137030621) return "SCE_SAVE_DATA_I_ERROR_FILE_NOT_FOUND";
    if (errorCode == -2137030561) return "SCE_SAVE_DATA_I_ERROR_FILE_ORGANIZATION";
    if (errorCode == -2137030618) return "SCE_SAVE_DATA_I_ERROR_FINALIZED";
    if (errorCode == -2137030564) return "SCE_SAVE_DATA_I_ERROR_FINGERPRINT";
    if (errorCode == -2137030623) return "SCE_SAVE_DATA_I_ERROR_HIERARCHY_LIMIT_OVER";
    if (errorCode == -2137030577) return "SCE_SAVE_DATA_I_ERROR_INTERNAL";
    if (errorCode == -2137030578) return "SCE_SAVE_DATA_I_ERROR_INVALID_APIID";
    if (errorCode == -2137030652) return "SCE_SAVE_DATA_I_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2137030648) return "SCE_SAVE_DATA_I_ERROR_INVALID_ARGUMENT_SERVER";
    if (errorCode == -2137030636) return "SCE_SAVE_DATA_I_ERROR_INVALID_DIRNAME";
    if (errorCode == -2137030647) return "SCE_SAVE_DATA_I_ERROR_INVALID_LOGIN_USER";
    if (errorCode == -2137030650) return "SCE_SAVE_DATA_I_ERROR_INVALID_POINTER";
    if (errorCode == -2137030562) return "SCE_SAVE_DATA_I_ERROR_KEYSTONE";
    if (errorCode == -2137029119) return "SCE_SAVE_DATA_I_ERROR_MEMORY_BUSY";
    if (errorCode == -2137029118) return "SCE_SAVE_DATA_I_ERROR_MEMORY_BUSY_FOR_SAVING";
    if (errorCode == -2137029120) return "SCE_SAVE_DATA_I_ERROR_MEMORY_NOT_READY";
    if (errorCode == -2137030606) return "SCE_SAVE_DATA_I_ERROR_MOUNT_ALREADY";
    if (errorCode == -2137030604) return "SCE_SAVE_DATA_I_ERROR_MOUNT_RDONLY";
    if (errorCode == -2137030600) return "SCE_SAVE_DATA_I_ERROR_MOUNT_SUSPEND_STARTED";
    if (errorCode == -2137030605) return "SCE_SAVE_DATA_I_ERROR_MOUNT_UNKNOWN";
    if (errorCode == -2137030599) return "SCE_SAVE_DATA_I_ERROR_MOUNT_USER_LOGOUTING";
    if (errorCode == -2137030601) return "SCE_SAVE_DATA_I_ERROR_NO_SPACE_FS";
    if (errorCode == -2137030602) return "SCE_SAVE_DATA_I_ERROR_NO_SPACE_MOUNT_POINT";
    if (errorCode == -2137030654) return "SCE_SAVE_DATA_I_ERROR_NOT_INITIALIZED";
    if (errorCode == -2137030603) return "SCE_SAVE_DATA_I_ERROR_NOT_INITIALIZED_MOUNT_MAN";
    if (errorCode == -2137030651) return "SCE_SAVE_DATA_I_ERROR_NOT_SUPPORTED";
    if (errorCode == -2137030653) return "SCE_SAVE_DATA_I_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2137030576) return "SCE_SAVE_DATA_I_ERROR_PARAMSFO_BROKEN";
    if (errorCode == -2137030575) return "SCE_SAVE_DATA_I_ERROR_PARAMSFO_BROKEN_OPENPSID";
    if (errorCode == -2137030572) return "SCE_SAVE_DATA_I_ERROR_PARAMSFO_DEX_TOOL_SAVED";
    if (errorCode == -2137030574) return "SCE_SAVE_DATA_I_ERROR_PARAMSFO_LOCAL_OWNER";
    if (errorCode == -2137030570) return "SCE_SAVE_DATA_I_ERROR_PARAMSFO_PSN_BIND";
    if (errorCode == -2137030573) return "SCE_SAVE_DATA_I_ERROR_PARAMSFO_PSN_OWNER";
    if (errorCode == -2137030624) return "SCE_SAVE_DATA_I_ERROR_PATH";
    if (errorCode == -2137030568) return "SCE_SAVE_DATA_I_ERROR_PFS_MOUNT";
    if (errorCode == -2137030569) return "SCE_SAVE_DATA_I_ERROR_SEALED_KEY";
    if (errorCode == -2137030637) return "SCE_SAVE_DATA_I_ERROR_SKIP";
    if (errorCode == -2137030638) return "SCE_SAVE_DATA_I_ERROR_TIMEOUT";
    if (errorCode == -2137030646) return "SCE_SAVE_DATA_I_ERROR_UNSUPPORTED_FORMAT";
    if (errorCode == -2137030423) return "SCE_SAVE_DATA_I_ERROR_UPLOAD_ACCOUNT_MISMATCH";
    if (errorCode == -2137030426) return "SCE_SAVE_DATA_I_ERROR_UPLOAD_BLOCKS_MAX";
    if (errorCode == -2137030430) return "SCE_SAVE_DATA_I_ERROR_UPLOAD_CLOUD_MAX_SIZE";
    if (errorCode == -2137030432) return "SCE_SAVE_DATA_I_ERROR_UPLOAD_CLOUD_NO_SPACE";
    if (errorCode == -2137030429) return "SCE_SAVE_DATA_I_ERROR_UPLOAD_DATA_BROKEN";
    if (errorCode == -2137030428) return "SCE_SAVE_DATA_I_ERROR_UPLOAD_DATA_IN_USE";
    if (errorCode == -2137030424) return "SCE_SAVE_DATA_I_ERROR_UPLOAD_FAKED_OWNER";
    if (errorCode == -2137030527) return "SCE_SAVE_DATA_I_ERROR_UPLOAD_FORMAT";
    if (errorCode == -2137030512) return "SCE_SAVE_DATA_I_ERROR_UPLOAD_LIST_MAGIC";
    if (errorCode == -2137030144) return "SCE_SAVE_DATA_I_ERROR_UPLOAD_LIST_NOT_FOUND";
    if (errorCode == -2137030427) return "SCE_SAVE_DATA_I_ERROR_UPLOAD_NOT_SUPPORTED";
    if (errorCode == -2137030422) return "SCE_SAVE_DATA_I_ERROR_UPLOAD_RESIGN_JSON_FORMAT";
    if (errorCode == -2137029887) return "SCE_SAVE_DATA_I_ERROR_UPLOAD_SETTING_EDIT";
    if (errorCode == -2137029888) return "SCE_SAVE_DATA_I_ERROR_UPLOAD_SETTING_MAGIC";
    if (errorCode == -2137030431) return "SCE_SAVE_DATA_I_ERROR_UPLOAD_STORAGE_NO_SPACE";
    if (errorCode == -2137030425) return "SCE_SAVE_DATA_I_ERROR_UPLOAD_USER_MISMATCH";
    if (errorCode == -2137030545) return "SCE_SAVE_DATA_I_ERROR_USER_NOT_LOGIN";
    if (errorCode == -2135031549) return "SCE_SCREENSHOT_ERROR_ABORT";
    if (errorCode == -2135031799) return "SCE_SCREENSHOT_ERROR_CAPTURE_BUSY";
    if (errorCode == -2135031798) return "SCE_SCREENSHOT_ERROR_CAPTURE_CANCELED";
    if (errorCode == -2135031800) return "SCE_SCREENSHOT_ERROR_CAPTURE_FAILED";
    if (errorCode == -2135031796) return "SCE_SCREENSHOT_ERROR_CONTENT_FULL";
    if (errorCode == -2135031501) return "SCE_SCREENSHOT_ERROR_DISPLAY_BUFFER_NOT_IN_USE";
    if (errorCode == -2135031499) return "SCE_SCREENSHOT_ERROR_DISPLAY_BUFFER_ON_MUTE";
    if (errorCode == -2135031500) return "SCE_SCREENSHOT_ERROR_DISPLAY_BUFFER_RETRY_COUNT_MAX";
    if (errorCode == -2135031498) return "SCE_SCREENSHOT_ERROR_DISPLAY_BUFFER_TOO_BIG";
    if (errorCode == -2135031805) return "SCE_SCREENSHOT_ERROR_FILE_NOT_FOUND";
    if (errorCode == -2135031502) return "SCE_SCREENSHOT_ERROR_GOTO_PROCESS_SUSPEND";
    if (errorCode == -2135031802) return "SCE_SCREENSHOT_ERROR_INTERNAL";
    if (errorCode == -2135031807) return "SCE_SCREENSHOT_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2135031795) return "SCE_SCREENSHOT_ERROR_INVALID_DATA";
    if (errorCode == -2135031548) return "SCE_SCREENSHOT_ERROR_MAIN_THREAD_CALL";
    if (errorCode == -2135031803) return "SCE_SCREENSHOT_ERROR_MEDIA_FULL";
    if (errorCode == -2135031797) return "SCE_SCREENSHOT_ERROR_MEDIA_NOT_EXIST";
    if (errorCode == -2135031806) return "SCE_SCREENSHOT_ERROR_NO_MEMORY";
    if (errorCode == -2135031794) return "SCE_SCREENSHOT_ERROR_NOT_SUPPORTED_DATA";
    if (errorCode == -2135031804) return "SCE_SCREENSHOT_ERROR_NOT_SUPPORTED_FORMAT";
    if (errorCode == -2135031487) return "SCE_SCREENSHOT_ERROR_NOT_SUPPORTED_PLATFORM";
    if (errorCode == -2135031801) return "SCE_SCREENSHOT_ERROR_SCREENSHOT_DISABLED";
    if (errorCode == -2135031423) return "SCE_SCREENSHOT_ERROR_SCREENSHOT_SAVE_INVALID_ARGUMENT";
    if (errorCode == -2135031424) return "SCE_SCREENSHOT_ERROR_SCREENSHOT_SAVE_MEMORY_ALLOCATE_FAILIURE";
    if (errorCode == -2135031519) return "SCE_SCREENSHOT_ERROR_SERVER_BUSY";
    if (errorCode == -2135031517) return "SCE_SCREENSHOT_ERROR_SERVER_NO_MEMORY";
    if (errorCode == -2135031518) return "SCE_SCREENSHOT_ERROR_SERVER_NOT_EXIST";
    if (errorCode == -2135031407) return "SCE_SCREENSHOT_ERROR_SYS_ERROR_FATAL";
    if (errorCode == -2135031402) return "SCE_SCREENSHOT_ERROR_SYS_ERROR_LOCK_RESOURCE";
    if (errorCode == -2135031406) return "SCE_SCREENSHOT_ERROR_SYS_ERROR_MAP_ADDRESS";
    if (errorCode == -2135031404) return "SCE_SCREENSHOT_ERROR_SYS_ERROR_REMAP_TO_VMID0";
    if (errorCode == -2135031403) return "SCE_SCREENSHOT_ERROR_SYS_ERROR_SDMA_COPY";
    if (errorCode == -2135031408) return "SCE_SCREENSHOT_ERROR_SYS_ERROR_UNKNOWN";
    if (errorCode == -2135031405) return "SCE_SCREENSHOT_ERROR_SYS_ERROR_UNMAP_ADDRESS";
    if (errorCode == -2135031503) return "SCE_SCREENSHOT_ERROR_SYS_FATAL_ERROR";
    if (errorCode == -2135031547) return "SCE_SCREENSHOT_ERROR_UNEXPECTED";
    if (errorCode == -2135031546) return "SCE_SCREENSHOT_ERROR_UNKNOWN_SYS_ERROR";
    if (errorCode == -2145899933) return "SCE_SET_UPPER_ERROR_CLOSE";
    if (errorCode == -2145900028) return "SCE_SET_UPPER_ERROR_CONNECT";
    if (errorCode == -2145900031) return "SCE_SET_UPPER_ERROR_ENOMEM";
    if (errorCode == -2145899983) return "SCE_SET_UPPER_ERROR_INVAL";
    if (errorCode == -2145900030) return "SCE_SET_UPPER_ERROR_KILL";
    if (errorCode == -2145899930) return "SCE_SET_UPPER_ERROR_MKDIR";
    if (errorCode == -2145899984) return "SCE_SET_UPPER_ERROR_NOT_FOUND";
    if (errorCode == -2145899935) return "SCE_SET_UPPER_ERROR_OPEN_READ";
    if (errorCode == -2145899934) return "SCE_SET_UPPER_ERROR_OPEN_WRITE";
    if (errorCode == -2145899932) return "SCE_SET_UPPER_ERROR_READ";
    if (errorCode == -2145900026) return "SCE_SET_UPPER_ERROR_SEND";
    if (errorCode == -2145900029) return "SCE_SET_UPPER_ERROR_SOCKET";
    if (errorCode == -2145900027) return "SCE_SET_UPPER_ERROR_SOCKET_CLOSE";
    if (errorCode == -2145899936) return "SCE_SET_UPPER_ERROR_STAT";
    if (errorCode == -2145899931) return "SCE_SET_UPPER_ERROR_WRITE";
    if (errorCode == -2132016631) return "SCE_SETTINGS_ERROR_BT_AUTH_FAILED";
    if (errorCode == -2132016627) return "SCE_SETTINGS_ERROR_BT_BD_REMOTE_NOT_SUPPORTED";
    if (errorCode == -2132016630) return "SCE_SETTINGS_ERROR_BT_CONNECTION_FAILED";
    if (errorCode == -2132016629) return "SCE_SETTINGS_ERROR_BT_CONNECTION_MAX";
    if (errorCode == -2132016632) return "SCE_SETTINGS_ERROR_BT_CONNECTION_TIMEOUT";
    if (errorCode == -2132016640) return "SCE_SETTINGS_ERROR_BT_DEVICE_OPEN_FAILED";
    if (errorCode == -2132016635) return "SCE_SETTINGS_ERROR_BT_EVENT_CANNOT_READ";
    if (errorCode == -2132016637) return "SCE_SETTINGS_ERROR_BT_EVENT_CANNOT_REGIST";
    if (errorCode == -2132016636) return "SCE_SETTINGS_ERROR_BT_EVENT_WAIT_FAILED";
    if (errorCode == -2132016638) return "SCE_SETTINGS_ERROR_BT_GET_EVENT_QUEUE_FAILED";
    if (errorCode == -2132016633) return "SCE_SETTINGS_ERROR_BT_NO_PROFILE";
    if (errorCode == -2132016628) return "SCE_SETTINGS_ERROR_BT_REGIST_FULL";
    if (errorCode == -2132016634) return "SCE_SETTINGS_ERROR_BT_STATE_INVALID";
    if (errorCode == -2132016639) return "SCE_SETTINGS_ERROR_BT_WRITE_FAILED";
    if (errorCode == -2132016894) return "SCE_SETTINGS_ERROR_PSN_CAM_JSON_PARSE";
    if (errorCode == -2132016895) return "SCE_SETTINGS_ERROR_PSN_CAM_WEB_APP_FATAL";
    if (errorCode == -2132016896) return "SCE_SETTINGS_ERROR_PSN_CERTIFICATE_VERIFICATION";
    if (errorCode == -2132017113) return "SCE_SETTINGS_NETWORK_ERROR_CONN_TEST_AP_DISCONNECTED";
    if (errorCode == -2132017114) return "SCE_SETTINGS_NETWORK_ERROR_CONN_TEST_BANDWIDTH_TIMEOUT";
    if (errorCode == -2132017120) return "SCE_SETTINGS_NETWORK_ERROR_CONN_TEST_CONNECTING_TIMEOUT";
    if (errorCode == -2132017112) return "SCE_SETTINGS_NETWORK_ERROR_CONN_TEST_HTTP_GET_STATUS_NOT_200";
    if (errorCode == -2132017117) return "SCE_SETTINGS_NETWORK_ERROR_CONN_TEST_INET_CONN_TIMEOUT";
    if (errorCode == -2132017119) return "SCE_SETTINGS_NETWORK_ERROR_CONN_TEST_IPOBTAINING_TIMEOUT";
    if (errorCode == -2132017118) return "SCE_SETTINGS_NETWORK_ERROR_CONN_TEST_IPOBTAINING_TIMEOUT_WITH_WEP";
    if (errorCode == -2132017115) return "SCE_SETTINGS_NETWORK_ERROR_CONN_TEST_NATTYPE_TIMEOUT";
    if (errorCode == -2132017110) return "SCE_SETTINGS_NETWORK_ERROR_CONN_TEST_NETWORK_DISABLED";
    if (errorCode == -2132017111) return "SCE_SETTINGS_NETWORK_ERROR_CONN_TEST_PSN_SIGNED_OUT";
    if (errorCode == -2132017116) return "SCE_SETTINGS_NETWORK_ERROR_CONN_TEST_SIGNIN_TIMEOUT";
    if (errorCode == -2132017152) return "SCE_SETTINGS_NETWORK_ERROR_EASY_PPPOE_TIMEOUT";
    if (errorCode == -2130376184) return "SCE_SHARE_ACTIVITY_ERROR_ABSTRACT_STORAGE_CLOSE";
    if (errorCode == -2130376188) return "SCE_SHARE_ACTIVITY_ERROR_ABSTRACT_STORAGE_GETITEM";
    if (errorCode == -2130376189) return "SCE_SHARE_ACTIVITY_ERROR_ABSTRACT_STORAGE_GETSTORAGE";
    if (errorCode == -2130376191) return "SCE_SHARE_ACTIVITY_ERROR_ABSTRACT_STORAGE_LOAD_SERVICE_TYPE_TWITTER";
    if (errorCode == -2130376187) return "SCE_SHARE_ACTIVITY_ERROR_ABSTRACT_STORAGE_NEWCONTENT";
    if (errorCode == -2130376185) return "SCE_SHARE_ACTIVITY_ERROR_ABSTRACT_STORAGE_OPEN";
    if (errorCode == -2130376186) return "SCE_SHARE_ACTIVITY_ERROR_ABSTRACT_STORAGE_SETMETADATA";
    if (errorCode == -2130376190) return "SCE_SHARE_ACTIVITY_ERROR_ABSTRACT_STORAGE_UNLOAD_SERVICE_TYPE_TWITTER";
    if (errorCode == -2130377471) return "SCE_SHARE_ACTIVITY_ERROR_BGFT_GET_TASK_USER_ID";
    if (errorCode == -2130377470) return "SCE_SHARE_ACTIVITY_ERROR_BGFT_GET_UPLOADED_ID";
    if (errorCode == -2130377469) return "SCE_SHARE_ACTIVITY_ERROR_BGFT_UPLOAD_GET_PROGRESS";
    if (errorCode == -2130378751) return "SCE_SHARE_ACTIVITY_ERROR_CANCEL";
    if (errorCode == -2130378238) return "SCE_SHARE_ACTIVITY_ERROR_FILE_BGFT_JSON_META_CLOSE";
    if (errorCode == -2130378237) return "SCE_SHARE_ACTIVITY_ERROR_FILE_BGFT_JSON_META_FSTAT";
    if (errorCode == -2130378235) return "SCE_SHARE_ACTIVITY_ERROR_FILE_BGFT_JSON_META_MALLOC";
    if (errorCode == -2130378239) return "SCE_SHARE_ACTIVITY_ERROR_FILE_BGFT_JSON_META_OPEN";
    if (errorCode == -2130378236) return "SCE_SHARE_ACTIVITY_ERROR_FILE_BGFT_JSON_META_READ";
    if (errorCode == -2130378494) return "SCE_SHARE_ACTIVITY_ERROR_HTTP_STATUS_ERROR";
    if (errorCode == -2130378750) return "SCE_SHARE_ACTIVITY_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2130377983) return "SCE_SHARE_ACTIVITY_ERROR_JSON_BGFT_JSON_META_PARSE";
    if (errorCode == -2130377982) return "SCE_SHARE_ACTIVITY_ERROR_JSON_CONTENTSINFO_META_PARSE";
    if (errorCode == -2130376690) return "SCE_SHARE_ACTIVITY_ERROR_LIB_HTTP_ABORT_REQUEST";
    if (errorCode == -2130376698) return "SCE_SHARE_ACTIVITY_ERROR_LIB_HTTP_ADD_REQUEST_HEADER";
    if (errorCode == -2130376700) return "SCE_SHARE_ACTIVITY_ERROR_LIB_HTTP_CREATE_CONNECTION_WITH_URL";
    if (errorCode == -2130376699) return "SCE_SHARE_ACTIVITY_ERROR_LIB_HTTP_CREATE_REQUEST_WITH_URL";
    if (errorCode == -2130376701) return "SCE_SHARE_ACTIVITY_ERROR_LIB_HTTP_CREATE_TEMPLATE";
    if (errorCode == -2130376692) return "SCE_SHARE_ACTIVITY_ERROR_LIB_HTTP_DELETE_CONNECTION";
    if (errorCode == -2130376693) return "SCE_SHARE_ACTIVITY_ERROR_LIB_HTTP_DELETE_REQUEST";
    if (errorCode == -2130376691) return "SCE_SHARE_ACTIVITY_ERROR_LIB_HTTP_DELETE_TEMPLATE";
    if (errorCode == -2130376695) return "SCE_SHARE_ACTIVITY_ERROR_LIB_HTTP_GET_RESPONSE_CONTENT_LENGTH";
    if (errorCode == -2130376696) return "SCE_SHARE_ACTIVITY_ERROR_LIB_HTTP_GET_STATUS_CODE";
    if (errorCode == -2130376703) return "SCE_SHARE_ACTIVITY_ERROR_LIB_HTTP_INIT";
    if (errorCode == -2130376694) return "SCE_SHARE_ACTIVITY_ERROR_LIB_HTTP_READ_DATA";
    if (errorCode == -2130376697) return "SCE_SHARE_ACTIVITY_ERROR_LIB_HTTP_SEND_REQUEST";
    if (errorCode == -2130376702) return "SCE_SHARE_ACTIVITY_ERROR_LIB_HTTP_TERM";
    if (errorCode == -2130377716) return "SCE_SHARE_ACTIVITY_ERROR_LIB_KERNEL_CREATE_EVENT_FLAG";
    if (errorCode == -2130377718) return "SCE_SHARE_ACTIVITY_ERROR_LIB_KERNEL_PTHREAD_ATTR_DESTROY";
    if (errorCode == -2130377719) return "SCE_SHARE_ACTIVITY_ERROR_LIB_KERNEL_PTHREAD_ATTR_INIT";
    if (errorCode == -2130377723) return "SCE_SHARE_ACTIVITY_ERROR_LIB_KERNEL_PTHREAD_COND_ATTR_INIT";
    if (errorCode == -2130377721) return "SCE_SHARE_ACTIVITY_ERROR_LIB_KERNEL_PTHREAD_COND_DESTROY";
    if (errorCode == -2130377724) return "SCE_SHARE_ACTIVITY_ERROR_LIB_KERNEL_PTHREAD_COND_INIT";
    if (errorCode == -2130377722) return "SCE_SHARE_ACTIVITY_ERROR_LIB_KERNEL_PTHREAD_COND_SIGNAL";
    if (errorCode == -2130377720) return "SCE_SHARE_ACTIVITY_ERROR_LIB_KERNEL_PTHREAD_CREATE";
    if (errorCode == -2130377717) return "SCE_SHARE_ACTIVITY_ERROR_LIB_KERNEL_PTHREAD_JOIN";
    if (errorCode == -2130377725) return "SCE_SHARE_ACTIVITY_ERROR_LIB_KERNEL_PTHREAD_MUTEX_ATTR_INIT";
    if (errorCode == -2130377726) return "SCE_SHARE_ACTIVITY_ERROR_LIB_KERNEL_PTHREAD_MUTEX_DESTROY";
    if (errorCode == -2130377727) return "SCE_SHARE_ACTIVITY_ERROR_LIB_KERNEL_PTHREAD_MUTEX_INIT";
    if (errorCode == -2130377215) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NET_INIT";
    if (errorCode == -2130377213) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NET_POOL_CREATE";
    if (errorCode == -2130377212) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NET_POOL_DESTROY";
    if (errorCode == -2130377214) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NET_TERM";
    if (errorCode == -2130376423) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_MANAGER_INT_ABORT_REQUEST";
    if (errorCode == -2130376426) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_MANAGER_INT_CREATE_REQUEST";
    if (errorCode == -2130376425) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_MANAGER_INT_DELETE_REQUEST";
    if (errorCode == -2130376424) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_MANAGER_INT_GET_VSH_TOKEN";
    if (errorCode == -2130376446) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_MANAGER_VSH_GET_ONLINE_ID";
    if (errorCode == -2130376447) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_SET_NP_TITLEID";
    if (errorCode == -2130376430) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_SNS_INT_ABORT_REQUEST";
    if (errorCode == -2130376433) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_SNS_INT_CREATE_REQUEST";
    if (errorCode == -2130376431) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_SNS_INT_DELETE_REQUEST";
    if (errorCode == -2130376422) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_SNS_INT_FB_GET_SYSTEM_ACCESS_TOKEN";
    if (errorCode == -2130376432) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_SNS_INT_POST_OPEN_GRAPH";
    if (errorCode == -2130376429) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_SNS_INT_TW_GET_SYSTEM_ACCESS_TOKEN";
    if (errorCode == -2130376428) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_SNS_LOAD_INTERNAL_NP_MANAGER";
    if (errorCode == -2130376435) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_SNS_LOAD_INTERNAL_NP_SNS";
    if (errorCode == -2130376427) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_SNS_UNLOAD_INTERNAL_NP_MANAGER";
    if (errorCode == -2130376434) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_SNS_UNLOAD_INTERNAL_NP_SNS";
    if (errorCode == -2130376438) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_WEB_API_ABORT_REQUEST";
    if (errorCode == -2130376441) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_WEB_API_CREATE_CONTEXT";
    if (errorCode == -2130376443) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_WEB_API_CREATE_REQUEST";
    if (errorCode == -2130376440) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_WEB_API_DELETE_CONTEXT";
    if (errorCode == -2130376442) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_WEB_API_DELETE_REQUEST";
    if (errorCode == -2130376437) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_WEB_API_GET_HTTP_STATUS_CODE";
    if (errorCode == -2130376436) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_WEB_API_READ_DATA";
    if (errorCode == -2130376439) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_WEB_API_SEND_REQUEST";
    if (errorCode == -2130376444) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_WEB_API_TERMINATE";
    if (errorCode == -2130376445) return "SCE_SHARE_ACTIVITY_ERROR_LIB_NP_WEB_API_VSH_INITIALIZE";
    if (errorCode == -2130376959) return "SCE_SHARE_ACTIVITY_ERROR_LIB_SSL_INIT";
    if (errorCode == -2130376958) return "SCE_SHARE_ACTIVITY_ERROR_LIB_SSL_TERM";
    if (errorCode == -2130378746) return "SCE_SHARE_ACTIVITY_ERROR_NOT_EXIST_DATA";
    if (errorCode == -2130378747) return "SCE_SHARE_ACTIVITY_ERROR_NOT_INITILIZED";
    if (errorCode == -2130378748) return "SCE_SHARE_ACTIVITY_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2130378493) return "SCE_SHARE_ACTIVITY_ERROR_QUEUEING";
    if (errorCode == -2130375422) return "SCE_SHARE_ACTIVITY_ERROR_REG_GET_LANG";
    if (errorCode == -2130375423) return "SCE_SHARE_ACTIVITY_ERROR_REG_GET_NP_ENV";
    if (errorCode == -2130378749) return "SCE_SHARE_ACTIVITY_ERROR_SEQUENCE";
    if (errorCode == -2130375679) return "SCE_SHARE_ACTIVITY_ERROR_SYSTEM_LOGGER_STORAGE_SET_DATA_ASYNC";
    if (errorCode == -2130378495) return "SCE_SHARE_ACTIVITY_ERROR_UNSUPPORTED_CONTENT_TYPE";
    if (errorCode == -2130375935) return "SCE_SHARE_ACTIVITY_ERROR_USER_SERVICE_GET_NP_ACCOUNT_ID";
    if (errorCode == -2130640637) return "SCE_SHARE_BUTTON_ERROR_IMAGING_OPERATION_FAILED";
    if (errorCode == -2130640639) return "SCE_SHARE_BUTTON_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2130640638) return "SCE_SHARE_BUTTON_ERROR_IO_OPERATION_FAILED";
    if (errorCode == -2130640383) return "SCE_SHARE_BUTTON_ERROR_NOT_ENOUGH_SPACE";
    if (errorCode == -2130640380) return "SCE_SHARE_BUTTON_ERROR_NOT_ENOUGH_SPACE_FOR_SCREENSHOT";
    if (errorCode == -2130640382) return "SCE_SHARE_BUTTON_ERROR_NOT_SIGNED_IN";
    if (errorCode == -2130640381) return "SCE_SHARE_BUTTON_ERROR_UNAVAILABLE_SERVICE";
    if (errorCode == -2129198847) return "SCE_SHARE_UTILITY_ERROR_ALREADY_INITILIZED";
    if (errorCode == -2129199092) return "SCE_SHARE_UTILITY_ERROR_BUSY";
    if (errorCode == -2129199099) return "SCE_SHARE_UTILITY_ERROR_CREATE_RESOURCE";
    if (errorCode == -2129199098) return "SCE_SHARE_UTILITY_ERROR_DESTROY_RESOURCE";
    if (errorCode == -2129199095) return "SCE_SHARE_UTILITY_ERROR_END_RESOURCE";
    if (errorCode == -2129199093) return "SCE_SHARE_UTILITY_ERROR_EXECUTE_FUNCTION";
    if (errorCode == -2129198844) return "SCE_SHARE_UTILITY_ERROR_GET_APP_INFORMATION";
    if (errorCode == -2129199097) return "SCE_SHARE_UTILITY_ERROR_INITIALIZE_RESOURCE";
    if (errorCode == -2129199101) return "SCE_SHARE_UTILITY_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2129199100) return "SCE_SHARE_UTILITY_ERROR_LARGE_SIZE";
    if (errorCode == -2129199102) return "SCE_SHARE_UTILITY_ERROR_NOMEM";
    if (errorCode == -2129198843) return "SCE_SHARE_UTILITY_ERROR_NOT_FLAG_IN_PARAM_SFO";
    if (errorCode == -2129198846) return "SCE_SHARE_UTILITY_ERROR_NOT_INITILIZED";
    if (errorCode == -2129198591) return "SCE_SHARE_UTILITY_ERROR_NOT_OPEN";
    if (errorCode == -2129198590) return "SCE_SHARE_UTILITY_ERROR_NOT_OPEN_INVALID_FUNCTION_FLAG";
    if (errorCode == -2129199091) return "SCE_SHARE_UTILITY_ERROR_PARSE_JSON";
    if (errorCode == -2129199094) return "SCE_SHARE_UTILITY_ERROR_RESOURCE";
    if (errorCode == -2129199096) return "SCE_SHARE_UTILITY_ERROR_START_RESOURCE";
    if (errorCode == -2129198845) return "SCE_SHARE_UTILITY_ERROR_TOO_MANY_APPLICATION";
    if (errorCode == -2129199103) return "SCE_SHARE_UTILITY_ERROR_UNKNOWN";
    if (errorCode == -2132606975) return "SCE_SHELL_CORE_UTIL_ERROR_INTERNAL";
    if (errorCode == -2132606971) return "SCE_SHELL_CORE_UTIL_ERROR_INVALID_ARG";
    if (errorCode == -2132606970) return "SCE_SHELL_CORE_UTIL_ERROR_INVALID_URI_LEN";
    if (errorCode == -2132606969) return "SCE_SHELL_CORE_UTIL_ERROR_INVALID_VALUE_LEN";
    if (errorCode == -2132606972) return "SCE_SHELL_CORE_UTIL_ERROR_NO_MEMORY";
    if (errorCode == -2132606973) return "SCE_SHELL_CORE_UTIL_ERROR_NULL_POINTER";
    if (errorCode == -2132606968) return "SCE_SHELL_CORE_UTIL_ERROR_OUTSIDE_POWER_LOCK_SECTION";
    if (errorCode == -2132606974) return "SCE_SHELL_CORE_UTIL_ERROR_UNAVAILABLE";
    if (errorCode == -2135293947) return "SCE_SHELL_UTIL_ERROR_ALREADY_UNLOCKED";
    if (errorCode == -2135293940) return "SCE_SHELL_UTIL_ERROR_APPLICATION_CRASH";
    if (errorCode == -2135293943) return "SCE_SHELL_UTIL_ERROR_DISC_CORRUPTED";
    if (errorCode == -2135293937) return "SCE_SHELL_UTIL_ERROR_DISC_UNRECOGNIZED";
    if (errorCode == -2135293942) return "SCE_SHELL_UTIL_ERROR_DISC_UNSUPPORTED";
    if (errorCode == -2135293941) return "SCE_SHELL_UTIL_ERROR_DISC_UNSUPPORTED_PS3";
    if (errorCode == -2135293934) return "SCE_SHELL_UTIL_ERROR_ERROR_DIALOG_SUPPORT_ACTION_USER_NOT_FOUND";
    if (errorCode == -2135293949) return "SCE_SHELL_UTIL_ERROR_EVENT_MAX";
    if (errorCode == -2135293938) return "SCE_SHELL_UTIL_ERROR_NEED_SYSTEM_UPDATE";
    if (errorCode == -2135293936) return "SCE_SHELL_UTIL_ERROR_NO_APPLICATION";
    if (errorCode == -2135293951) return "SCE_SHELL_UTIL_ERROR_NOT_INITIALIZED";
    if (errorCode == -2135293944) return "SCE_SHELL_UTIL_ERROR_NOT_SIGNED_IN";
    if (errorCode == -2135293946) return "SCE_SHELL_UTIL_ERROR_NOT_SIGNED_UP";
    if (errorCode == -2135293950) return "SCE_SHELL_UTIL_ERROR_NOT_TERMINATED";
    if (errorCode == -2135293948) return "SCE_SHELL_UTIL_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2135293945) return "SCE_SHELL_UTIL_ERROR_SIGNED_OUT";
    if (errorCode == -2135293932) return "SCE_SHELL_UTIL_ERROR_SOMETHING_CRASH";
    if (errorCode == -2135293933) return "SCE_SHELL_UTIL_ERROR_SYSTEM_CRASH";
    if (errorCode == -2135293939) return "SCE_SHELL_UTIL_ERROR_SYSTEM_MESSAGE_HISTORY";
    if (errorCode == -2135293935) return "SCE_SHELL_UTIL_ERROR_UNSUPPORTED_TV_DETECTED_WHILE_RUNNING";
    if (errorCode == -2135490558) return "SCE_SIGNUP_UTILITY_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2135490551) return "SCE_SIGNUP_UTILITY_ERROR_INTERNAL";
    if (errorCode == -2135490557) return "SCE_SIGNUP_UTILITY_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2135490556) return "SCE_SIGNUP_UTILITY_ERROR_NO_MEMORY";
    if (errorCode == -2135490555) return "SCE_SIGNUP_UTILITY_ERROR_NO_SUCH_USER";
    if (errorCode == -2135490559) return "SCE_SIGNUP_UTILITY_ERROR_NOT_INITIALIZED";
    if (errorCode == -2135490553) return "SCE_SIGNUP_UTILITY_ERROR_SIGNUP_BUSY";
    if (errorCode == -2135490554) return "SCE_SIGNUP_UTILITY_ERROR_USER_ALLREADY_SIGNED_IN";
    if (errorCode == -2135490552) return "SCE_SIGNUP_UTILITY_ERROR_USER_CANCELED";
    if (errorCode == -2137657342) return "SCE_SSL_ERROR_ALREADY_INITED";
    if (errorCode == -2137710382) return "SCE_SSL_ERROR_BAD_CERT_LENGTH";
    if (errorCode == -2137710383) return "SCE_SSL_ERROR_BAD_SIGN_ALGO";
    if (errorCode == -2137657343) return "SCE_SSL_ERROR_BEFORE_INIT";
    if (errorCode == -2137657341) return "SCE_SSL_ERROR_BROKEN";
    if (errorCode == -2137657333) return "SCE_SSL_ERROR_CN_CHECK";
    if (errorCode == -2137657329) return "SCE_SSL_ERROR_EAGAIN";
    if (errorCode == -2137657328) return "SCE_SSL_ERROR_FATAL_ALERT";
    if (errorCode == -2137657335) return "SCE_SSL_ERROR_INTERNAL";
    if (errorCode == -2137657334) return "SCE_SSL_ERROR_INVALID_CERT";
    if (errorCode == -2137657339) return "SCE_SSL_ERROR_INVALID_FORMAT";
    if (errorCode == -2137657338) return "SCE_SSL_ERROR_INVALID_ID";
    if (errorCode == -2137657337) return "SCE_SSL_ERROR_INVALID_VALUE";
    if (errorCode == -2137710380) return "SCE_SSL_ERROR_KEY_BLOB_CORRUPT";
    if (errorCode == -2137710381) return "SCE_SSL_ERROR_MISMATCH_PUBLIC_KEYS";
    if (errorCode == -2137657331) return "SCE_SSL_ERROR_NOT_AFTER_CHECK";
    if (errorCode == -2137657330) return "SCE_SSL_ERROR_NOT_BEFORE_CHECK";
    if (errorCode == -2137657340) return "SCE_SSL_ERROR_NOT_FOUND";
    if (errorCode == -2137712683) return "SCE_SSL_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2137657336) return "SCE_SSL_ERROR_OUT_OF_SIZE";
    if (errorCode == -2137657327) return "SCE_SSL_ERROR_PROHIBITED";
    if (errorCode == -2137712880) return "SCE_SSL_ERROR_READ_TIMEOUT";
    if (errorCode == -2137712883) return "SCE_SSL_ERROR_SOCKET_CLOSED";
    if (errorCode == -2137657332) return "SCE_SSL_ERROR_UNKNOWN_CA";
    if (errorCode == -2146303996) return "SCE_SYSFILE_ERROR_BADMAGIC";
    if (errorCode == -2146303993) return "SCE_SYSFILE_ERROR_BADVERSION";
    if (errorCode == -2146303997) return "SCE_SYSFILE_ERROR_INVAL";
    if (errorCode == -2146303998) return "SCE_SYSFILE_ERROR_IO";
    if (errorCode == -2146303994) return "SCE_SYSFILE_ERROR_KEYDUPLICATION";
    if (errorCode == -2146303995) return "SCE_SYSFILE_ERROR_KEYNOTFOUND";
    if (errorCode == -2146303999) return "SCE_SYSFILE_ERROR_NOMEM";
    if (errorCode == -2146303992) return "SCE_SYSFILE_ERROR_OVER_DATABUFSIZE";
    if (errorCode == -2135097341) return "SCE_SYSFILE_UTIL_ERROR_DISKSPACE_NOT_ENOUGH";
    if (errorCode == -2135097340) return "SCE_SYSFILE_UTIL_ERROR_FILE_NOT_FOUND";
    if (errorCode == -2135097336) return "SCE_SYSFILE_UTIL_ERROR_INVALID_FILEPATH";
    if (errorCode == -2135097337) return "SCE_SYSFILE_UTIL_ERROR_INVALID_PARAMETERS";
    if (errorCode == -2135097339) return "SCE_SYSFILE_UTIL_ERROR_KEY_NOT_FOUND";
    if (errorCode == -2135097342) return "SCE_SYSFILE_UTIL_ERROR_MEMORY_NOT_ENOUGH";
    if (errorCode == -2135097338) return "SCE_SYSFILE_UTIL_ERROR_SFO_FILE_BROKEN";
    if (errorCode == -2135097343) return "SCE_SYSFILE_UTIL_ERROR_UNKNOWN";
    if (errorCode == -2130182140) return "SCE_SYSTEM_LOGGER_ERROR_BUSY";
    if (errorCode == -2130182016) return "SCE_SYSTEM_LOGGER_ERROR_CAM_OPEN_ERROR";
    if (errorCode == -2130182014) return "SCE_SYSTEM_LOGGER_ERROR_CAM_READ_BUFFER_ERROR";
    if (errorCode == -2130182015) return "SCE_SYSTEM_LOGGER_ERROR_CAM_READ_BUFFER_SIZE_ERROR";
    if (errorCode == -2130182143) return "SCE_SYSTEM_LOGGER_ERROR_GENERIC";
    if (errorCode == -2130182142) return "SCE_SYSTEM_LOGGER_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2130182139) return "SCE_SYSTEM_LOGGER_ERROR_LOG_PARAMETER_OUT_OF_RANGE";
    if (errorCode == -2130182141) return "SCE_SYSTEM_LOGGER_ERROR_NO_MEMORY";
    if (errorCode == -2130182138) return "SCE_SYSTEM_LOGGER_ERROR_NOT_FOUND";
    if (errorCode == -2133000191) return "SCE_SYSTEM_LOGGER_STORAGE_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2133000190) return "SCE_SYSTEM_LOGGER_STORAGE_ERROR_NO_MEMORY";
    if (errorCode == -2129461247) return "SCE_SYSTEM_STATE_MGR_ERROR_INTERNAL";
    if (errorCode == -2129461245) return "SCE_SYSTEM_STATE_MGR_ERROR_INVALID_VALUE";
    if (errorCode == -2129461246) return "SCE_SYSTEM_STATE_MGR_ERROR_NOT_PERMITTED";
    if (errorCode == -2130771963) return "SCE_TROPHY_ERROR_ABORTED";
    if (errorCode == -2130771964) return "SCE_TROPHY_ERROR_CANNOT_ENQUEUE";
    if (errorCode == -2130771957) return "SCE_TROPHY_ERROR_DISK_FULL";
    if (errorCode == -2130771959) return "SCE_TROPHY_ERROR_GET_VALUE_IN_JSON";
    if (errorCode == -2130771958) return "SCE_TROPHY_ERROR_INVALID_JSON_FORMAT";
    if (errorCode == -2130771965) return "SCE_TROPHY_ERROR_JOB_QUEUE_INVALID_STATE";
    if (errorCode == -2130771960) return "SCE_TROPHY_ERROR_KEY_NOT_FOUND_IN_JSON";
    if (errorCode == -2130771966) return "SCE_TROPHY_ERROR_NO_IMPL";
    if (errorCode == -2130771962) return "SCE_TROPHY_ERROR_NOT_INITIALIZED_NS_CONTEXT";
    if (errorCode == -2130771967) return "SCE_TROPHY_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2130771956) return "SCE_TROPHY_ERROR_SQLITE_ERROR";
    if (errorCode == -2130771968) return "SCE_TROPHY_ERROR_UNKNOWN";
    if (errorCode == -2130771961) return "SCE_TROPHY_ERROR_UNKNOWN_SERVER_RESPONSE";
    if (errorCode == -2141874939) return "SCE_TROPHY_STORAGE_ERROR_ABORT";
    if (errorCode == -2141874915) return "SCE_TROPHY_STORAGE_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2141874930) return "SCE_TROPHY_STORAGE_ERROR_BUSY";
    if (errorCode == -2141874932) return "SCE_TROPHY_STORAGE_ERROR_DB_ALREADY_OPENED";
    if (errorCode == -2141874935) return "SCE_TROPHY_STORAGE_ERROR_DB_CORRUPTED";
    if (errorCode == -2141874923) return "SCE_TROPHY_STORAGE_ERROR_DB_NOT_OPENED";
    if (errorCode == -2141874921) return "SCE_TROPHY_STORAGE_ERROR_FILE_ALREADY_OPENED";
    if (errorCode == -2141874922) return "SCE_TROPHY_STORAGE_ERROR_FILE_NOT_FOUND";
    if (errorCode == -2141874919) return "SCE_TROPHY_STORAGE_ERROR_FILE_NOT_OPENED";
    if (errorCode == -2141874941) return "SCE_TROPHY_STORAGE_ERROR_INSUFFICIENT_BUFFER";
    if (errorCode == -2141874943) return "SCE_TROPHY_STORAGE_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2141874937) return "SCE_TROPHY_STORAGE_ERROR_INVALID_DATA_TYPE";
    if (errorCode == -2141874934) return "SCE_TROPHY_STORAGE_ERROR_INVALID_DB_SCHEMA";
    if (errorCode == -2141874940) return "SCE_TROPHY_STORAGE_ERROR_INVALID_HANDLE";
    if (errorCode == -2141874931) return "SCE_TROPHY_STORAGE_ERROR_INVALID_LSDB_CONTEXT";
    if (errorCode == -2141874925) return "SCE_TROPHY_STORAGE_ERROR_LSDB_CORRUPTED";
    if (errorCode == -2141874927) return "SCE_TROPHY_STORAGE_ERROR_LSDB_GROUP_NOT_FOUND";
    if (errorCode == -2141874929) return "SCE_TROPHY_STORAGE_ERROR_LSDB_MIGRATION_REQUIRED";
    if (errorCode == -2141874924) return "SCE_TROPHY_STORAGE_ERROR_LSDB_TITLE_BROKEN";
    if (errorCode == -2141874928) return "SCE_TROPHY_STORAGE_ERROR_LSDB_TITLE_NOT_FOUND";
    if (errorCode == -2141874926) return "SCE_TROPHY_STORAGE_ERROR_LSDB_TROPHY_NOT_FOUND";
    if (errorCode == -2141874920) return "SCE_TROPHY_STORAGE_ERROR_MEMORY_EXTEND";
    if (errorCode == -2141874936) return "SCE_TROPHY_STORAGE_ERROR_NO_DB_ATTRIBUTE";
    if (errorCode == -2141874938) return "SCE_TROPHY_STORAGE_ERROR_NO_RESULT";
    if (errorCode == -2141874914) return "SCE_TROPHY_STORAGE_ERROR_NOT_INITIALIZED";
    if (errorCode == -2141874917) return "SCE_TROPHY_STORAGE_ERROR_OBJECT_ALREADY_INITIALIZED";
    if (errorCode == -2141874916) return "SCE_TROPHY_STORAGE_ERROR_OBJECT_NOT_INITIALIZED";
    if (errorCode == -2141874942) return "SCE_TROPHY_STORAGE_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2141874918) return "SCE_TROPHY_STORAGE_ERROR_TITLE_DATA_BROKEN";
    if (errorCode == -2141874944) return "SCE_TROPHY_STORAGE_ERROR_UNKNOWN";
    if (errorCode == -2141874933) return "SCE_TROPHY_STORAGE_ERROR_UNSUPPORTED_DB_SCHEMA";
    if (errorCode == -2145899773) return "SCE_UPDATE_APP_FRAMEWORK_ERROR_ENOMEM";
    if (errorCode == -2145899775) return "SCE_UPDATE_APP_FRAMEWORK_ERROR_PAD_INIT";
    if (errorCode == -2145899774) return "SCE_UPDATE_APP_FRAMEWORK_ERROR_TILE_MODE";
    if (errorCode == -2145902063) return "SCE_UPDATE_CHECKER_ERROR_BAD_STATE";
    if (errorCode == -2145902008) return "SCE_UPDATE_CHECKER_ERROR_CACHE_EXPIRED";
    if (errorCode == -2145902006) return "SCE_UPDATE_CHECKER_ERROR_CANCELED";
    if (errorCode == -2145902011) return "SCE_UPDATE_CHECKER_ERROR_CDN_INVAL_PSCODE";
    if (errorCode == -2145901982) return "SCE_UPDATE_CHECKER_ERROR_CONTENTLEN_CHUNK_ENC";
    if (errorCode == -2145901981) return "SCE_UPDATE_CHECKER_ERROR_CONTENTLEN_NOT_FOUND";
    if (errorCode == -2145902064) return "SCE_UPDATE_CHECKER_ERROR_CRITICAL";
    if (errorCode == -2145901984) return "SCE_UPDATE_CHECKER_ERROR_DL_HTTP_STATUS_CODE";
    if (errorCode == -2145901983) return "SCE_UPDATE_CHECKER_ERROR_DL_INVAL_STATUS";
    if (errorCode == -2145902015) return "SCE_UPDATE_CHECKER_ERROR_ERRNO_ENOMEM";
    if (errorCode == -2145902010) return "SCE_UPDATE_CHECKER_ERROR_FATAL";
    if (errorCode == -2145902014) return "SCE_UPDATE_CHECKER_ERROR_INVAL_ARG";
    if (errorCode == -2145902069) return "SCE_UPDATE_CHECKER_ERROR_INVAL_IMAGE_ATT";
    if (errorCode == -2145902070) return "SCE_UPDATE_CHECKER_ERROR_INVAL_PREINST_PUP_ATT";
    if (errorCode == -2145902075) return "SCE_UPDATE_CHECKER_ERROR_INVAL_PRODUCT_REQ_ATT";
    if (errorCode == -2145902071) return "SCE_UPDATE_CHECKER_ERROR_INVAL_RECOVERY_PUP_ATT";
    if (errorCode == -2145902078) return "SCE_UPDATE_CHECKER_ERROR_INVAL_REGION_ATT";
    if (errorCode == -2145902077) return "SCE_UPDATE_CHECKER_ERROR_INVAL_SYSTEM_ATT";
    if (errorCode == -2145902076) return "SCE_UPDATE_CHECKER_ERROR_INVAL_SYSTEM_EX_ATT";
    if (errorCode == -2145902072) return "SCE_UPDATE_CHECKER_ERROR_INVAL_SYSTEM_EX_PUP_ATT";
    if (errorCode == -2145902073) return "SCE_UPDATE_CHECKER_ERROR_INVAL_SYSTEM_PUP_ATT";
    if (errorCode == -2145902080) return "SCE_UPDATE_CHECKER_ERROR_INVAL_TYPE";
    if (errorCode == -2145902074) return "SCE_UPDATE_CHECKER_ERROR_INVAL_UPDATE_DATA_ATT";
    if (errorCode == -2145902079) return "SCE_UPDATE_CHECKER_ERROR_INVAL_URL_SIZE";
    if (errorCode == -2145902009) return "SCE_UPDATE_CHECKER_ERROR_NO_CACHE";
    if (errorCode == -2145902012) return "SCE_UPDATE_CHECKER_ERROR_NO_SIGNUP_USER";
    if (errorCode == -2145902061) return "SCE_UPDATE_CHECKER_ERROR_NOT_FOUND_DATA";
    if (errorCode == -2145902067) return "SCE_UPDATE_CHECKER_ERROR_NOTFOUND_REGION";
    if (errorCode == -2145902066) return "SCE_UPDATE_CHECKER_ERROR_NOTFOUND_REGION_CHILD";
    if (errorCode == -2145902068) return "SCE_UPDATE_CHECKER_ERROR_NOTFOUND_ROOT";
    if (errorCode == -2145902060) return "SCE_UPDATE_CHECKER_ERROR_NOTFOUND_ROOT_NO_REDIRECT";
    if (errorCode == -2145902065) return "SCE_UPDATE_CHECKER_ERROR_NOTFOUND_UPDATE_DATA";
    if (errorCode == -2145902016) return "SCE_UPDATE_CHECKER_ERROR_PARSER_INITIALIZE";
    if (errorCode == -2145902007) return "SCE_UPDATE_CHECKER_ERROR_QUEUE_FULL";
    if (errorCode == -2145901980) return "SCE_UPDATE_CHECKER_ERROR_SERVER_MAINTENANCE";
    if (errorCode == -2145902062) return "SCE_UPDATE_CHECKER_ERROR_SYS_CTL_BY_NAME";
    if (errorCode == -2145901979) return "SCE_UPDATE_CHECKER_ERROR_UNKNOWN_TITLE_ID";
    if (errorCode == -2145902013) return "SCE_UPDATE_CHECKER_ERROR_URL";
    if (errorCode == -2145899504) return "SCE_UPDATE_EULA_ERROR_BAD_STATE";
    if (errorCode == -2145899500) return "SCE_UPDATE_EULA_ERROR_CRITICAL";
    if (errorCode == -2145899518) return "SCE_UPDATE_EULA_ERROR_ERRNO_ENOMEM";
    if (errorCode == -2145899502) return "SCE_UPDATE_EULA_ERROR_INVAL_EULA_VERSION_ATT";
    if (errorCode == -2145899499) return "SCE_UPDATE_EULA_ERROR_INVAL_EULA_VERSION_VALUE";
    if (errorCode == -2145899501) return "SCE_UPDATE_EULA_ERROR_INVAL_LANG_ATT";
    if (errorCode == -2145899503) return "SCE_UPDATE_EULA_ERROR_NOTFOUND_ROOT";
    if (errorCode == -2145899519) return "SCE_UPDATE_EULA_ERROR_PARSER_INITIALIZE";
    if (errorCode == -2145910778) return "SCE_UPDATER_CORE_ERROR_BAD_STATE";
    if (errorCode == -2145908320) return "SCE_UPDATER_CORE_ERROR_BD_FW_GENERAL";
    if (errorCode == -2145908315) return "SCE_UPDATER_CORE_ERROR_BD_FW_INVALID";
    if (errorCode == -2145908319) return "SCE_UPDATER_CORE_ERROR_BD_FW_NOMEM";
    if (errorCode == -2145908318) return "SCE_UPDATER_CORE_ERROR_BD_FW_OPEN";
    if (errorCode == -2145908313) return "SCE_UPDATER_CORE_ERROR_BD_FW_REQ_INCOMPLETE";
    if (errorCode == -2145908317) return "SCE_UPDATER_CORE_ERROR_BD_FW_SEND";
    if (errorCode == -2145908287) return "SCE_UPDATER_CORE_ERROR_BD_FW_SK_INVALID_COMMAND";
    if (errorCode == -2145908286) return "SCE_UPDATER_CORE_ERROR_BD_FW_SK_INVALID_PARAM";
    if (errorCode == -2145908285) return "SCE_UPDATER_CORE_ERROR_BD_FW_SK_INVALID_VERSION";
    if (errorCode == -2145908283) return "SCE_UPDATER_CORE_ERROR_BD_FW_SK_NOT_READY";
    if (errorCode == -2145908288) return "SCE_UPDATER_CORE_ERROR_BD_FW_SK_SEQ_ERROR";
    if (errorCode == -2145908284) return "SCE_UPDATER_CORE_ERROR_BD_FW_SK_UNIT_FAILURE";
    if (errorCode == -2145908314) return "SCE_UPDATER_CORE_ERROR_BD_FW_TIMEOUT";
    if (errorCode == -2145908316) return "SCE_UPDATER_CORE_ERROR_BD_FW_WRONG_FORMAT";
    if (errorCode == -2145910767) return "SCE_UPDATER_CORE_ERROR_BDEV_IO";
    if (errorCode == -2145910769) return "SCE_UPDATER_CORE_ERROR_BDEV_OPEN";
    if (errorCode == -2145910771) return "SCE_UPDATER_CORE_ERROR_CANCELLED";
    if (errorCode == -2145906689) return "SCE_UPDATER_CORE_ERROR_FATAL";
    if (errorCode == -2145910768) return "SCE_UPDATER_CORE_ERROR_FILE_OPEN";
    if (errorCode == -2145910784) return "SCE_UPDATER_CORE_ERROR_GENERAL";
    if (errorCode == -2145910776) return "SCE_UPDATER_CORE_ERROR_HDD_PART";
    if (errorCode == -2145910783) return "SCE_UPDATER_CORE_ERROR_INVAL";
    if (errorCode == -2145910766) return "SCE_UPDATER_CORE_ERROR_INVAL_IO";
    if (errorCode == -2145910779) return "SCE_UPDATER_CORE_ERROR_IO";
    if (errorCode == -2145910777) return "SCE_UPDATER_CORE_ERROR_NOENT";
    if (errorCode == -2145910782) return "SCE_UPDATER_CORE_ERROR_NOMEM";
    if (errorCode == -2145910780) return "SCE_UPDATER_CORE_ERROR_NOT_FOUND";
    if (errorCode == -2145908639) return "SCE_UPDATER_CORE_ERROR_PUP_US_ALREADY";
    if (errorCode == -2145908647) return "SCE_UPDATER_CORE_ERROR_PUP_US_AUTH";
    if (errorCode == -2145908650) return "SCE_UPDATER_CORE_ERROR_PUP_US_BADF";
    if (errorCode == -2145908646) return "SCE_UPDATER_CORE_ERROR_PUP_US_BADMSG";
    if (errorCode == -2145908654) return "SCE_UPDATER_CORE_ERROR_PUP_US_BUSY";
    if (errorCode == -2145908649) return "SCE_UPDATER_CORE_ERROR_PUP_US_FAULT";
    if (errorCode == -2145908648) return "SCE_UPDATER_CORE_ERROR_PUP_US_FTYPE";
    if (errorCode == -2145908656) return "SCE_UPDATER_CORE_ERROR_PUP_US_GENERAL";
    if (errorCode == -2145908653) return "SCE_UPDATER_CORE_ERROR_PUP_US_INVAL";
    if (errorCode == -2145908651) return "SCE_UPDATER_CORE_ERROR_PUP_US_IO";
    if (errorCode == -2145908641) return "SCE_UPDATER_CORE_ERROR_PUP_US_NEEDAUTH";
    if (errorCode == -2145908644) return "SCE_UPDATER_CORE_ERROR_PUP_US_NOATTR";
    if (errorCode == -2145908640) return "SCE_UPDATER_CORE_ERROR_PUP_US_NOENT";
    if (errorCode == -2145908652) return "SCE_UPDATER_CORE_ERROR_PUP_US_NOMEM";
    if (errorCode == -2145908655) return "SCE_UPDATER_CORE_ERROR_PUP_US_PERM";
    if (errorCode == -2145908642) return "SCE_UPDATER_CORE_ERROR_PUP_US_PLATFORM";
    if (errorCode == -2145908645) return "SCE_UPDATER_CORE_ERROR_PUP_US_REVOKED";
    if (errorCode == -2145908643) return "SCE_UPDATER_CORE_ERROR_PUP_US_VER";
    if (errorCode == -2145908224) return "SCE_UPDATER_CORE_ERROR_SATABR_FW_GENERAL";
    if (errorCode == -2145908223) return "SCE_UPDATER_CORE_ERROR_SATABR_FW_NOMEM";
    if (errorCode == -2145908222) return "SCE_UPDATER_CORE_ERROR_SATABR_FW_OPEN";
    if (errorCode == -2145908218) return "SCE_UPDATER_CORE_ERROR_SATABR_FW_REQ_INCOMPLETE";
    if (errorCode == -2145908221) return "SCE_UPDATER_CORE_ERROR_SATABR_FW_SEND";
    if (errorCode == -2145908219) return "SCE_UPDATER_CORE_ERROR_SATABR_FW_TIMEOUT";
    if (errorCode == -2145908217) return "SCE_UPDATER_CORE_ERROR_SATABR_FW_VERIFY";
    if (errorCode == -2145908220) return "SCE_UPDATER_CORE_ERROR_SATABR_FW_WRONG_FORMAT";
    if (errorCode == -2145908394) return "SCE_UPDATER_CORE_ERROR_SC_FW_BADF";
    if (errorCode == -2145908398) return "SCE_UPDATER_CORE_ERROR_SC_FW_BUSY";
    if (errorCode == -2145908393) return "SCE_UPDATER_CORE_ERROR_SC_FW_FAULT";
    if (errorCode == -2145908400) return "SCE_UPDATER_CORE_ERROR_SC_FW_GENERAL";
    if (errorCode == -2145908397) return "SCE_UPDATER_CORE_ERROR_SC_FW_INVAL";
    if (errorCode == -2145908395) return "SCE_UPDATER_CORE_ERROR_SC_FW_IO";
    if (errorCode == -2145908396) return "SCE_UPDATER_CORE_ERROR_SC_FW_NOMEM";
    if (errorCode == -2145908392) return "SCE_UPDATER_CORE_ERROR_SC_FW_NXIO";
    if (errorCode == -2145908399) return "SCE_UPDATER_CORE_ERROR_SC_FW_PERM";
    if (errorCode == -2145908391) return "SCE_UPDATER_CORE_ERROR_SC_FW_TIMEOUT";
    if (errorCode == -2145910772) return "SCE_UPDATER_CORE_ERROR_SHORT_FILE";
    if (errorCode == -2145910770) return "SCE_UPDATER_CORE_ERROR_SYSTEM_BETA_VERSION";
    if (errorCode == -2145910774) return "SCE_UPDATER_CORE_ERROR_SYSTEM_VERSION";
    if (errorCode == -2145908476) return "SCE_UPDATER_CORE_ERROR_UNCOMPRESS_BUF";
    if (errorCode == -2145908478) return "SCE_UPDATER_CORE_ERROR_UNCOMPRESS_DATA";
    if (errorCode == -2145908480) return "SCE_UPDATER_CORE_ERROR_UNCOMPRESS_GENERAL";
    if (errorCode == -2145908477) return "SCE_UPDATER_CORE_ERROR_UNCOMPRESS_NOMEM";
    if (errorCode == -2145908479) return "SCE_UPDATER_CORE_ERROR_UNCOMPRESS_STREAM";
    if (errorCode == -2145910773) return "SCE_UPDATER_CORE_ERROR_VERIFY_ONLY";
    if (errorCode == -2145910775) return "SCE_UPDATER_CORE_ERROR_VERIFY_WRITE";
    if (errorCode == -2145910781) return "SCE_UPDATER_CORE_ERROR_WRONG_FORMAT";
    if (errorCode == -2145901567) return "SCE_UPSRV_CLIENT_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2145901563) return "SCE_UPSRV_CLIENT_ERROR_BUSY";
    if (errorCode == -2145901568) return "SCE_UPSRV_CLIENT_ERROR_INTERNAL";
    if (errorCode == -2145901564) return "SCE_UPSRV_CLIENT_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2145901566) return "SCE_UPSRV_CLIENT_ERROR_NOT_INITIALIZED";
    if (errorCode == -2145901565) return "SCE_UPSRV_CLIENT_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2145901055) return "SCE_UPSRV_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2145901027) return "SCE_UPSRV_ERROR_APPDB_NOT_READY";
    if (errorCode == -2145901032) return "SCE_UPSRV_ERROR_BETA_NO_ENTITLEMENT";
    if (errorCode == -2145901033) return "SCE_UPSRV_ERROR_BETA_UNAVAILABLE";
    if (errorCode == -2145901036) return "SCE_UPSRV_ERROR_CANCELED";
    if (errorCode == -2145901038) return "SCE_UPSRV_ERROR_CURRENT_TASK_NOT_FOUND";
    if (errorCode == -2145901028) return "SCE_UPSRV_ERROR_HANDLER_IS_BUSY";
    if (errorCode == -2145901056) return "SCE_UPSRV_ERROR_INTERNAL";
    if (errorCode == -2145901054) return "SCE_UPSRV_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2145901029) return "SCE_UPSRV_ERROR_INVALID_HANDLER";
    if (errorCode == -2145901051) return "SCE_UPSRV_ERROR_LASTEST_VER_SYSTEM";
    if (errorCode == -2145901049) return "SCE_UPSRV_ERROR_NOT_ACCESS_SYSTEM_STORAGE";
    if (errorCode == -2145901035) return "SCE_UPSRV_ERROR_NOT_SUPPORTED";
    if (errorCode == -2145901053) return "SCE_UPSRV_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2145901046) return "SCE_UPSRV_ERROR_REBOOT_ERROR";
    if (errorCode == -2145901047) return "SCE_UPSRV_ERROR_REGISTRY_ERROR";
    if (errorCode == -2145901050) return "SCE_UPSRV_ERROR_UPDATE_FILE_CORRUPTED";
    if (errorCode == -2145901031) return "SCE_UPSRV_ERROR_UPDATE_FILE_IS_NOT_OFFICIAL";
    if (errorCode == -2145901030) return "SCE_UPSRV_ERROR_UPDATE_FILE_IS_UNEXPECTED_VERSION";
    if (errorCode == -2145901052) return "SCE_UPSRV_ERROR_UPDATE_FILE_NOT_FOUND";
    if (errorCode == -2145901048) return "SCE_UPSRV_ERROR_UPDATE_FILE_NOT_USE";
    if (errorCode == -2145901037) return "SCE_UPSRV_ERROR_USB_STORAGE_NOT_MOUNTED";
    if (errorCode == -2145901045) return "SCE_UPSRV_ERROR_WAIT_DOWNLOAD_PHASE_TIMEOUT";
    if (errorCode == -2145901040) return "SCE_UPSRV_ERROR_WAIT_GET_EULA_TEXT_TIMEOUT";
    if (errorCode == -2145901044) return "SCE_UPSRV_ERROR_WAIT_IMAGE_WRITE_PHASE_TIMEOUT";
    if (errorCode == -2145901039) return "SCE_UPSRV_ERROR_WAIT_LOAD_FEATURES_LIST_TIMEOUT";
    if (errorCode == -2145901034) return "SCE_UPSRV_ERROR_WAIT_PHASE_CHANGE_TIMEOUT";
    if (errorCode == -2145901043) return "SCE_UPSRV_ERROR_WAIT_REBOOT_PHASE_TIMEOUT";
    if (errorCode == -2145901042) return "SCE_UPSRV_ERROR_WAIT_WAITING_FOR_EULA_PHASE_TIMEOUT";
    if (errorCode == -2145901041) return "SCE_UPSRV_ERROR_WAIT_WAITING_FOR_UPDATE_PHASE_TIMEOUT";
    if (errorCode == -2145901311) return "SCE_UPSRV_SERVER_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2145901303) return "SCE_UPSRV_SERVER_ERROR_FATAL";
    if (errorCode == -2145901312) return "SCE_UPSRV_SERVER_ERROR_INTERNAL";
    if (errorCode == -2145901308) return "SCE_UPSRV_SERVER_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2145901307) return "SCE_UPSRV_SERVER_ERROR_INVALID_OPERATION";
    if (errorCode == -2145901310) return "SCE_UPSRV_SERVER_ERROR_NOT_INITIALIZED";
    if (errorCode == -2145901309) return "SCE_UPSRV_SERVER_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2145901305) return "SCE_UPSRV_SERVER_ERROR_TASK_CANCELED";
    if (errorCode == -2145901306) return "SCE_UPSRV_SERVER_ERROR_TASK_ID_NOT_FOUND";
    if (errorCode == -2145901304) return "SCE_UPSRV_SERVER_ERROR_TASK_SHUTDOWN";
    if (errorCode == -2137653245) return "SCE_USER_SERVICE_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2137653238) return "SCE_USER_SERVICE_ERROR_BUFFER_TOO_SHORT";
    if (errorCode == -2137652986) return "SCE_USER_SERVICE_ERROR_BUSY";
    if (errorCode == -2137652988) return "SCE_USER_SERVICE_ERROR_EVENT_REDUCED";
    if (errorCode == -2137653247) return "SCE_USER_SERVICE_ERROR_INTERNAL";
    if (errorCode == -2137653243) return "SCE_USER_SERVICE_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2137653241) return "SCE_USER_SERVICE_ERROR_NO_EVENT";
    if (errorCode == -2137653244) return "SCE_USER_SERVICE_ERROR_NO_MEMORY";
    if (errorCode == -2137652987) return "SCE_USER_SERVICE_ERROR_NO_SUCH_USER";
    if (errorCode == -2137653246) return "SCE_USER_SERVICE_ERROR_NOT_INITIALIZED";
    if (errorCode == -2137653239) return "SCE_USER_SERVICE_ERROR_NOT_LOGGED_IN";
    if (errorCode == -2137653242) return "SCE_USER_SERVICE_ERROR_OPERATION_NOT_SUPPORTED";
    if (errorCode == -2137652990) return "SCE_USER_SERVICE_ERROR_REGISTERED_USER_FULL";
    if (errorCode == -2137652991) return "SCE_USER_SERVICE_ERROR_TOO_MANY_LOGIN_USERS";
    if (errorCode == -2137652989) return "SCE_USER_SERVICE_ERROR_USER_ALREADY_REGISTERED";
    if (errorCode == -2130444032) return "SCE_VIDEO_EDIT_ERROR_GENERAL";
    if (errorCode == -2130444027) return "SCE_VIDEO_EDIT_ERROR_IMAGE_MANAGER";
    if (errorCode == -2130444031) return "SCE_VIDEO_EDIT_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2130444030) return "SCE_VIDEO_EDIT_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2130444029) return "SCE_VIDEO_EDIT_ERROR_PREVIEW";
    if (errorCode == -2130444028) return "SCE_VIDEO_EDIT_ERROR_PREVIEW_NOT_ENOUGH_SYSTEM_MEMORY";
    if (errorCode == -2130444026) return "SCE_VIDEO_EDIT_ERROR_TRANSCODE";
    if (errorCode == -2136473598) return "SCE_VIDEO_RECORDING_ERROR_FATAL";
    if (errorCode == -2136473590) return "SCE_VIDEO_RECORDING_ERROR_FILE_NO_DATA";
    if (errorCode == -2136473596) return "SCE_VIDEO_RECORDING_ERROR_FILE_OPEN";
    if (errorCode == -2136473595) return "SCE_VIDEO_RECORDING_ERROR_FILE_WRITE";
    if (errorCode == -2136473593) return "SCE_VIDEO_RECORDING_ERROR_INTERRUPTED";
    if (errorCode == -2136473594) return "SCE_VIDEO_RECORDING_ERROR_INVALID_STATE";
    if (errorCode == -2136473597) return "SCE_VIDEO_RECORDING_ERROR_INVALID_VALUE";
    if (errorCode == -2136473591) return "SCE_VIDEO_RECORDING_ERROR_NO_SPACE";
    if (errorCode == -2136473599) return "SCE_VIDEO_RECORDING_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2136473592) return "SCE_VIDEO_RECORDING_ERROR_UNSUPPORTED";
    if (errorCode == -2130247678) return "SCE_VISION_RECOGNITION_ERROR_FILE_OPEN_FAILED";
    if (errorCode == -2130247674) return "SCE_VISION_RECOGNITION_ERROR_FILE_READ_FAILED";
    if (errorCode == -2130247676) return "SCE_VISION_RECOGNITION_ERROR_FILE_SIZE_LARGE";
    if (errorCode == -2130247675) return "SCE_VISION_RECOGNITION_ERROR_FILE_SIZE_SMALL";
    if (errorCode == -2130247677) return "SCE_VISION_RECOGNITION_ERROR_FILE_SIZE_ZERO";
    if (errorCode == -2130214911) return "SCE_VISION_RECOGNITION_ERROR_INITIALIZE_FAILURE";
    if (errorCode == -2130214910) return "SCE_VISION_RECOGNITION_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2130247679) return "SCE_VISION_RECOGNITION_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2130313214) return "SCE_VOICE_RECOGNITION_ERROR_DATABASE_CORRUPTED";
    if (errorCode == -2130313215) return "SCE_VOICE_RECOGNITION_ERROR_VRC_NOT_FOUND";
    if (errorCode == -2136539134) return "SCE_VSH_AVCAP_ERROR_EAGAIN";
    if (errorCode == -2136539128) return "SCE_VSH_AVCAP_ERROR_EBUSY";
    if (errorCode == -2136539130) return "SCE_VSH_AVCAP_ERROR_EEMPTY";
    if (errorCode == -2136539127) return "SCE_VSH_AVCAP_ERROR_EINTR";
    if (errorCode == -2136539135) return "SCE_VSH_AVCAP_ERROR_EINVAL";
    if (errorCode == -2136539129) return "SCE_VSH_AVCAP_ERROR_ENFILE";
    if (errorCode == -2136539133) return "SCE_VSH_AVCAP_ERROR_ENOMEM";
    if (errorCode == -2136539131) return "SCE_VSH_AVCAP_ERROR_ENOSPC";
    if (errorCode == -2136539126) return "SCE_VSH_AVCAP_ERROR_ENOTSUP";
    if (errorCode == -2136539132) return "SCE_VSH_AVCAP_ERROR_ERESET";
    if (errorCode == -2130972671) return "SCE_VU_ERROR_EXTERNAL_HDCP_DISABLED";
    if (errorCode == -2131033855) return "SCE_VU_ERROR_INVALID_PARAM";
    if (errorCode == -2132668415) return "SCE_WEB_BROWSER_DIALOG_ERROR_NAVIGATION";
    if (errorCode == -2132737787) return "SCE_WEBBROWSER_ERROR_ALREADY_CREATED";
    if (errorCode == -2132737786) return "SCE_WEBBROWSER_ERROR_ALREADY_DELETED";
    if (errorCode == -2132737781) return "SCE_WEBBROWSER_ERROR_CANNOT_ADD_BOOKMARK";
    if (errorCode == -2132737780) return "SCE_WEBBROWSER_ERROR_CANNOT_ADD_FOLDER";
    if (errorCode == -2132737529) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_CANCELED";
    if (errorCode == -2132737528) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_FATAL";
    if (errorCode == -2132737530) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_INI_FILE";
    if (errorCode == -2132737535) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_INVALID_ARG";
    if (errorCode == -2132737533) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_INVALID_OP";
    if (errorCode == -2132737534) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_NO_MEMORY";
    if (errorCode == -2132737531) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_NO_ROWID";
    if (errorCode == -2132737532) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_NOT_FOUND";
    if (errorCode == -2132737527) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_NOT_SUPPORTED";
    if (errorCode == -2132737276) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_ABORT";
    if (errorCode == -2132737257) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_AUTH";
    if (errorCode == -2132737275) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_BUSY";
    if (errorCode == -2132737266) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_CANTOPEN";
    if (errorCode == -2132737261) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_CONSTRAINT";
    if (errorCode == -2132737269) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_CORRUPT";
    if (errorCode == -2132737264) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_EMPTY";
    if (errorCode == -2132737279) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_ERROR";
    if (errorCode == -2132737256) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_FORMAT";
    if (errorCode == -2132737267) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_FULL";
    if (errorCode == -2132737278) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_INTERNAL";
    if (errorCode == -2132737271) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_INTERRUPT";
    if (errorCode == -2132737270) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_IOERR";
    if (errorCode == -2132737011) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_IOERR_ACCESS";
    if (errorCode == -2132737013) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_IOERR_BLOCKED";
    if (errorCode == -2132737010) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_IOERR_CHECKRESERVEDLOCK";
    if (errorCode == -2132737008) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_IOERR_CLOSE";
    if (errorCode == -2132737014) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_IOERR_DELETE";
    if (errorCode == -2132737007) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_IOERR_DIR_CLOSE";
    if (errorCode == -2132737019) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_IOERR_DIR_FSYNC";
    if (errorCode == -2132737017) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_IOERR_FSTAT";
    if (errorCode == -2132737020) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_IOERR_FSYNC";
    if (errorCode == -2132737009) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_IOERR_LOCK";
    if (errorCode == -2132737012) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_IOERR_NOMEM";
    if (errorCode == -2132737015) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_IOERR_RDLOCK";
    if (errorCode == -2132737023) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_IOERR_READ";
    if (errorCode == -2132737022) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_IOERR_SHORT_READ";
    if (errorCode == -2132737018) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_IOERR_TRUNCATE";
    if (errorCode == -2132737016) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_IOERR_UNLOCK";
    if (errorCode == -2132737021) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_IOERR_WRITE";
    if (errorCode == -2132737274) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_LOCKED";
    if (errorCode == -2132737006) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_LOCKED_SHAREDCACHE";
    if (errorCode == -2132737260) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_MISMATCH";
    if (errorCode == -2132737259) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_MISUSE";
    if (errorCode == -2132737258) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_NOLFS";
    if (errorCode == -2132737273) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_NOMEM";
    if (errorCode == -2132737254) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_NOTADB";
    if (errorCode == -2132737268) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_NOTFOUND";
    if (errorCode == -2132737277) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_PERM";
    if (errorCode == -2132737265) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_PROTOCOL";
    if (errorCode == -2132737255) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_RANGE";
    if (errorCode == -2132737272) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_READONLY";
    if (errorCode == -2132737263) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_SCHEMA";
    if (errorCode == -2132737262) return "SCE_WEBBROWSER_ERROR_DBUTIL_ERR_SQLITE_TOOBIG";
    if (errorCode == -2132737779) return "SCE_WEBBROWSER_ERROR_FATAL";
    if (errorCode == -2132737791) return "SCE_WEBBROWSER_ERROR_INVALID_ARG";
    if (errorCode == -2132737790) return "SCE_WEBBROWSER_ERROR_INVALID_PTR";
    if (errorCode == -2132737785) return "SCE_WEBBROWSER_ERROR_JOB_CANCELED";
    if (errorCode == -2132737782) return "SCE_WEBBROWSER_ERROR_NO_INSTANCE";
    if (errorCode == -2132737789) return "SCE_WEBBROWSER_ERROR_NO_MEMORY";
    if (errorCode == -2132737783) return "SCE_WEBBROWSER_ERROR_NOT_FOUND";
    if (errorCode == -2132737788) return "SCE_WEBBROWSER_ERROR_NOT_IMPL";
    if (errorCode == -2132737784) return "SCE_WEBBROWSER_ERROR_NOT_INITIALIZED";
    if (errorCode == -2132279254) return "SCE_WEBVIEW_NETWORK_ERROR_ABORTED_BY_CALLBACK";
    if (errorCode == -2132279215) return "SCE_WEBVIEW_NETWORK_ERROR_AGAIN";
    if (errorCode == -2132279235) return "SCE_WEBVIEW_NETWORK_ERROR_BAD_CONTENT_ENCODING";
    if (errorCode == -2132279260) return "SCE_WEBVIEW_NETWORK_ERROR_BAD_DOWNLOAD_RESUME";
    if (errorCode == -2132279253) return "SCE_WEBVIEW_NETWORK_ERROR_BAD_FUNCTION_ARGUMENT";
    if (errorCode == -2132279208) return "SCE_WEBVIEW_NETWORK_ERROR_CHUNK_FAILED";
    if (errorCode == -2132279289) return "SCE_WEBVIEW_NETWORK_ERROR_COULDNT_CONNECT";
    if (errorCode == -2132279290) return "SCE_WEBVIEW_NETWORK_ERROR_COULDNT_RESOLVE_HOST";
    if (errorCode == -2132279291) return "SCE_WEBVIEW_NETWORK_ERROR_COULDNT_RESOLVE_PROXY";
    if (errorCode == -2132279294) return "SCE_WEBVIEW_NETWORK_ERROR_FAILED_INIT";
    if (errorCode == -2132279259) return "SCE_WEBVIEW_NETWORK_ERROR_FILE_COULDNT_READ_FILE";
    if (errorCode == -2132279233) return "SCE_WEBVIEW_NETWORK_ERROR_FILESIZE_EXCEEDED";
    if (errorCode == -2132279255) return "SCE_WEBVIEW_NETWORK_ERROR_FUNCTION_NOT_FOUND";
    if (errorCode == -2132279244) return "SCE_WEBVIEW_NETWORK_ERROR_GOT_NOTHING";
    if (errorCode == -2132279262) return "SCE_WEBVIEW_NETWORK_ERROR_HTTP_POST_ERROR";
    if (errorCode == -2132279251) return "SCE_WEBVIEW_NETWORK_ERROR_INTERFACE_FAILED";
    if (errorCode == -2132279268) return "SCE_WEBVIEW_NETWORK_ERROR_OPERATION_TIMEDOUT";
    if (errorCode == -2132279269) return "SCE_WEBVIEW_NETWORK_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2132279278) return "SCE_WEBVIEW_NETWORK_ERROR_PARTIAL_FILE";
    if (errorCode == -2132279245) return "SCE_WEBVIEW_NETWORK_ERROR_PEER_FAILED_VERIFICATION";
    if (errorCode == -2132279275) return "SCE_WEBVIEW_NETWORK_ERROR_QUOTE_ERROR";
    if (errorCode == -2132279263) return "SCE_WEBVIEW_NETWORK_ERROR_RANGE_ERROR";
    if (errorCode == -2132279270) return "SCE_WEBVIEW_NETWORK_ERROR_READ_ERROR";
    if (errorCode == -2132279240) return "SCE_WEBVIEW_NETWORK_ERROR_RECV_ERROR";
    if (errorCode == -2132279287) return "SCE_WEBVIEW_NETWORK_ERROR_REMOTE_ACCESS_DENIED";
    if (errorCode == -2132279241) return "SCE_WEBVIEW_NETWORK_ERROR_SEND_ERROR";
    if (errorCode == -2132279231) return "SCE_WEBVIEW_NETWORK_ERROR_SEND_FAIL_REWIND";
    if (errorCode == -2132279236) return "SCE_WEBVIEW_NETWORK_ERROR_SSL_CACERT";
    if (errorCode == -2132279219) return "SCE_WEBVIEW_NETWORK_ERROR_SSL_CACERT_BADFILE";
    if (errorCode == -2132279238) return "SCE_WEBVIEW_NETWORK_ERROR_SSL_CERTPROBLEM";
    if (errorCode == -2132279237) return "SCE_WEBVIEW_NETWORK_ERROR_SSL_CIPHER";
    if (errorCode == -2132279261) return "SCE_WEBVIEW_NETWORK_ERROR_SSL_CONNECT_ERROR";
    if (errorCode == -2132279230) return "SCE_WEBVIEW_NETWORK_ERROR_SSL_ENGINE_INITFAILED";
    if (errorCode == -2132279213) return "SCE_WEBVIEW_NETWORK_ERROR_SSL_ISSUER_ERROR";
    if (errorCode == -2132279216) return "SCE_WEBVIEW_NETWORK_ERROR_SSL_SHUTDOWN_FAILED";
    if (errorCode == -2132279249) return "SCE_WEBVIEW_NETWORK_ERROR_TOO_MANY_REDIRECTS";
    if (errorCode == -2132279248) return "SCE_WEBVIEW_NETWORK_ERROR_UNKNOWN_OPTION";
    if (errorCode == -2132279295) return "SCE_WEBVIEW_NETWORK_ERROR_UNSUPPORTED_PROTOCOL";
    if (errorCode == -2132279271) return "SCE_WEBVIEW_NETWORK_ERROR_UPLOAD_FAILED";
    if (errorCode == -2132279293) return "SCE_WEBVIEW_NETWORK_ERROR_URL_MALFORMAT";
    if (errorCode == -2132279273) return "SCE_WEBVIEW_NETWORK_ERROR_WRITE_ERROR";
    if (errorCode == -2132275169) return "SCE_WEBVIEW_SSL_X509_ERROR_AKID_ISSUER_SERIAL_MISMATCH";
    if (errorCode == -2132275170) return "SCE_WEBVIEW_SSL_X509_ERROR_AKID_SKID_MISMATCH";
    if (errorCode == -2132275150) return "SCE_WEBVIEW_SSL_X509_ERROR_APPLICATION_VERIFICATION";
    if (errorCode == -2132275178) return "SCE_WEBVIEW_SSL_X509_ERROR_CERT_CHAIN_TOO_LONG";
    if (errorCode == -2132275190) return "SCE_WEBVIEW_SSL_X509_ERROR_CERT_HAS_EXPIRED";
    if (errorCode == -2132275191) return "SCE_WEBVIEW_SSL_X509_ERROR_CERT_NOT_YET_VALID";
    if (errorCode == -2132275172) return "SCE_WEBVIEW_SSL_X509_ERROR_CERT_REJECTED";
    if (errorCode == -2132275177) return "SCE_WEBVIEW_SSL_X509_ERROR_CERT_REVOKED";
    if (errorCode == -2132275193) return "SCE_WEBVIEW_SSL_X509_ERROR_CERT_SIGNATURE_FAILURE";
    if (errorCode == -2132275173) return "SCE_WEBVIEW_SSL_X509_ERROR_CERT_UNTRUSTED";
    if (errorCode == -2132275188) return "SCE_WEBVIEW_SSL_X509_ERROR_CRL_HAS_EXPIRED";
    if (errorCode == -2132275189) return "SCE_WEBVIEW_SSL_X509_ERROR_CRL_NOT_YET_VALID";
    if (errorCode == -2132275146) return "SCE_WEBVIEW_SSL_X509_ERROR_CRL_PATH_VALIDATION_ERROR";
    if (errorCode == -2132275192) return "SCE_WEBVIEW_SSL_X509_ERROR_CRL_SIGNATURE_FAILURE";
    if (errorCode == -2132275182) return "SCE_WEBVIEW_SSL_X509_ERROR_DEPTH_ZERO_SELF_SIGNED_CERT";
    if (errorCode == -2132275156) return "SCE_WEBVIEW_SSL_X509_ERROR_DIFFERENT_CRL_SCOPE";
    if (errorCode == -2132275186) return "SCE_WEBVIEW_SSL_X509_ERROR_ERROR_IN_CERT_NOT_AFTER_FIELD";
    if (errorCode == -2132275187) return "SCE_WEBVIEW_SSL_X509_ERROR_ERROR_IN_CERT_NOT_BEFORE_FIELD";
    if (errorCode == -2132275185) return "SCE_WEBVIEW_SSL_X509_ERROR_ERROR_IN_CRL_LAST_UPDATE_FIELD";
    if (errorCode == -2132275184) return "SCE_WEBVIEW_SSL_X509_ERROR_ERROR_IN_CRL_NEXT_UPDATE_FIELD";
    if (errorCode == -2132275152) return "SCE_WEBVIEW_SSL_X509_ERROR_EXCLUDED_VIOLATION";
    if (errorCode == -2132275176) return "SCE_WEBVIEW_SSL_X509_ERROR_INVALID_CA";
    if (errorCode == -2132275159) return "SCE_WEBVIEW_SSL_X509_ERROR_INVALID_EXTENSION";
    if (errorCode == -2132275163) return "SCE_WEBVIEW_SSL_X509_ERROR_INVALID_NON_CA";
    if (errorCode == -2132275158) return "SCE_WEBVIEW_SSL_X509_ERROR_INVALID_POLICY_EXTENSION";
    if (errorCode == -2132275174) return "SCE_WEBVIEW_SSL_X509_ERROR_INVALID_PURPOSE";
    if (errorCode == -2132275168) return "SCE_WEBVIEW_SSL_X509_ERROR_KEYUSAGE_NO_CERTSIGN";
    if (errorCode == -2132275165) return "SCE_WEBVIEW_SSL_X509_ERROR_KEYUSAGE_NO_CRL_SIGN";
    if (errorCode == -2132275161) return "SCE_WEBVIEW_SSL_X509_ERROR_KEYUSAGE_NO_DIGITAL_SIGNATURE";
    if (errorCode == -2132275157) return "SCE_WEBVIEW_SSL_X509_ERROR_NO_EXPLICIT_POLICY";
    if (errorCode == -2132275183) return "SCE_WEBVIEW_SSL_X509_ERROR_OUT_OF_MEM";
    if (errorCode == -2132275175) return "SCE_WEBVIEW_SSL_X509_ERROR_PATH_LENGTH_EXCEEDED";
    if (errorCode == -2132275153) return "SCE_WEBVIEW_SSL_X509_ERROR_PERMITTED_VIOLATION";
    if (errorCode == -2132275160) return "SCE_WEBVIEW_SSL_X509_ERROR_PROXY_CERTIFICATES_NOT_ALLOWED";
    if (errorCode == -2132275162) return "SCE_WEBVIEW_SSL_X509_ERROR_PROXY_PATH_LENGTH_EXCEEDED";
    if (errorCode == -2132275181) return "SCE_WEBVIEW_SSL_X509_ERROR_SELF_SIGNED_CERT_IN_CHAIN";
    if (errorCode == -2132275100) return "SCE_WEBVIEW_SSL_X509_ERROR_SSL_CN_CHECK";
    if (errorCode == -2132275171) return "SCE_WEBVIEW_SSL_X509_ERROR_SUBJECT_ISSUER_MISMATCH";
    if (errorCode == -2132275151) return "SCE_WEBVIEW_SSL_X509_ERROR_SUBTREE_MINMAX";
    if (errorCode == -2132275194) return "SCE_WEBVIEW_SSL_X509_ERROR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY";
    if (errorCode == -2132275196) return "SCE_WEBVIEW_SSL_X509_ERROR_UNABLE_TO_DECRYPT_CERT_SIGNATURE";
    if (errorCode == -2132275195) return "SCE_WEBVIEW_SSL_X509_ERROR_UNABLE_TO_DECRYPT_CRL_SIGNATURE";
    if (errorCode == -2132275197) return "SCE_WEBVIEW_SSL_X509_ERROR_UNABLE_TO_GET_CR";
    if (errorCode == -2132275167) return "SCE_WEBVIEW_SSL_X509_ERROR_UNABLE_TO_GET_CRL_ISSUER";
    if (errorCode == -2132275198) return "SCE_WEBVIEW_SSL_X509_ERROR_UNABLE_TO_GET_ISSUER_CERT";
    if (errorCode == -2132275180) return "SCE_WEBVIEW_SSL_X509_ERROR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY";
    if (errorCode == -2132275179) return "SCE_WEBVIEW_SSL_X509_ERROR_UNABLE_TO_VERIFY_LEAF_SIGNATURE";
    if (errorCode == -2132275164) return "SCE_WEBVIEW_SSL_X509_ERROR_UNHANDLED_CRITICAL_CRL_EXTENSION";
    if (errorCode == -2132275166) return "SCE_WEBVIEW_SSL_X509_ERROR_UNHANDLED_CRITICAL_EXTENSION";
    if (errorCode == -2132275154) return "SCE_WEBVIEW_SSL_X509_ERROR_UNNESTED_RESOURCE";
    if (errorCode == -2132275148) return "SCE_WEBVIEW_SSL_X509_ERROR_UNSUPPORTED_CONSTRAINT_SYNTAX";
    if (errorCode == -2132275149) return "SCE_WEBVIEW_SSL_X509_ERROR_UNSUPPORTED_CONSTRAINT_TYPE";
    if (errorCode == -2132275155) return "SCE_WEBVIEW_SSL_X509_ERROR_UNSUPPORTED_EXTENSION_FEATURE";
    if (errorCode == -2132275147) return "SCE_WEBVIEW_SSL_X509_ERROR_UNSUPPORTED_NAME_SYNTAX";
    if (errorCode == -2138766848) return "SCE_XML_ERROR_DOM_ERROR";
    if (errorCode == -2138766839) return "SCE_XML_ERROR_DOM_INVALID_ENITITY";
    if (errorCode == -2138766838) return "SCE_XML_ERROR_DOM_INVALID_NODE_TYPE";
    if (errorCode == -2138766843) return "SCE_XML_ERROR_DOM_MAX_NUM_OF_ATTR_ERROR";
    if (errorCode == -2138766841) return "SCE_XML_ERROR_DOM_MAX_SIZE_OF_ATTR_NAME_ERROR";
    if (errorCode == -2138766840) return "SCE_XML_ERROR_DOM_MAX_SIZE_OF_ATTR_VALUE_ERROR";
    if (errorCode == -2138766842) return "SCE_XML_ERROR_DOM_MAX_SIZE_OF_ELEMENT_NAME_ERROR";
    if (errorCode == -2138766844) return "SCE_XML_ERROR_DOM_MAX_UNIQUE_ATTR_ERROR";
    if (errorCode == -2138766845) return "SCE_XML_ERROR_DOM_MAX_UNIQUE_ELEMENT_ERROR";
    if (errorCode == -2138766847) return "SCE_XML_ERROR_DOM_NODE_NOT_FOUND";
    if (errorCode == -2138766846) return "SCE_XML_ERROR_DOM_READ_ONLY_ERROR";
    if (errorCode == -2138767360) return "SCE_XML_ERROR_GENERIC_ERROR";
    if (errorCode == -2138767355) return "SCE_XML_ERROR_INITIALIZE_FAILED";
    if (errorCode == -2138767357) return "SCE_XML_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2138767354) return "SCE_XML_ERROR_INVALID_BIN_XML";
    if (errorCode == -2138767359) return "SCE_XML_ERROR_NO_MEMORY";
    if (errorCode == -2138767358) return "SCE_XML_ERROR_NOT_INITIALIZED";
    if (errorCode == -2138767356) return "SCE_XML_ERROR_NOT_SUPPORTED";
    if (errorCode == -2138767353) return "SCE_XML_ERROR_PARSER_BUSY";
    if (errorCode == -2138767346) return "SCE_XML_ERROR_XML_CLOSING_ANGLE_BRACKET_CHAR_NOT_FOUND";
    if (errorCode == -2138767335) return "SCE_XML_ERROR_XML_DOCUMENT_ELEMENT_NOT_FOUND";
    if (errorCode == -2138767334) return "SCE_XML_ERROR_XML_DUPLICATE_ATTR_NAME";
    if (errorCode == -2138767341) return "SCE_XML_ERROR_XML_END_OF_CD_SECT_NOT_FOUND";
    if (errorCode == -2138767342) return "SCE_XML_ERROR_XML_END_OF_COMMENT_NOT_FOUND";
    if (errorCode == -2138767340) return "SCE_XML_ERROR_XML_END_OF_DTD_NOT_FOUND";
    if (errorCode == -2138767350) return "SCE_XML_ERROR_XML_END_TAG_MISMATCH";
    if (errorCode == -2138767345) return "SCE_XML_ERROR_XML_EQUALITY_CHAR_NOT_FOUND";
    if (errorCode == -2138767338) return "SCE_XML_ERROR_XML_HANDLER_NOT_SET";
    if (errorCode == -2138767349) return "SCE_XML_ERROR_XML_INVALID_CHAR";
    if (errorCode == -2138767348) return "SCE_XML_ERROR_XML_INVALID_DEC_VALUE";
    if (errorCode == -2138767336) return "SCE_XML_ERROR_XML_INVALID_DOCUMENT_ELEMENT";
    if (errorCode == -2138767347) return "SCE_XML_ERROR_XML_INVALID_HEX_VALUE";
    if (errorCode == -2138767337) return "SCE_XML_ERROR_XML_INVALID_PI";
    if (errorCode == -2138767343) return "SCE_XML_ERROR_XML_QUOTE_CHAR_NOT_FOUND";
    if (errorCode == -2138767344) return "SCE_XML_ERROR_XML_SEMI_COLON_CHAR_NOT_FOUND";
    if (errorCode == -2138767351) return "SCE_XML_ERROR_XML_SYNTAX_ERROR";
    if (errorCode == -2138767352) return "SCE_XML_ERROR_XML_UNEXPEXTED_EO_F";
    if (errorCode == -2138767339) return "SCE_XML_ERROR_XML_UNKNOWN_ENCODING";
    if (errorCode == -2132803584) return "SCE_AC3_ENC_ERROR_INTERNAL_ERROR";
    if (errorCode == -2132803579) return "SCE_AC3_ENC_ERROR_INVALID_BIT_RATE";
    if (errorCode == -2132803583) return "SCE_AC3_ENC_ERROR_INVALID_HANDLE";
    if (errorCode == -2132803578) return "SCE_AC3_ENC_ERROR_INVALID_INPUT_FORMAT";
    if (errorCode == -2132803581) return "SCE_AC3_ENC_ERROR_INVALID_NUM_CHANNELS";
    if (errorCode == -2132803577) return "SCE_AC3_ENC_ERROR_INVALID_OUTPUT_FORMAT";
    if (errorCode == -2132803582) return "SCE_AC3_ENC_ERROR_INVALID_POINTER";
    if (errorCode == -2132803580) return "SCE_AC3_ENC_ERROR_INVALID_SAMPLE_RATE";
    if (errorCode == -2132803576) return "SCE_AC3_ENC_ERROR_NO_MORE_INSTANCES";
    if (errorCode == -2132803575) return "SCE_AC3_ENC_ERROR_NOT_IN_ENCODING";
    if (errorCode == -2137849842) return "SCE_AJM_ERROR_BAD_PRIORITY";
    if (errorCode == -2137849835) return "SCE_AJM_ERROR_BUFFER_TOO_BIG";
    if (errorCode == -2137849843) return "SCE_AJM_ERROR_BUSY";
    if (errorCode == -2137849833) return "SCE_AJM_ERROR_CANCELLED";
    if (errorCode == -2137849847) return "SCE_AJM_ERROR_CODEC_ALREADY_REGISTERED";
    if (errorCode == -2137849846) return "SCE_AJM_ERROR_CODEC_NOT_REGISTERED";
    if (errorCode == -2137849848) return "SCE_AJM_ERROR_CODEC_NOT_SUPPORTED";
    if (errorCode == -2137849844) return "SCE_AJM_ERROR_FLAG_NOT_SUPPORTED";
    if (errorCode == -2137849841) return "SCE_AJM_ERROR_IN_PROGRESS";
    if (errorCode == -2137849834) return "SCE_AJM_ERROR_INVALID_ADDRESS";
    if (errorCode == -2137849852) return "SCE_AJM_ERROR_INVALID_BATCH";
    if (errorCode == -2137849854) return "SCE_AJM_ERROR_INVALID_CONTEXT";
    if (errorCode == -2137849853) return "SCE_AJM_ERROR_INVALID_INSTANCE";
    if (errorCode == -2137849837) return "SCE_AJM_ERROR_INVALID_OPCODE";
    if (errorCode == -2137849851) return "SCE_AJM_ERROR_INVALID_PARAMETER";
    if (errorCode == -2137849838) return "SCE_AJM_ERROR_JOB_CREATION";
    if (errorCode == -2137849839) return "SCE_AJM_ERROR_MALFORMED_BATCH";
    if (errorCode == -2137849850) return "SCE_AJM_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2137849849) return "SCE_AJM_ERROR_OUT_OF_RESOURCES";
    if (errorCode == -2137849836) return "SCE_AJM_ERROR_PRIORITY_VIOLATION";
    if (errorCode == -2137849840) return "SCE_AJM_ERROR_RETRY";
    if (errorCode == -2137849855) return "SCE_AJM_ERROR_UNKNOWN";
    if (errorCode == -2137849845) return "SCE_AJM_ERROR_WRONG_REVISION_FLAG";
    if (errorCode == -2144993014) return "SCE_AUDIO_IN_ERROR_BUSY";
    if (errorCode == -2144993024) return "SCE_AUDIO_IN_ERROR_FATAL";
    if (errorCode == -2144993021) return "SCE_AUDIO_IN_ERROR_INVALID_FREQ";
    if (errorCode == -2144993023) return "SCE_AUDIO_IN_ERROR_INVALID_HANDLE";
    if (errorCode == -2144993018) return "SCE_AUDIO_IN_ERROR_INVALID_PARAM";
    if (errorCode == -2144993019) return "SCE_AUDIO_IN_ERROR_INVALID_POINTER";
    if (errorCode == -2144993022) return "SCE_AUDIO_IN_ERROR_INVALID_SIZE";
    if (errorCode == -2144993020) return "SCE_AUDIO_IN_ERROR_INVALID_TYPE";
    if (errorCode == -2144993015) return "SCE_AUDIO_IN_ERROR_NOT_OPENED";
    if (errorCode == -2144993016) return "SCE_AUDIO_IN_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2144993017) return "SCE_AUDIO_IN_ERROR_PORT_FULL";
    if (errorCode == -2144993012) return "SCE_AUDIO_IN_ERROR_SYSTEM_IPC";
    if (errorCode == -2144993013) return "SCE_AUDIO_IN_ERROR_SYSTEM_MEMORY";
    if (errorCode == -2144993266) return "SCE_AUDIO_OUT_ERROR_ALREADY_INIT";
    if (errorCode == -2144993278) return "SCE_AUDIO_OUT_ERROR_BUSY";
    if (errorCode == -2144993268) return "SCE_AUDIO_OUT_ERROR_INVALID_CONF_TYPE";
    if (errorCode == -2144993261) return "SCE_AUDIO_OUT_ERROR_INVALID_FLAG";
    if (errorCode == -2144993273) return "SCE_AUDIO_OUT_ERROR_INVALID_FORMAT";
    if (errorCode == -2144993260) return "SCE_AUDIO_OUT_ERROR_INVALID_MIXLEVEL";
    if (errorCode == -2144993276) return "SCE_AUDIO_OUT_ERROR_INVALID_POINTER";
    if (errorCode == -2144993277) return "SCE_AUDIO_OUT_ERROR_INVALID_PORT";
    if (errorCode == -2144993270) return "SCE_AUDIO_OUT_ERROR_INVALID_PORT_TYPE";
    if (errorCode == -2144993272) return "SCE_AUDIO_OUT_ERROR_INVALID_SAMPLE_FREQ";
    if (errorCode == -2144993274) return "SCE_AUDIO_OUT_ERROR_INVALID_SIZE";
    if (errorCode == -2144993271) return "SCE_AUDIO_OUT_ERROR_INVALID_VOLUME";
    if (errorCode == -2144993264) return "SCE_AUDIO_OUT_ERROR_MEMORY";
    if (errorCode == -2144993265) return "SCE_AUDIO_OUT_ERROR_NOT_INIT";
    if (errorCode == -2144993279) return "SCE_AUDIO_OUT_ERROR_NOT_OPENED";
    if (errorCode == -2144993267) return "SCE_AUDIO_OUT_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2144993275) return "SCE_AUDIO_OUT_ERROR_PORT_FULL";
    if (errorCode == -2144993263) return "SCE_AUDIO_OUT_ERROR_SYSTEM_RESOURCE";
    if (errorCode == -2144993262) return "SCE_AUDIO_OUT_ERROR_TRANS_EVENT";
    if (errorCode == -2132148221) return "SCE_AUDIO3D_ERROR_INVALID_OBJECT";
    if (errorCode == -2132148220) return "SCE_AUDIO3D_ERROR_INVALID_PARAMETER";
    if (errorCode == -2132148222) return "SCE_AUDIO3D_ERROR_INVALID_PORT";
    if (errorCode == -2132148217) return "SCE_AUDIO3D_ERROR_NOT_READY";
    if (errorCode == -2132148219) return "SCE_AUDIO3D_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2132148218) return "SCE_AUDIO3D_ERROR_OUT_OF_RESOURCES";
    if (errorCode == -2132148216) return "SCE_AUDIO3D_ERROR_TOO_MANY_CHANNELS";
    if (errorCode == -2132148223) return "SCE_AUDIO3D_ERROR_UNKNOWN";
    if (errorCode == -2131294975) return "SCE_AUDIODEC_CPU_ERROR_DDP_ARG";
    if (errorCode == -2131294971) return "SCE_AUDIODEC_CPU_ERROR_DDP_CLEAR_CONTEXT_FAIL";
    if (errorCode == -2131294973) return "SCE_AUDIODEC_CPU_ERROR_DDP_CREATE_DEC_FAIL";
    if (errorCode == -2131294972) return "SCE_AUDIODEC_CPU_ERROR_DDP_DECODE_FAIL";
    if (errorCode == -2131294976) return "SCE_AUDIODEC_CPU_ERROR_DDP_FAIL";
    if (errorCode == -2131294974) return "SCE_AUDIODEC_CPU_ERROR_DDP_MEM_FAIL";
    if (errorCode == -2139159545) return "SCE_AUDIODEC_ERROR_AC3_INVALID_DUAL_MONO_REPRODUCTION_MODE";
    if (errorCode == -2139159551) return "SCE_AUDIODEC_ERROR_AC3_INVALID_DYNAMIC_RANGE_COMPRESSION_MODE";
    if (errorCode == -2139159544) return "SCE_AUDIODEC_ERROR_AC3_INVALID_HIGH_FREQUENCY_DYNAMIC_CUT_SCALE_FACTOR";
    if (errorCode == -2139159552) return "SCE_AUDIODEC_ERROR_AC3_INVALID_KARAOKE_CAPABLE_REPRODUCTION_MODE";
    if (errorCode == -2139159550) return "SCE_AUDIODEC_ERROR_AC3_INVALID_LFE_CHANNEL_OUTPUT_MODE";
    if (errorCode == -2139159543) return "SCE_AUDIODEC_ERROR_AC3_INVALID_LOW_FREQUENCY_DYNAMIC_BOOST_SCALE_FACTOR";
    if (errorCode == -2139159548) return "SCE_AUDIODEC_ERROR_AC3_INVALID_NUMBER_OF_OUTPUT_CHANNELS";
    if (errorCode == -2139159549) return "SCE_AUDIODEC_ERROR_AC3_INVALID_OUTPUT_CHANNEL_CONFIGRATION";
    if (errorCode == -2139159542) return "SCE_AUDIODEC_ERROR_AC3_INVALID_OUTPUT_CHANNEL_ROUTING";
    if (errorCode == -2139159547) return "SCE_AUDIODEC_ERROR_AC3_INVALID_OUTPUT_PCM_SAMPLES_SCALE_FACTOR";
    if (errorCode == -2139159546) return "SCE_AUDIODEC_ERROR_AC3_INVALID_STEREO_MODE";
    if (errorCode == -2139160576) return "SCE_AUDIODEC_ERROR_API_FAIL";
    if (errorCode == -2139160574) return "SCE_AUDIODEC_ERROR_ARG";
    if (errorCode == -2139156480) return "SCE_AUDIODEC_ERROR_AT9_INVALID_CONFIG_DATA";
    if (errorCode == -2139160565) return "SCE_AUDIODEC_ERROR_INVALID_AU_INFO_POINTER";
    if (errorCode == -2139160570) return "SCE_AUDIODEC_ERROR_INVALID_AU_INFO_SIZE";
    if (errorCode == -2139160563) return "SCE_AUDIODEC_ERROR_INVALID_AU_POINTER";
    if (errorCode == -2139160559) return "SCE_AUDIODEC_ERROR_INVALID_AU_SIZE";
    if (errorCode == -2139160566) return "SCE_AUDIODEC_ERROR_INVALID_BSI_INFO_POINTER";
    if (errorCode == -2139160571) return "SCE_AUDIODEC_ERROR_INVALID_BSI_INFO_SIZE";
    if (errorCode == -2139160568) return "SCE_AUDIODEC_ERROR_INVALID_CTRL_POINTER";
    if (errorCode == -2139160561) return "SCE_AUDIODEC_ERROR_INVALID_HANDLE";
    if (errorCode == -2139160567) return "SCE_AUDIODEC_ERROR_INVALID_PARAM_POINTER";
    if (errorCode == -2139160572) return "SCE_AUDIODEC_ERROR_INVALID_PARAM_SIZE";
    if (errorCode == -2139160564) return "SCE_AUDIODEC_ERROR_INVALID_PCM_ITEM_POINTER";
    if (errorCode == -2139160569) return "SCE_AUDIODEC_ERROR_INVALID_PCM_ITEM_SIZE";
    if (errorCode == -2139160562) return "SCE_AUDIODEC_ERROR_INVALID_PCM_POINTER";
    if (errorCode == -2139160558) return "SCE_AUDIODEC_ERROR_INVALID_PCM_SIZE";
    if (errorCode == -2139160573) return "SCE_AUDIODEC_ERROR_INVALID_SIZE";
    if (errorCode == -2139160575) return "SCE_AUDIODEC_ERROR_INVALID_TYPE";
    if (errorCode == -2139160560) return "SCE_AUDIODEC_ERROR_INVALID_WORD_LENGTH";
    if (errorCode == -2139158016) return "SCE_AUDIODEC_ERROR_M2BC_INVALID_DOWNMIX";
    if (errorCode == -2139159805) return "SCE_AUDIODEC_ERROR_M4AAC_INVALID_CONFIG_NUMBER";
    if (errorCode == -2139159806) return "SCE_AUDIODEC_ERROR_M4AAC_INVALID_ENABLE_HEAAC";
    if (errorCode == -2139159803) return "SCE_AUDIODEC_ERROR_M4AAC_INVALID_ENABLE_NONDELAY_OUTPUT";
    if (errorCode == -2139159804) return "SCE_AUDIODEC_ERROR_M4AAC_INVALID_MAX_CHANNELS";
    if (errorCode == -2139159808) return "SCE_AUDIODEC_ERROR_M4AAC_INVALID_SAMPLING_FREQ";
    if (errorCode == -2139159802) return "SCE_AUDIODEC_ERROR_M4AAC_INVALID_SURROUND_CHANNEL_INTERLEAVE_ORDER";
    if (errorCode == -2139152380) return "SCE_AUDIODEC_ERROR_TRHD_INVALID_DRC_BOOST";
    if (errorCode == -2139152381) return "SCE_AUDIODEC_ERROR_TRHD_INVALID_DRC_CUT";
    if (errorCode == -2139152382) return "SCE_AUDIODEC_ERROR_TRHD_INVALID_DRC_ENABLE";
    if (errorCode == -2139152383) return "SCE_AUDIODEC_ERROR_TRHD_INVALID_LOSSLESS";
    if (errorCode == -2139152379) return "SCE_AUDIODEC_ERROR_TRHD_INVALID_NFRAME_DECODE";
    if (errorCode == -2139152384) return "SCE_AUDIODEC_ERROR_TRHD_INVALID_PRESENTATION_MODE";
    if (errorCode == -2131296256) return "SCE_AUDIODECCPU_ERROR_API_FAIL";
    if (errorCode == -2131296254) return "SCE_AUDIODECCPU_ERROR_ARG";
    if (errorCode == -2131296244) return "SCE_AUDIODECCPU_ERROR_INVALID_AU_INFO_POINTER";
    if (errorCode == -2131296250) return "SCE_AUDIODECCPU_ERROR_INVALID_AU_INFO_SIZE";
    if (errorCode == -2131296241) return "SCE_AUDIODECCPU_ERROR_INVALID_AU_POINTER";
    if (errorCode == -2131296237) return "SCE_AUDIODECCPU_ERROR_INVALID_AU_SIZE";
    if (errorCode == -2131296245) return "SCE_AUDIODECCPU_ERROR_INVALID_BSI_INFO_POINTER";
    if (errorCode == -2131296251) return "SCE_AUDIODECCPU_ERROR_INVALID_BSI_INFO_SIZE";
    if (errorCode == -2131296247) return "SCE_AUDIODECCPU_ERROR_INVALID_CTRL_POINTER";
    if (errorCode == -2131296246) return "SCE_AUDIODECCPU_ERROR_INVALID_PARAM_POINTER";
    if (errorCode == -2131296252) return "SCE_AUDIODECCPU_ERROR_INVALID_PARAM_SIZE";
    if (errorCode == -2131296243) return "SCE_AUDIODECCPU_ERROR_INVALID_PCM_ITEM_POINTER";
    if (errorCode == -2131296249) return "SCE_AUDIODECCPU_ERROR_INVALID_PCM_ITEM_SIZE";
    if (errorCode == -2131296240) return "SCE_AUDIODECCPU_ERROR_INVALID_PCM_POINTER";
    if (errorCode == -2131296236) return "SCE_AUDIODECCPU_ERROR_INVALID_PCM_SIZE";
    if (errorCode == -2131296242) return "SCE_AUDIODECCPU_ERROR_INVALID_RESOURCE_POINTER";
    if (errorCode == -2131296248) return "SCE_AUDIODECCPU_ERROR_INVALID_RESOURCE_SIZE";
    if (errorCode == -2131296253) return "SCE_AUDIODECCPU_ERROR_INVALID_SIZE";
    if (errorCode == -2131296255) return "SCE_AUDIODECCPU_ERROR_INVALID_TYPE";
    if (errorCode == -2131296238) return "SCE_AUDIODECCPU_ERROR_INVALID_WORD_LENGTH";
    if (errorCode == -2131296239) return "SCE_AUDIODECCPU_ERROR_INVALID_WORK_MEM_POINTER";
    if (errorCode == -2131296235) return "SCE_AUDIODECCPU_ERROR_INVALID_WORK_MEM_SIZE";
    if (errorCode == -2131295483) return "SCE_AUDIODECCPU_ERROR_M4AAC_INSUFFICIENT_BUFFER";
    if (errorCode == -2131295485) return "SCE_AUDIODECCPU_ERROR_M4AAC_INVALID_CONFIG_NUMBER";
    if (errorCode == -2131295484) return "SCE_AUDIODECCPU_ERROR_M4AAC_INVALID_DOWNMIX_MODE";
    if (errorCode == -2131295486) return "SCE_AUDIODECCPU_ERROR_M4AAC_INVALID_ENABLE_HEAAC";
    if (errorCode == -2131295482) return "SCE_AUDIODECCPU_ERROR_M4AAC_INVALID_ENABLE_NONDELAY_OUTPUT";
    if (errorCode == -2131295487) return "SCE_AUDIODECCPU_ERROR_M4AAC_INVALID_MAX_CHANNELS";
    if (errorCode == -2131295488) return "SCE_AUDIODECCPU_ERROR_M4AAC_INVALID_SAMPLING_FREQ";
    if (errorCode == -2131295481) return "SCE_AUDIODECCPU_ERROR_M4AAC_INVALID_SURROUND_CHANNEL_INTERLEAVE_ORDER";
    if (errorCode == -2144731130) return "SCE_AV_CONTROL_ERROR_BLANK_TIMEOUT";
    if (errorCode == -2144731131) return "SCE_AV_CONTROL_ERROR_DP_LINK_TRAINING_FAIL";
    if (errorCode == -2144731129) return "SCE_AV_CONTROL_ERROR_INIT_FAIL";
    if (errorCode == -2144731133) return "SCE_AV_CONTROL_ERROR_INVALID_MODE";
    if (errorCode == -2144731135) return "SCE_AV_CONTROL_ERROR_INVALID_PARAM";
    if (errorCode == -2144731134) return "SCE_AV_CONTROL_ERROR_INVALID_PITCH";
    if (errorCode == -2144731132) return "SCE_AV_CONTROL_ERROR_PLL_FAIL";
    if (errorCode == -2137391094) return "SCE_AV_SETTING_ERROR_BUSY";
    if (errorCode == -2137391097) return "SCE_AV_SETTING_ERROR_DEVICE";
    if (errorCode == -2137390849) return "SCE_AV_SETTING_ERROR_INTERNAL";
    if (errorCode == -2137391102) return "SCE_AV_SETTING_ERROR_INVALID_ARG";
    if (errorCode == -2137391098) return "SCE_AV_SETTING_ERROR_MEMORY";
    if (errorCode == -2137391100) return "SCE_AV_SETTING_ERROR_NO_DEVICE";
    if (errorCode == -2137391103) return "SCE_AV_SETTING_ERROR_NULL_POINTER_ARG";
    if (errorCode == -2137391088) return "SCE_AV_SETTING_ERROR_OVER_MAX_NOTIFICATION_CLIENT_NUM";
    if (errorCode == -2137390976) return "SCE_AV_SETTING_ERROR_SCANIN_ARG";
    if (errorCode == -2137390975) return "SCE_AV_SETTING_ERROR_SCANIN_DISABLED";
    if (errorCode == -2137390974) return "SCE_AV_SETTING_ERROR_SCANIN_UNSUPPORTED_SCALING_RATIO";
    if (errorCode == -2137391093) return "SCE_AV_SETTING_ERROR_UNAVAILABLE_FORMAT";
    if (errorCode == -2137391101) return "SCE_AV_SETTING_ERROR_UNKNOWN_DEVICE_ID";
    if (errorCode == -2137391087) return "SCE_AV_SETTING_ERROR_UNKNOWN_NOTIFICATION_CLIENT";
    if (errorCode == -2137391096) return "SCE_AV_SETTING_ERROR_UNKNOWN_PROCESS";
    if (errorCode == -2137391095) return "SCE_AV_SETTING_ERROR_UNKNOWN_TICKET";
    if (errorCode == -2137391099) return "SCE_AV_SETTING_ERROR_UNSUPPORTED_FORMAT";
    if (errorCode == -2140536651) return "SCE_AVPLAYER_ERROR_INFO_AES_ENCRY";
    if (errorCode == -2140536656) return "SCE_AVPLAYER_ERROR_INFO_MARLIN_ENCRY";
    if (errorCode == -2140536641) return "SCE_AVPLAYER_ERROR_INFO_OTHER_ENCRY";
    if (errorCode == -2140536652) return "SCE_AVPLAYER_ERROR_INFO_PLAYREADY_ENCRY";
    if (errorCode == -2140536831) return "SCE_AVPLAYER_ERROR_INVALID_PARAMS";
    if (errorCode == -2140536829) return "SCE_AVPLAYER_ERROR_NO_MEMORY";
    if (errorCode == -2140536828) return "SCE_AVPLAYER_ERROR_NOT_SUPPORTED";
    if (errorCode == -2140536830) return "SCE_AVPLAYER_ERROR_OPERATION_FAILED";
    if (errorCode == -2140536672) return "SCE_AVPLAYER_ERROR_WAR_FILE_NONINTERLEAVED";
    if (errorCode == -2140536671) return "SCE_AVPLAYER_ERROR_WAR_LOOPING_BACK";
    if (errorCode == -2144400637) return "SCE_BT_ERROR_ACL_TX_BUF_OVERFLOW";
    if (errorCode == -2144400636) return "SCE_BT_ERROR_ACL_TX_CB_OVERFLOW";
    if (errorCode == -2144394241) return "SCE_BT_ERROR_ATT_APPLICATION_ERROR_HI";
    if (errorCode == -2144394368) return "SCE_BT_ERROR_ATT_APPLICATION_ERROR_LO";
    if (errorCode == -2144394486) return "SCE_BT_ERROR_ATT_ATTRIBUTE_NOT_FOUND";
    if (errorCode == -2144394485) return "SCE_BT_ERROR_ATT_ATTRIBUTE_NOT_LONG";
    if (errorCode == -2144394496) return "SCE_BT_ERROR_ATT_BASE";
    if (errorCode == -2144394491) return "SCE_BT_ERROR_ATT_INSUFFICIENT_AUTHENTICATION";
    if (errorCode == -2144394488) return "SCE_BT_ERROR_ATT_INSUFFICIENT_AUTHORIZATION";
    if (errorCode == -2144394481) return "SCE_BT_ERROR_ATT_INSUFFICIENT_ENCRYPTION";
    if (errorCode == -2144394484) return "SCE_BT_ERROR_ATT_INSUFFICIENT_ENCRYPTION_KEY_SIZE";
    if (errorCode == -2144394479) return "SCE_BT_ERROR_ATT_INSUFFICIENT_RESOURCES";
    if (errorCode == -2144394483) return "SCE_BT_ERROR_ATT_INVALID_ATTRIBUTE_VALUE_LENGTH";
    if (errorCode == -2144394495) return "SCE_BT_ERROR_ATT_INVALID_HANDLE";
    if (errorCode == -2144394489) return "SCE_BT_ERROR_ATT_INVALID_OFFSET";
    if (errorCode == -2144394492) return "SCE_BT_ERROR_ATT_INVALID_PDU";
    if (errorCode == -2144392697) return "SCE_BT_ERROR_ATT_NOT_YET";
    if (errorCode == -2144394487) return "SCE_BT_ERROR_ATT_PEPARE_QUEUE_FULL";
    if (errorCode == -2144392701) return "SCE_BT_ERROR_ATT_READ_INVALID_INTERNAL";
    if (errorCode == -2144392702) return "SCE_BT_ERROR_ATT_READ_INVALID_LENGTH";
    if (errorCode == -2144392703) return "SCE_BT_ERROR_ATT_READ_INVALID_NO";
    if (errorCode == -2144394494) return "SCE_BT_ERROR_ATT_READ_NOT_PERMITTED";
    if (errorCode == -2144394490) return "SCE_BT_ERROR_ATT_REQUEST_NOT_SUPPORTED";
    if (errorCode == -2144394482) return "SCE_BT_ERROR_ATT_UNLIKELY_ERROR";
    if (errorCode == -2144394480) return "SCE_BT_ERROR_ATT_UNSUPPORTED_GROUP_TYPE";
    if (errorCode == -2144392698) return "SCE_BT_ERROR_ATT_WRITE_INVALID_INTERNAL";
    if (errorCode == -2144392699) return "SCE_BT_ERROR_ATT_WRITE_INVALID_LENGTH";
    if (errorCode == -2144392700) return "SCE_BT_ERROR_ATT_WRITE_INVALID_NO";
    if (errorCode == -2144394493) return "SCE_BT_ERROR_ATT_WRITE_NOT_PERMITTED";
    if (errorCode == -2144400106) return "SCE_BT_ERROR_AUDIO_COMBI_NOT_FOUND";
    if (errorCode == -2144394743) return "SCE_BT_ERROR_AUDIO_FREQ_IS_LE";
    if (errorCode == -2144400113) return "SCE_BT_ERROR_AUDIO_FREQ_NOT_CONNECTED";
    if (errorCode == -2144400104) return "SCE_BT_ERROR_AUDIO_INTERNAL_1";
    if (errorCode == -2144400110) return "SCE_BT_ERROR_AUDIO_RECV_BAD_TYPE";
    if (errorCode == -2144400102) return "SCE_BT_ERROR_AUDIO_RECV_BUSY";
    if (errorCode == -2144400118) return "SCE_BT_ERROR_AUDIO_RECV_INVALID_LENGTH";
    if (errorCode == -2144394744) return "SCE_BT_ERROR_AUDIO_RECV_IS_LE";
    if (errorCode == -2144400099) return "SCE_BT_ERROR_AUDIO_RECV_NO_CAP";
    if (errorCode == -2144400120) return "SCE_BT_ERROR_AUDIO_RECV_NOT_CONNECTED";
    if (errorCode == -2144400119) return "SCE_BT_ERROR_AUDIO_RECV_NOT_STARTED";
    if (errorCode == -2144400098) return "SCE_BT_ERROR_AUDIO_RECV_SERV_FAILED";
    if (errorCode == -2144400111) return "SCE_BT_ERROR_AUDIO_SEND_BAD_TYPE";
    if (errorCode == -2144400103) return "SCE_BT_ERROR_AUDIO_SEND_BUSY";
    if (errorCode == -2144400121) return "SCE_BT_ERROR_AUDIO_SEND_INVALID_LENGTH";
    if (errorCode == -2144394745) return "SCE_BT_ERROR_AUDIO_SEND_IS_LE";
    if (errorCode == -2144400101) return "SCE_BT_ERROR_AUDIO_SEND_NO_CAP";
    if (errorCode == -2144400112) return "SCE_BT_ERROR_AUDIO_SEND_NO_CP";
    if (errorCode == -2144400105) return "SCE_BT_ERROR_AUDIO_SEND_NO_L2C";
    if (errorCode == -2144400123) return "SCE_BT_ERROR_AUDIO_SEND_NOT_CONNECTED";
    if (errorCode == -2144400122) return "SCE_BT_ERROR_AUDIO_SEND_NOT_STARTED";
    if (errorCode == -2144400100) return "SCE_BT_ERROR_AUDIO_SEND_SERV_FAILED";
    if (errorCode == -2144400117) return "SCE_BT_ERROR_AUDIO_START_INVALID_SERV";
    if (errorCode == -2144394747) return "SCE_BT_ERROR_AUDIO_START_IS_LE";
    if (errorCode == -2144400126) return "SCE_BT_ERROR_AUDIO_START_NO_CAP";
    if (errorCode == -2144400127) return "SCE_BT_ERROR_AUDIO_START_NOT_CONNECTED";
    if (errorCode == -2144400115) return "SCE_BT_ERROR_AUDIO_START_SERV_FAILED";
    if (errorCode == -2144400116) return "SCE_BT_ERROR_AUDIO_STOP_INVALID_SERV";
    if (errorCode == -2144394746) return "SCE_BT_ERROR_AUDIO_STOP_IS_LE";
    if (errorCode == -2144400124) return "SCE_BT_ERROR_AUDIO_STOP_NO_CAP";
    if (errorCode == -2144400125) return "SCE_BT_ERROR_AUDIO_STOP_NOT_CONNECTED";
    if (errorCode == -2144400114) return "SCE_BT_ERROR_AUDIO_STOP_SERV_FAILED";
    if (errorCode == -2144401918) return "SCE_BT_ERROR_AVCTP_CLOSE_NO_L2C";
    if (errorCode == -2144394749) return "SCE_BT_ERROR_AVCTP_IS_LE";
    if (errorCode == -2144401916) return "SCE_BT_ERROR_AVCTP_NOT_CONNECTED";
    if (errorCode == -2144401919) return "SCE_BT_ERROR_AVCTP_OPEN_NO_L2C";
    if (errorCode == -2144401912) return "SCE_BT_ERROR_AVCTP_READ_NO_VOLUME";
    if (errorCode == -2144401915) return "SCE_BT_ERROR_AVCTP_SEND_BUSY";
    if (errorCode == -2144401917) return "SCE_BT_ERROR_AVCTP_SEND_NO_L2C";
    if (errorCode == -2144401914) return "SCE_BT_ERROR_AVCTP_SEND_NO_PRESS";
    if (errorCode == -2144401913) return "SCE_BT_ERROR_AVCTP_SEND_NO_RELEASE";
    if (errorCode == -2144401911) return "SCE_BT_ERROR_AVCTP_SEND_NOT_RUBY";
    if (errorCode == -2144402174) return "SCE_BT_ERROR_AVDTP_CLOSE_BAD_SERV";
    if (errorCode == -2144402173) return "SCE_BT_ERROR_AVDTP_CLOSE_BAD_STATE";
    if (errorCode == -2144402175) return "SCE_BT_ERROR_AVDTP_OPEN_NO_L2C";
    if (errorCode == -2144402167) return "SCE_BT_ERROR_AVDTP_RECONF_BAD_SERV";
    if (errorCode == -2144402166) return "SCE_BT_ERROR_AVDTP_RECONF_BAD_STATE";
    if (errorCode == -2144402168) return "SCE_BT_ERROR_AVDTP_SEND_BAD_STATE";
    if (errorCode == -2144402172) return "SCE_BT_ERROR_AVDTP_START_BAD_SERV";
    if (errorCode == -2144402171) return "SCE_BT_ERROR_AVDTP_START_BAD_STATE";
    if (errorCode == -2144402170) return "SCE_BT_ERROR_AVDTP_STOP_BAD_SERV";
    if (errorCode == -2144402169) return "SCE_BT_ERROR_AVDTP_STOP_BAD_STATE";
    if (errorCode == -2144398846) return "SCE_BT_ERROR_AVRCP_INVALID_PLAY_STATUS";
    if (errorCode == -2144398847) return "SCE_BT_ERROR_AVRCP_TOO_LONG_TITLE";
    if (errorCode == -2144400381) return "SCE_BT_ERROR_CB_NOT_REGISTERED";
    if (errorCode == -2144400380) return "SCE_BT_ERROR_CB_OVERFLOW";
    if (errorCode == -2144400382) return "SCE_BT_ERROR_CB_TOO_MANY";
    if (errorCode == -2144398077) return "SCE_BT_ERROR_CONF_BT_INACTIVE";
    if (errorCode == -2144398072) return "SCE_BT_ERROR_CONF_CANT_DISABLE_FUNCTION";
    if (errorCode == -2144398073) return "SCE_BT_ERROR_CONF_CANT_ENABLE_FUNCTION";
    if (errorCode == -2144398048) return "SCE_BT_ERROR_CONF_CANT_ENTER";
    if (errorCode == -2144398075) return "SCE_BT_ERROR_CONF_CARD_NOT_FOUND";
    if (errorCode == -2144398068) return "SCE_BT_ERROR_CONF_DISABLE_SUBINTR";
    if (errorCode == -2144398069) return "SCE_BT_ERROR_CONF_ENABLE_SUBINTR";
    if (errorCode == -2144398074) return "SCE_BT_ERROR_CONF_FUNCTION_NOT_FOUND";
    if (errorCode == -2144398078) return "SCE_BT_ERROR_CONF_INVALID_VALUE";
    if (errorCode == -2144398079) return "SCE_BT_ERROR_CONF_NOT_READY";
    if (errorCode == -2144398066) return "SCE_BT_ERROR_CONF_OFF_TIMEOUT";
    if (errorCode == -2144398067) return "SCE_BT_ERROR_CONF_ON_TIMEOUT";
    if (errorCode == -2144398071) return "SCE_BT_ERROR_CONF_REGISTER_SUBINTR_HANDLER";
    if (errorCode == -2144398070) return "SCE_BT_ERROR_CONF_RELEASE_SUBINTR_HANDLER";
    if (errorCode == -2144398065) return "SCE_BT_ERROR_CONF_SUSPEND_TIMEOUT";
    if (errorCode == -2144398076) return "SCE_BT_ERROR_CONF_TIMEOUT";
    if (errorCode == -2144402940) return "SCE_BT_ERROR_CONNECT_START_BUSY";
    if (errorCode == -2144402934) return "SCE_BT_ERROR_CONNECT_START_CONNECTED";
    if (errorCode == -2144402930) return "SCE_BT_ERROR_CONNECT_START_DELETING";
    if (errorCode == -2144394750) return "SCE_BT_ERROR_CONNECT_START_IS_LE";
    if (errorCode == -2144402942) return "SCE_BT_ERROR_CONNECT_START_NO_REG";
    if (errorCode == -2144402941) return "SCE_BT_ERROR_CONNECT_START_NOT_CONNECTABLE";
    if (errorCode == -2144402935) return "SCE_BT_ERROR_CONNECT_START_REG_FULL";
    if (errorCode == -2144402931) return "SCE_BT_ERROR_CONNECT_START_TOO_MANY";
    if (errorCode == -2144400631) return "SCE_BT_ERROR_COPYIN_FAILED";
    if (errorCode == -2144400630) return "SCE_BT_ERROR_COPYOUT_FAILED";
    if (errorCode == -2144402939) return "SCE_BT_ERROR_DISCONNECT_START_NOT_CONNECTED";
    if (errorCode == -2144394237) return "SCE_BT_ERROR_GATT_BUSY";
    if (errorCode == -2144394230) return "SCE_BT_ERROR_GATT_DISCONNECT";
    if (errorCode == -2144394228) return "SCE_BT_ERROR_GATT_ENTER";
    if (errorCode == -2144394235) return "SCE_BT_ERROR_GATT_INVALID_FLAGS";
    if (errorCode == -2144394236) return "SCE_BT_ERROR_GATT_INVALID_HANDLE";
    if (errorCode == -2144394239) return "SCE_BT_ERROR_GATT_INVALID_NO";
    if (errorCode == -2144394234) return "SCE_BT_ERROR_GATT_INVALID_SIZE";
    if (errorCode == -2144394238) return "SCE_BT_ERROR_GATT_NOT_CONNECTED";
    if (errorCode == -2144394233) return "SCE_BT_ERROR_GATT_NOT_LE";
    if (errorCode == -2144394231) return "SCE_BT_ERROR_GATT_NOT_YET";
    if (errorCode == -2144394227) return "SCE_BT_ERROR_GATT_TOO_BIG_BUFFER";
    if (errorCode == -2144394232) return "SCE_BT_ERROR_GATT_TOO_BIG_RECORD";
    if (errorCode == -2144394229) return "SCE_BT_ERROR_GATT_TSLEEP";
    if (errorCode == -2144395003) return "SCE_BT_ERROR_GET_DEBUG_INFO_INVALID_ARGUMENT";
    if (errorCode == -2144395007) return "SCE_BT_ERROR_GET_DEBUG_INFO_INVALID_REQUEST";
    if (errorCode == -2144395005) return "SCE_BT_ERROR_GET_DEBUG_INFO_INVALID_SIZE";
    if (errorCode == -2144395001) return "SCE_BT_ERROR_GET_DEBUG_INFO_INVALID_STATE";
    if (errorCode == -2144394999) return "SCE_BT_ERROR_GET_DEBUG_INFO_NOT_CONNECTED";
    if (errorCode == -2144390399) return "SCE_BT_ERROR_GET_JACK_STATUS_NOT_CONNECTED";
    if (errorCode == -2144400383) return "SCE_BT_ERROR_GET_NAME_NO_DEVICE";
    if (errorCode == -2144400638) return "SCE_BT_ERROR_HCI_TX_OVERFLOW";
    if (errorCode == -2144401150) return "SCE_BT_ERROR_HID_CLOSE_NO_L2C";
    if (errorCode == -2144401145) return "SCE_BT_ERROR_HID_INVALID_BUFFER_ADDRESS";
    if (errorCode == -2144401143) return "SCE_BT_ERROR_HID_INVALID_IDLE";
    if (errorCode == -2144401139) return "SCE_BT_ERROR_HID_INVALID_LENGTH";
    if (errorCode == -2144401144) return "SCE_BT_ERROR_HID_INVALID_PROTOCOL";
    if (errorCode == -2144401138) return "SCE_BT_ERROR_HID_INVALID_REPORT_ID";
    if (errorCode == -2144401146) return "SCE_BT_ERROR_HID_INVALID_REQUEST_TYPE";
    if (errorCode == -2144394748) return "SCE_BT_ERROR_HID_IS_LE";
    if (errorCode == -2144401147) return "SCE_BT_ERROR_HID_NO_CAP";
    if (errorCode == -2144401148) return "SCE_BT_ERROR_HID_NOT_CONNECTED";
    if (errorCode == -2144401140) return "SCE_BT_ERROR_HID_NOT_YET";
    if (errorCode == -2144401151) return "SCE_BT_ERROR_HID_OPEN_NO_L2C";
    if (errorCode == -2144401137) return "SCE_BT_ERROR_HID_OVERWRITE_REQ";
    if (errorCode == -2144399870) return "SCE_BT_ERROR_HID_RECV_INVALID_LENGTH";
    if (errorCode == -2144399871) return "SCE_BT_ERROR_HID_RECV_NOT_CONNECTED";
    if (errorCode == -2144401149) return "SCE_BT_ERROR_HID_SEND_NO_L2C";
    if (errorCode == -2144402943) return "SCE_BT_ERROR_INQUIRY_START_BUSY";
    if (errorCode == -2144389631) return "SCE_BT_ERROR_JEDI_SNIFF_NOT_CONNECTED";
    if (errorCode == -2144389630) return "SCE_BT_ERROR_JEDI_SNIFF_NOT_JEDI";
    if (errorCode == -2144389887) return "SCE_BT_ERROR_JEDI_VOLUME_GAIN_NOT_CONNECTED";
    if (errorCode == -2144400639) return "SCE_BT_ERROR_JUMBO_UNLOCK_NOT_OWNER";
    if (errorCode == -2144395262) return "SCE_BT_ERROR_KPROC_CREATE";
    if (errorCode == -2144392947) return "SCE_BT_ERROR_LE_CREATE_CONNECTION_BUSY";
    if (errorCode == -2144392949) return "SCE_BT_ERROR_LE_CREATE_CONNECTION_CONNECTED";
    if (errorCode == -2144392948) return "SCE_BT_ERROR_LE_CREATE_CONNECTION_FULL";
    if (errorCode == -2144392954) return "SCE_BT_ERROR_LE_CREATE_CONNECTION_INVALID_INTERVAL_MAX";
    if (errorCode == -2144392955) return "SCE_BT_ERROR_LE_CREATE_CONNECTION_INVALID_INTERVAL_MIN";
    if (errorCode == -2144392953) return "SCE_BT_ERROR_LE_CREATE_CONNECTION_INVALID_LATENCY";
    if (errorCode == -2144392956) return "SCE_BT_ERROR_LE_CREATE_CONNECTION_INVALID_OWN_ADDRESS_TYPE";
    if (errorCode == -2144392957) return "SCE_BT_ERROR_LE_CREATE_CONNECTION_INVALID_PEER_ADDRESS";
    if (errorCode == -2144392959) return "SCE_BT_ERROR_LE_CREATE_CONNECTION_INVALID_SCAN_INTERVAL";
    if (errorCode == -2144392958) return "SCE_BT_ERROR_LE_CREATE_CONNECTION_INVALID_SCAN_WINDOW";
    if (errorCode == -2144392952) return "SCE_BT_ERROR_LE_CREATE_CONNECTION_INVALID_TIMEOUT";
    if (errorCode == -2144392950) return "SCE_BT_ERROR_LE_CREATE_CONNECTION_REG_ERROR";
    if (errorCode == -2144392951) return "SCE_BT_ERROR_LE_CREATE_CONNECTION_REG_FULL";
    if (errorCode == -2144393215) return "SCE_BT_ERROR_LE_GET_ADVERTISING_NOT_FOUND";
    if (errorCode == -2144392447) return "SCE_BT_ERROR_LE_NOT_SUPPORTED";
    if (errorCode == -2144393721) return "SCE_BT_ERROR_LE_SET_ADVERTISING_INVALID_DIRECT_ADDRESS";
    if (errorCode == -2144393722) return "SCE_BT_ERROR_LE_SET_ADVERTISING_INVALID_DIRECT_ADDRESS_TYPE";
    if (errorCode == -2144393724) return "SCE_BT_ERROR_LE_SET_ADVERTISING_INVALID_INTERVAL_MAX";
    if (errorCode == -2144393725) return "SCE_BT_ERROR_LE_SET_ADVERTISING_INVALID_INTERVAL_MIN";
    if (errorCode == -2144393726) return "SCE_BT_ERROR_LE_SET_ADVERTISING_INVALID_LENGTH";
    if (errorCode == -2144393723) return "SCE_BT_ERROR_LE_SET_ADVERTISING_INVALID_OWN_ADDRESS_TYPE";
    if (errorCode == -2144393727) return "SCE_BT_ERROR_LE_SET_ADVERTISING_INVALID_REQ";
    if (errorCode == -2144393469) return "SCE_BT_ERROR_LE_SET_SCAN_INVALID_INTERVAL";
    if (errorCode == -2144393470) return "SCE_BT_ERROR_LE_SET_SCAN_INVALID_LENGTH";
    if (errorCode == -2144393467) return "SCE_BT_ERROR_LE_SET_SCAN_INVALID_OWN_ADDRESS_TYPE";
    if (errorCode == -2144393471) return "SCE_BT_ERROR_LE_SET_SCAN_INVALID_REQ";
    if (errorCode == -2144393468) return "SCE_BT_ERROR_LE_SET_SCAN_INVALID_WINDOW";
    if (errorCode == -2144390655) return "SCE_BT_ERROR_NOT_READY";
    if (errorCode == -2144390141) return "SCE_BT_ERROR_NOT_SUPPORTED_DEVICE";
    if (errorCode == -2144395263) return "SCE_BT_ERROR_NOTIMP";
    if (errorCode == -2144390909) return "SCE_BT_ERROR_PAIRING_OOB_CAN_NOT_DISCONNECT";
    if (errorCode == -2144390910) return "SCE_BT_ERROR_PAIRING_OOB_FULL";
    if (errorCode == -2144390908) return "SCE_BT_ERROR_PAIRING_OOB_INTERNAL_ERROR";
    if (errorCode == -2144390911) return "SCE_BT_ERROR_PAIRING_OOB_TIMEOUT";
    if (errorCode == -2144402938) return "SCE_BT_ERROR_PIN_INVALID_LENGTH";
    if (errorCode == -2144394751) return "SCE_BT_ERROR_PIN_IS_LE";
    if (errorCode == -2144403190) return "SCE_BT_ERROR_REG_CANNOT_LOAD";
    if (errorCode == -2144403189) return "SCE_BT_ERROR_REG_CANNOT_OPEN";
    if (errorCode == -2144403188) return "SCE_BT_ERROR_REG_CANNOT_READ";
    if (errorCode == -2144403187) return "SCE_BT_ERROR_REG_CANNOT_WRITE";
    if (errorCode == -2144403191) return "SCE_BT_ERROR_REG_DELETE_CONNECTING";
    if (errorCode == -2144403198) return "SCE_BT_ERROR_REG_DELETE_NO_ENTRY";
    if (errorCode == -2144403193) return "SCE_BT_ERROR_REG_GET_HID_DESC_NO_REG";
    if (errorCode == -2144403192) return "SCE_BT_ERROR_REG_GET_HID_DESC_TOO_SHORT";
    if (errorCode == -2144403199) return "SCE_BT_ERROR_REG_NOT_READY";
    if (errorCode == -2144403195) return "SCE_BT_ERROR_REG_SET_HID_DESC_BAD_ARG";
    if (errorCode == -2144403194) return "SCE_BT_ERROR_REG_SET_HID_DESC_NO_REG";
    if (errorCode == -2144403197) return "SCE_BT_ERROR_REG_UPDATE_CANNOT_SAVE";
    if (errorCode == -2144395255) return "SCE_BT_ERROR_SDIO_DISABLE_FUNCTION";
    if (errorCode == -2144395256) return "SCE_BT_ERROR_SDIO_ENABLE_FUNCTION";
    if (errorCode == -2144395261) return "SCE_BT_ERROR_SDIO_GET_FUNCTION";
    if (errorCode == -2144395258) return "SCE_BT_ERROR_SDIO_LOCK";
    if (errorCode == -2144395252) return "SCE_BT_ERROR_SDIO_READ_DIR";
    if (errorCode == -2144395250) return "SCE_BT_ERROR_SDIO_READ_FIX";
    if (errorCode == -2144395260) return "SCE_BT_ERROR_SDIO_REGISTER_INTR_HANDLER";
    if (errorCode == -2144395254) return "SCE_BT_ERROR_SDIO_SET_BLOCK_LEN";
    if (errorCode == -2144395253) return "SCE_BT_ERROR_SDIO_SET_BUS_SPEED";
    if (errorCode == -2144395257) return "SCE_BT_ERROR_SDIO_UNLOCK";
    if (errorCode == -2144395259) return "SCE_BT_ERROR_SDIO_UNREGISTER_INTR_HANDLER";
    if (errorCode == -2144395251) return "SCE_BT_ERROR_SDIO_WRITE_DIR";
    if (errorCode == -2144395249) return "SCE_BT_ERROR_SDIO_WRITE_FIX";
    if (errorCode == -2144402936) return "SCE_BT_ERROR_SDP_OPEN_NO_L2C";
    if (errorCode == -2144395002) return "SCE_BT_ERROR_SET_DEBUG_INFO_INVALID_ARGUMENT";
    if (errorCode == -2144395006) return "SCE_BT_ERROR_SET_DEBUG_INFO_INVALID_REQUEST";
    if (errorCode == -2144395004) return "SCE_BT_ERROR_SET_DEBUG_INFO_INVALID_SIZE";
    if (errorCode == -2144395000) return "SCE_BT_ERROR_SET_DEBUG_INFO_INVALID_STATE";
    if (errorCode == -2144394998) return "SCE_BT_ERROR_SET_DEBUG_INFO_NOT_CONNECTED";
    if (errorCode == -2144393979) return "SCE_BT_ERROR_SM_INVALID_CONFIRM_REPLY";
    if (errorCode == -2144393983) return "SCE_BT_ERROR_SM_INVALID_KEY_LENGTH";
    if (errorCode == -2144393981) return "SCE_BT_ERROR_SM_NO_REQ";
    if (errorCode == -2144393982) return "SCE_BT_ERROR_SM_NOT_DIGIT";
    if (errorCode == -2144393980) return "SCE_BT_ERROR_SM_NOT_NEEDED_PIN";
    if (errorCode == -2144400635) return "SCE_BT_ERROR_TIMER_CANCEL_BAD_ID";
    if (errorCode == -2144400634) return "SCE_BT_ERROR_TIMER_CANCEL_NOT_INITIALIZED";
    if (errorCode == -2144400632) return "SCE_BT_ERROR_TIMER_SET_NO_SPACE";
    if (errorCode == -2144400633) return "SCE_BT_ERROR_TIMER_SET_NOT_INITIALIZED";
    if (errorCode == -2144390143) return "SCE_BT_ERROR_TOO_MANY_CONNECTION";
    if (errorCode == -2144390142) return "SCE_BT_ERROR_TOO_MANY_HID";
    if (errorCode == -2144395248) return "SCE_BT_ERROR_TSLEEP";
    if (errorCode == -2144402937) return "SCE_BT_ERROR_USER_CONFIRM_NOT_CONNECTED";
    if (errorCode == -2144468991) return "SCE_CAMERA_ERROR_ALREADY_INIT";
    if (errorCode == -2144468989) return "SCE_CAMERA_ERROR_ALREADY_OPEN";
    if (errorCode == -2144468977) return "SCE_CAMERA_ERROR_ALREADY_READ";
    if (errorCode == -2144468987) return "SCE_CAMERA_ERROR_ALREADY_START";
    if (errorCode == -2144468981) return "SCE_CAMERA_ERROR_ATTRIBUTE_UNKNOWN";
    if (errorCode == -2144468983) return "SCE_CAMERA_ERROR_BAD_FRAMERATE";
    if (errorCode == -2144468980) return "SCE_CAMERA_ERROR_BUSY";
    if (errorCode == -2144468739) return "SCE_CAMERA_ERROR_COPYIN_FAILED";
    if (errorCode == -2144468740) return "SCE_CAMERA_ERROR_COPYOUT_FAILED";
    if (errorCode == -2144468737) return "SCE_CAMERA_ERROR_FATAL";
    if (errorCode == -2144468985) return "SCE_CAMERA_ERROR_FORMAT_UNKNOWN";
    if (errorCode == -2144468973) return "SCE_CAMERA_ERROR_INVALID_CONFIG";
    if (errorCode == -2144468738) return "SCE_CAMERA_ERROR_KPROC_CREATE";
    if (errorCode == -2144468972) return "SCE_CAMERA_ERROR_MAX_HANDLE";
    if (errorCode == -2144468741) return "SCE_CAMERA_ERROR_MAX_PROCESS";
    if (errorCode == -2144468976) return "SCE_CAMERA_ERROR_NOT_CONNECTED";
    if (errorCode == -2144468990) return "SCE_CAMERA_ERROR_NOT_INIT";
    if (errorCode == -2144468988) return "SCE_CAMERA_ERROR_NOT_OPEN";
    if (errorCode == -2144468986) return "SCE_CAMERA_ERROR_NOT_START";
    if (errorCode == -2144468975) return "SCE_CAMERA_ERROR_NOT_SUPPORTED";
    if (errorCode == -2144468992) return "SCE_CAMERA_ERROR_PARAM";
    if (errorCode == -2144468984) return "SCE_CAMERA_ERROR_RESOLUTION_UNKNOWN";
    if (errorCode == -2144468982) return "SCE_CAMERA_ERROR_TIMEOUT";
    if (errorCode == -2144468979) return "SCE_CAMERA_ERROR_UNKNOWN_CONFIG";
    if (errorCode == -2141454287) return "SCE_CES_ERROR_DST_BUFFER_END";
    if (errorCode == -2141454315) return "SCE_CES_ERROR_ILLEGAL_CODE";
    if (errorCode == -2141454288) return "SCE_CES_ERROR_INVALID_DST_BUFFER";
    if (errorCode == -2141454316) return "SCE_CES_ERROR_INVALID_ENCODE";
    if (errorCode == -2141454335) return "SCE_CES_ERROR_INVALID_PARAMETER";
    if (errorCode == -2141454332) return "SCE_CES_ERROR_INVALID_PROFILE";
    if (errorCode == -2141454320) return "SCE_CES_ERROR_INVALID_SRC_BUFFER";
    if (errorCode == -2141454300) return "SCE_CES_ERROR_OUT_OF_CODE_RANGE";
    if (errorCode == -2141454319) return "SCE_CES_ERROR_SRC_BUFFER_END";
    if (errorCode == -2141454304) return "SCE_CES_ERROR_UNASSIGNED_CODE";
    if (errorCode == -2133590008) return "SCE_COMPOSITOR_ERROR_ALLOCATE_APPID";
    if (errorCode == -2133590013) return "SCE_COMPOSITOR_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2133590015) return "SCE_COMPOSITOR_ERROR_CONTROL_FETCH_MISS";
    if (errorCode == -2133590009) return "SCE_COMPOSITOR_ERROR_EVFLAG_OPEN";
    if (errorCode == -2133590010) return "SCE_COMPOSITOR_ERROR_INVALID_PARAMETER";
    if (errorCode == -2133590011) return "SCE_COMPOSITOR_ERROR_MEMORY_ALLOCATION";
    if (errorCode == -2133589761) return "SCE_COMPOSITOR_ERROR_MISC";
    if (errorCode == -2133589999) return "SCE_COMPOSITOR_ERROR_MULTI_EVFLAG_OPEN";
    if (errorCode == -2133590000) return "SCE_COMPOSITOR_ERROR_NOT_INITIALIZED";
    if (errorCode == -2133590007) return "SCE_COMPOSITOR_ERROR_REQUEST_DENIED";
    if (errorCode == -2133590012) return "SCE_COMPOSITOR_ERROR_SERVER_COMUNICATION";
    if (errorCode == -2133590014) return "SCE_COMPOSITOR_ERROR_WAIT_TIMEOUT";
    if (errorCode == -2133327871) return "SCE_COMPOSITOR_SERVER_ERROR_DIRECT_MEMORY_ALLOCATION_SYSTEM";
    if (errorCode == -2133327870) return "SCE_COMPOSITOR_SERVER_ERROR_DIRECT_MEMORY_ALLOCATION_VIDEO";
    if (errorCode == -2133327864) return "SCE_COMPOSITOR_SERVER_ERROR_GNM_DRIVER_ADD_EQUEUE";
    if (errorCode == -2133327865) return "SCE_COMPOSITOR_SERVER_ERROR_GNM_DRIVER_CLOSE";
    if (errorCode == -2133327863) return "SCE_COMPOSITOR_SERVER_ERROR_GNM_DRIVER_GET_CLIENT_NUMBER";
    if (errorCode == -2133327866) return "SCE_COMPOSITOR_SERVER_ERROR_GNM_DRIVER_OPEN";
    if (errorCode == -2133327856) return "SCE_COMPOSITOR_SERVER_ERROR_LOAD_CAMERA";
    if (errorCode == -2133327868) return "SCE_COMPOSITOR_SERVER_ERROR_LOAD_GNM_DRIVER_SYS";
    if (errorCode == -2133327862) return "SCE_COMPOSITOR_SERVER_ERROR_LOAD_IPMI";
    if (errorCode == -2133327867) return "SCE_COMPOSITOR_SERVER_ERROR_LOAD_VIDEO_OUT";
    if (errorCode == -2133327869) return "SCE_COMPOSITOR_SERVER_ERROR_VIDEO_OUT_OPEN";
    if (errorCode == -2129133566) return "SCE_COREDUMP_ERROR_ALREADY_REGISTERED";
    if (errorCode == -2129133565) return "SCE_COREDUMP_ERROR_NOT_IN_COREDUMP_HANDLER";
    if (errorCode == -2129133567) return "SCE_COREDUMP_ERROR_NOT_REGISTERED";
    if (errorCode == -2129133568) return "SCE_COREDUMP_ERROR_PARAM";
    if (errorCode == -2136866809) return "SCE_CTRLP_ERROR_BUSY";
    if (errorCode == -2136866807) return "SCE_CTRLP_ERROR_COPYIN_FAILED";
    if (errorCode == -2136866808) return "SCE_CTRLP_ERROR_COPYOUT_FAILED";
    if (errorCode == -2136866812) return "SCE_CTRLP_ERROR_ILLEGAL_PARAMETER_VALUE";
    if (errorCode == -2136866815) return "SCE_CTRLP_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2136866810) return "SCE_CTRLP_ERROR_NOT_CTRLPDATA";
    if (errorCode == -2136866811) return "SCE_CTRLP_ERROR_NOT_STARTED";
    if (errorCode == -2136866814) return "SCE_CTRLP_ERROR_NOT_SUPPORTED";
    if (errorCode == -2136866813) return "SCE_CTRLP_ERROR_RESOURCE_SHORTAGE";
    if (errorCode == -2129330173) return "SCE_DBG_ERROR_BUFFER_FULL";
    if (errorCode == -2129330175) return "SCE_DBG_ERROR_INVALID_ARG";
    if (errorCode == -2129330174) return "SCE_DBG_ERROR_UNKNOWN";
    if (errorCode == -2133196796) return "SCE_DBG_KEYBOARD_ERROR_ALREADY_OPENED";
    if (errorCode == -2133196545) return "SCE_DBG_KEYBOARD_ERROR_FATAL";
    if (errorCode == -2133196799) return "SCE_DBG_KEYBOARD_ERROR_INVALID_ARG";
    if (errorCode == -2133196797) return "SCE_DBG_KEYBOARD_ERROR_INVALID_HANDLE";
    if (errorCode == -2133196798) return "SCE_DBG_KEYBOARD_ERROR_INVALID_PORT";
    if (errorCode == -2133196795) return "SCE_DBG_KEYBOARD_ERROR_NOT_INITIALIZED";
    if (errorCode == -2135163136) return "SCE_DEPTH_ERROR_CALIBRATION_IS_NECESSARY";
    if (errorCode == -2135228159) return "SCE_DEPTH_ERROR_COULD_NOT_CREATED_INSTANCE";
    if (errorCode == -2135162881) return "SCE_DEPTH_ERROR_FATAL";
    if (errorCode == -2135228400) return "SCE_DEPTH_ERROR_INVALID_ACCESS";
    if (errorCode == -2135228409) return "SCE_DEPTH_ERROR_INVALID_ASPECT";
    if (errorCode == -2135228404) return "SCE_DEPTH_ERROR_INVALID_CAMERA_TYPE";
    if (errorCode == -2135228398) return "SCE_DEPTH_ERROR_INVALID_DEPTH_MAP_GENERATOR_TYPE";
    if (errorCode == -2135228399) return "SCE_DEPTH_ERROR_INVALID_DEPTH_MAP_SIZE_TYPE";
    if (errorCode == -2135228414) return "SCE_DEPTH_ERROR_INVALID_EXECUTION_MODE";
    if (errorCode == -2135228411) return "SCE_DEPTH_ERROR_INVALID_HANDLE";
    if (errorCode == -2135228412) return "SCE_DEPTH_ERROR_INVALID_IMAGE_TYPE";
    if (errorCode == -2135228410) return "SCE_DEPTH_ERROR_INVALID_MEMORY_ALIGNMENT";
    if (errorCode == -2135228416) return "SCE_DEPTH_ERROR_INVALID_PARAMETER";
    if (errorCode == -2135228403) return "SCE_DEPTH_ERROR_INVALID_PARAMETER_RANGE";
    if (errorCode == -2135228413) return "SCE_DEPTH_ERROR_INVALID_PIXEL_FORMAT";
    if (errorCode == -2135228406) return "SCE_DEPTH_ERROR_INVALID_POINTER_ADDRESS";
    if (errorCode == -2135228402) return "SCE_DEPTH_ERROR_INVALID_PROCESSING_ORDER";
    if (errorCode == -2135228407) return "SCE_DEPTH_ERROR_INVALID_RESERVED_PARAMETER";
    if (errorCode == -2135228405) return "SCE_DEPTH_ERROR_INVALID_RESOLUTION_PARAMETER";
    if (errorCode == -2135228408) return "SCE_DEPTH_ERROR_INVALID_SIZE_PARAMETER";
    if (errorCode == -2135228401) return "SCE_DEPTH_ERROR_INVALID_TERMINATION";
    if (errorCode == -2135228415) return "SCE_DEPTH_ERROR_INVALID_UPDATE_MODE";
    if (errorCode == -2135228160) return "SCE_DEPTH_ERROR_NOT_ENOUGH_MEMORY";
    if (errorCode == -2137325435) return "SCE_DEVICE_SERVICE_ERROR_BUS_OVER_MAX";
    if (errorCode == -2137325436) return "SCE_DEVICE_SERVICE_ERROR_DEVICE_OVER_MAX";
    if (errorCode == -2137325437) return "SCE_DEVICE_SERVICE_ERROR_DRIVER_OVER_MAX";
    if (errorCode == -2137325313) return "SCE_DEVICE_SERVICE_ERROR_INTERNAL";
    if (errorCode == -2137325566) return "SCE_DEVICE_SERVICE_ERROR_INVALID_DEVICE_TYPE";
    if (errorCode == -2137325565) return "SCE_DEVICE_SERVICE_ERROR_INVALID_INDEX";
    if (errorCode == -2137325440) return "SCE_DEVICE_SERVICE_ERROR_INVALID_PARAM";
    if (errorCode == -2137325567) return "SCE_DEVICE_SERVICE_ERROR_INVALID_USER";
    if (errorCode == -2137325564) return "SCE_DEVICE_SERVICE_ERROR_MEMORY";
    if (errorCode == -2137325434) return "SCE_DEVICE_SERVICE_ERROR_PORT_OVER_MAX";
    if (errorCode == -2137325439) return "SCE_DEVICE_SERVICE_ERROR_USER_NOT_LOGIN";
    if (errorCode == -2137325438) return "SCE_DEVICE_SERVICE_ERROR_USER_OVER_MAX";
    if (errorCode == -2129657601) return "SCE_DISC_MAP_ERROR_FATAL";
    if (errorCode == -2129657853) return "SCE_DISC_MAP_ERROR_FILE_NOT_FOUND";
    if (errorCode == -2129657855) return "SCE_DISC_MAP_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2129657854) return "SCE_DISC_MAP_ERROR_LOCATION_NOT_MAPPED";
    if (errorCode == -2129657852) return "SCE_DISC_MAP_ERROR_NO_BITMAP_INFO";
    if (errorCode == -2144796672) return "SCE_DISPLAY_ERROR_INVALID_HEAD";
    if (errorCode == -2131099648) return "SCE_DTS_ENC_ERROR_INTERNAL_ERROR";
    if (errorCode == -2131099643) return "SCE_DTS_ENC_ERROR_INVALID_BIT_RATE";
    if (errorCode == -2131099647) return "SCE_DTS_ENC_ERROR_INVALID_HANDLE";
    if (errorCode == -2131099642) return "SCE_DTS_ENC_ERROR_INVALID_INPUT_FORMAT";
    if (errorCode == -2131099645) return "SCE_DTS_ENC_ERROR_INVALID_NUM_CHANNELS";
    if (errorCode == -2131099641) return "SCE_DTS_ENC_ERROR_INVALID_OUTPUT_FORMAT";
    if (errorCode == -2131099646) return "SCE_DTS_ENC_ERROR_INVALID_POINTER";
    if (errorCode == -2131099644) return "SCE_DTS_ENC_ERROR_INVALID_SAMPLE_RATE";
    if (errorCode == -2131099640) return "SCE_DTS_ENC_ERROR_NO_MORE_INSTANCES";
    if (errorCode == -2131099639) return "SCE_DTS_ENC_ERROR_NOT_IN_ENCODING";
    if (errorCode == -2131558400) return "SCE_ERROR_TABLE_ERROR_INVALID_POINTER";
    if (errorCode == -2141650942) return "SCE_FIBER_ERROR_ALIGNMENT";
    if (errorCode == -2141650940) return "SCE_FIBER_ERROR_INVALID";
    if (errorCode == -2141650943) return "SCE_FIBER_ERROR_NULL";
    if (errorCode == -2141650939) return "SCE_FIBER_ERROR_PERMISSION";
    if (errorCode == -2141650941) return "SCE_FIBER_ERROR_RANGE";
    if (errorCode == -2141650938) return "SCE_FIBER_ERROR_STATE";
    if (errorCode == -2138963949) return "SCE_FIOS_ERROR_ACCESS";
    if (errorCode == -2138963933) return "SCE_FIOS_ERROR_ALREADY_EXISTS";
    if (errorCode == -2138963955) return "SCE_FIOS_ERROR_BAD_ALIGNMENT";
    if (errorCode == -2138963937) return "SCE_FIOS_ERROR_BAD_ARCHIVE";
    if (errorCode == -2138963956) return "SCE_FIOS_ERROR_BAD_DH";
    if (errorCode == -2138963957) return "SCE_FIOS_ERROR_BAD_FH";
    if (errorCode == -2138963935) return "SCE_FIOS_ERROR_BAD_FLAGS";
    if (errorCode == -2138963940) return "SCE_FIOS_ERROR_BAD_INDEX";
    if (errorCode == -2138963959) return "SCE_FIOS_ERROR_BAD_IOVCNT";
    if (errorCode == -2138963961) return "SCE_FIOS_ERROR_BAD_OFFSET";
    if (errorCode == -2138963958) return "SCE_FIOS_ERROR_BAD_OP";
    if (errorCode == -2138963941) return "SCE_FIOS_ERROR_BAD_ORDER";
    if (errorCode == -2138963942) return "SCE_FIOS_ERROR_BAD_OVERLAY";
    if (errorCode == -2138963963) return "SCE_FIOS_ERROR_BAD_PATH";
    if (errorCode == -2138963962) return "SCE_FIOS_ERROR_BAD_PTR";
    if (errorCode == -2138963936) return "SCE_FIOS_ERROR_BAD_RESOLVE_TYPE";
    if (errorCode == -2138963960) return "SCE_FIOS_ERROR_BAD_SIZE";
    if (errorCode == -2138963938) return "SCE_FIOS_ERROR_BUSY";
    if (errorCode == -2138963950) return "SCE_FIOS_ERROR_CANCELLED";
    if (errorCode == -2138963964) return "SCE_FIOS_ERROR_CANT_ALLOCATE_CHUNK";
    if (errorCode == -2138963965) return "SCE_FIOS_ERROR_CANT_ALLOCATE_DH";
    if (errorCode == -2138963966) return "SCE_FIOS_ERROR_CANT_ALLOCATE_FH";
    if (errorCode == -2138963967) return "SCE_FIOS_ERROR_CANT_ALLOCATE_OP";
    if (errorCode == -2138963948) return "SCE_FIOS_ERROR_DECOMPRESSION";
    if (errorCode == -2138963952) return "SCE_FIOS_ERROR_EOF";
    if (errorCode == -2138963939) return "SCE_FIOS_ERROR_EVENT_NOT_HANDLED";
    if (errorCode == -2138963945) return "SCE_FIOS_ERROR_MEDIA_GONE";
    if (errorCode == -2138963953) return "SCE_FIOS_ERROR_NOT_A_DIRECTORY";
    if (errorCode == -2138963954) return "SCE_FIOS_ERROR_NOT_A_FILE";
    if (errorCode == -2138963944) return "SCE_FIOS_ERROR_PATH_TOO_LONG";
    if (errorCode == -2138963947) return "SCE_FIOS_ERROR_READ_ONLY";
    if (errorCode == -2138963951) return "SCE_FIOS_ERROR_TIMEOUT";
    if (errorCode == -2138963943) return "SCE_FIOS_ERROR_TOO_MANY_OVERLAYS";
    if (errorCode == -2138963968) return "SCE_FIOS_ERROR_UNIMPLEMENTED";
    if (errorCode == -2138963934) return "SCE_FIOS_ERROR_UNKNOWN";
    if (errorCode == -2138963946) return "SCE_FIOS_ERROR_WRITE_ONLY";
    if (errorCode == -2142896112) return "SCE_FONT_ERROR_ALLOCATION_FAILED";
    if (errorCode == -2142896094) return "SCE_FONT_ERROR_ALREADY_ATTACHED";
    if (errorCode == -2142896032) return "SCE_FONT_ERROR_ALREADY_BOUND_RENDERER";
    if (errorCode == -2142896093) return "SCE_FONT_ERROR_ALREADY_OPENED";
    if (errorCode == -2142896095) return "SCE_FONT_ERROR_ALREADY_SPECIFIED";
    if (errorCode == -2142896127) return "SCE_FONT_ERROR_FATAL";
    if (errorCode == -2142896073) return "SCE_FONT_ERROR_FONT_CLOSE_FAILED";
    if (errorCode == -2142896074) return "SCE_FONT_ERROR_FONT_OPEN_FAILED";
    if (errorCode == -2142896077) return "SCE_FONT_ERROR_FONT_OPEN_MAX";
    if (errorCode == -2142896111) return "SCE_FONT_ERROR_FS_OPEN_FAILED";
    if (errorCode == -2142896123) return "SCE_FONT_ERROR_INVALID_FONT_HANDLE";
    if (errorCode == -2142896122) return "SCE_FONT_ERROR_INVALID_GLYPH";
    if (errorCode == -2142896124) return "SCE_FONT_ERROR_INVALID_LIBRARY";
    if (errorCode == -2142896125) return "SCE_FONT_ERROR_INVALID_MEMORY";
    if (errorCode == -2142896126) return "SCE_FONT_ERROR_INVALID_PARAMETER";
    if (errorCode == -2142896121) return "SCE_FONT_ERROR_INVALID_RENDERER";
    if (errorCode == -2142896063) return "SCE_FONT_ERROR_NO_SUPPORT_CODE";
    if (errorCode == -2142896079) return "SCE_FONT_ERROR_NO_SUPPORT_FONTSET";
    if (errorCode == -2142896103) return "SCE_FONT_ERROR_NO_SUPPORT_FORMAT";
    if (errorCode == -2142896096) return "SCE_FONT_ERROR_NO_SUPPORT_FUNCTION";
    if (errorCode == -2142896062) return "SCE_FONT_ERROR_NO_SUPPORT_GLYPH";
    if (errorCode == -2142896104) return "SCE_FONT_ERROR_NO_SUPPORT_LIBRARY";
    if (errorCode == -2142896048) return "SCE_FONT_ERROR_NO_SUPPORT_SURFACE";
    if (errorCode == -2142896064) return "SCE_FONT_ERROR_NO_SUPPORT_TYPOGRAPHY";
    if (errorCode == -2142896091) return "SCE_FONT_ERROR_NOT_ATTACHED_CACHE_BUFFER";
    if (errorCode == -2142896031) return "SCE_FONT_ERROR_NOT_BOUND_RENDERER";
    if (errorCode == -2142896029) return "SCE_FONT_ERROR_RENDERER_ALLOCATION_FAILED";
    if (errorCode == -2142896027) return "SCE_FONT_ERROR_RENDERER_RENDER_FAILED";
    if (errorCode == -2142896040) return "SCE_FONT_ERROR_UNSET_PARAMETER";
    if (errorCode == -2142502894) return "SCE_GC_ERROR_HARDWARE_IS_BUSY";
    if (errorCode == -2142502901) return "SCE_GC_ERROR_INVALID_COMPUTE_QUEUE";
    if (errorCode == -2142502898) return "SCE_GC_ERROR_INVALID_GPU_ADDR";
    if (errorCode == -2142502900) return "SCE_GC_ERROR_INVALID_MAP_RING_SIZE";
    if (errorCode == -2142502899) return "SCE_GC_ERROR_INVALID_MAP_VQUEUEID";
    if (errorCode == -2142502897) return "SCE_GC_ERROR_INVALID_SUBMIT_COUNTS";
    if (errorCode == -2142502896) return "SCE_GC_ERROR_INVALID_SUBMIT_OPCODE";
    if (errorCode == -2142502895) return "SCE_GC_ERROR_INVALID_SUBMIT_SIZE";
    if (errorCode == -2142502908) return "SCE_GC_ERROR_INVALID_VMID";
    if (errorCode == -2142502904) return "SCE_GC_ERROR_MAP_VIDEO_MEMORY_ERROR";
    if (errorCode == -2142502907) return "SCE_GC_ERROR_NO_GPU_VA_SPACE";
    if (errorCode == -2142502906) return "SCE_GC_ERROR_NO_VM_MAP";
    if (errorCode == -2142502910) return "SCE_GC_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2142502905) return "SCE_GC_ERROR_OUT_OF_VIDEO_MEMORY";
    if (errorCode == -2142502909) return "SCE_GC_ERROR_OUT_OF_VMID";
    if (errorCode == -2142502903) return "SCE_GC_ERROR_OUT_OF_VMID0_VA_SPACE";
    if (errorCode == -2142502902) return "SCE_GC_ERROR_RESERVED_COMPUTE_QUEUE";
    if (errorCode == -2142502911) return "SCE_GC_ERROR_UNKNOWN";
    if (errorCode == -2142502893) return "SCE_GC_ERROR_UNKNOWN_PROCESS";
    if (errorCode == -2133766129) return "SCE_GNM_ERROR_CAPTURE_FAILED_INTERNAL";
    if (errorCode == -2133766144) return "SCE_GNM_ERROR_CAPTURE_FILE_IO";
    if (errorCode == -2133766142) return "SCE_GNM_ERROR_CAPTURE_NOTHING_TO_CAPTURE";
    if (errorCode == -2133766143) return "SCE_GNM_ERROR_CAPTURE_RAZOR_NOT_LOADED";
    if (errorCode == -2133757697) return "SCE_GNM_ERROR_COMPUTEQUEUE_INTERNAL";
    if (errorCode == -2133757952) return "SCE_GNM_ERROR_COMPUTEQUEUE_INVALID_PIPE_ID";
    if (errorCode == -2133757951) return "SCE_GNM_ERROR_COMPUTEQUEUE_INVALID_QUEUE_ID";
    if (errorCode == -2133757948) return "SCE_GNM_ERROR_COMPUTEQUEUE_INVALID_READ_PTR_ADDR";
    if (errorCode == -2133757949) return "SCE_GNM_ERROR_COMPUTEQUEUE_INVALID_RING_BASE_ADDR";
    if (errorCode == -2133757950) return "SCE_GNM_ERROR_COMPUTEQUEUE_INVALID_RING_SIZE";
    if (errorCode == -2133782400) return "SCE_GNM_ERROR_SUBMISSION_AND_FLIP_FAILED_INVALID_COMMAND_BUFFER";
    if (errorCode == -2133782399) return "SCE_GNM_ERROR_SUBMISSION_AND_FLIP_FAILED_INVALID_QUEUE_FULL";
    if (errorCode == -2133782398) return "SCE_GNM_ERROR_SUBMISSION_AND_FLIP_FAILED_REQUEST_FAILED";
    if (errorCode == -2133782273) return "SCE_GNM_ERROR_SUBMISSION_FAILED_INTERNAL_ERROR";
    if (errorCode == -2133782528) return "SCE_GNM_ERROR_SUBMISSION_FAILED_INVALID_ARGUMENT";
    if (errorCode == -2133782527) return "SCE_GNM_ERROR_SUBMISSION_NOT_ENOUGH_RESOURCES";
    if (errorCode == -2133774321) return "SCE_GNM_ERROR_VALIDATION_BORDER_COLOR_TABLE";
    if (errorCode == -2133774319) return "SCE_GNM_ERROR_VALIDATION_DISPATCH_DRAW";
    if (errorCode == -2133770242) return "SCE_GNM_ERROR_VALIDATION_FAILED_INTERNAL_ERROR";
    if (errorCode == -2133774323) return "SCE_GNM_ERROR_VALIDATION_GS_MODE";
    if (errorCode == -2133774330) return "SCE_GNM_ERROR_VALIDATION_INDEX_BUFFER";
    if (errorCode == -2133774326) return "SCE_GNM_ERROR_VALIDATION_INDEX_SIZE";
    if (errorCode == -2133774325) return "SCE_GNM_ERROR_VALIDATION_INLINE_DRAW_SIZE";
    if (errorCode == -2133770241) return "SCE_GNM_ERROR_VALIDATION_NOT_ENABLED";
    if (errorCode == -2133774324) return "SCE_GNM_ERROR_VALIDATION_NUM_INPUT_PATCHES";
    if (errorCode == -2133774327) return "SCE_GNM_ERROR_VALIDATION_PRIMITIVE_TYPE";
    if (errorCode == -2133774333) return "SCE_GNM_ERROR_VALIDATION_RESOURCE";
    if (errorCode == -2133774328) return "SCE_GNM_ERROR_VALIDATION_SCRATCH_RING";
    if (errorCode == -2133774322) return "SCE_GNM_ERROR_VALIDATION_SHADER_ADDRESS";
    if (errorCode == -2133774320) return "SCE_GNM_ERROR_VALIDATION_SSHARP";
    if (errorCode == -2133774332) return "SCE_GNM_ERROR_VALIDATION_TABLE_MEMORY";
    if (errorCode == -2133774329) return "SCE_GNM_ERROR_VALIDATION_TESS_FACTOR_BUFFER";
    if (errorCode == -2133774334) return "SCE_GNM_ERROR_VALIDATION_TSHARP";
    if (errorCode == -2133774335) return "SCE_GNM_ERROR_VALIDATION_VSHARP";
    if (errorCode == -2133778417) return "SCE_GNM_ERROR_VALIDATION_WARNING_PS_AND_MRT_FORMAT";
    if (errorCode == -2133778431) return "SCE_GNM_ERROR_VALIDATION_WARNING_RWBUFFER_ROTYPE";
    if (errorCode == -2133774331) return "SCE_GNM_ERROR_VALIDATION_WRITE_EVENT_OP";
    if (errorCode == -2133716992) return "SCE_GNMX_ERROR_DISPATCH_DRAW_INVALID_ARGUMENTS";
    if (errorCode == -2133716990) return "SCE_GNMX_ERROR_DISPATCH_DRAW_OUT_OF_SPACE_FOR_BLOCK_OFFSET";
    if (errorCode == -2133716991) return "SCE_GNMX_ERROR_DISPATCH_DRAW_OUT_OF_SPACE_FOR_INDEX_DATA";
    if (errorCode == -2133716989) return "SCE_GNMX_ERROR_DISPATCH_DRAW_UNREPRESENTABLE_OFFSET";
    if (errorCode == -2133655551) return "SCE_GPU_ADDRESS_ERROR_STATUS_INTERNAL_TILING";
    if (errorCode == -2133655552) return "SCE_GPU_ADDRESS_ERROR_STATUS_INVALID_ARGUMENT";
    if (errorCode == -2128936959) return "SCE_HEAD_TRACKER_ERROR_ALREADY_INIT";
    if (errorCode == -2128936944) return "SCE_HEAD_TRACKER_ERROR_FACE_RECOG_DICT_NO_EXIST";
    if (errorCode == -2128936705) return "SCE_HEAD_TRACKER_ERROR_FATAL";
    if (errorCode == -2128936951) return "SCE_HEAD_TRACKER_ERROR_FLEXIBLE_MEMORY_NOT_ENOUGH";
    if (errorCode == -2128936955) return "SCE_HEAD_TRACKER_ERROR_NOMEM";
    if (errorCode == -2128936957) return "SCE_HEAD_TRACKER_ERROR_NOT_CAMERA_CONNECTED";
    if (errorCode == -2128936958) return "SCE_HEAD_TRACKER_ERROR_NOT_INIT";
    if (errorCode == -2128936956) return "SCE_HEAD_TRACKER_ERROR_NOT_SUPPORTED";
    if (errorCode == -2128936954) return "SCE_HEAD_TRACKER_ERROR_OTHER_PROCESS_RUNNING";
    if (errorCode == -2128936960) return "SCE_HEAD_TRACKER_ERROR_PARAM";
    if (errorCode == -2128936953) return "SCE_HEAD_TRACKER_ERROR_SYSTEM_SHARED_MEMORY_NOT_ENOUGH";
    if (errorCode == -2128936943) return "SCE_HEAD_TRACKER_ERROR_TRACKING_INSTANCE_NUMBER_FULL";
    if (errorCode == -2128936942) return "SCE_HEAD_TRACKER_ERROR_TRACKING_INSTANCE_NUMBER_ZERO";
    if (errorCode == -2128936941) return "SCE_HEAD_TRACKER_ERROR_UNEXPECTED_TRACKING_INSTANCE";
    if (errorCode == -2128936952) return "SCE_HEAD_TRACKER_ERROR_VIDEO_SHARED_MEMORY_NOT_ENOUGH";
    if (errorCode == -2143612927) return "SCE_HID_CONTROL_ERROR_INVALID_ARG";
    if (errorCode == -2143612926) return "SCE_HID_CONTROL_ERROR_NOT_INITIALIZED";
    if (errorCode == -2143617016) return "SCE_HID_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2143616767) return "SCE_HID_ERROR_ALREADY_LOGGED_OUT";
    if (errorCode == -2143617017) return "SCE_HID_ERROR_COPYIN_FAILED";
    if (errorCode == -2143617018) return "SCE_HID_ERROR_COPYOUT_FAILED";
    if (errorCode == -2143617013) return "SCE_HID_ERROR_DEVICE_BUSY";
    if (errorCode == -2143617021) return "SCE_HID_ERROR_DEVICE_NOT_FOUND";
    if (errorCode == -2143617012) return "SCE_HID_ERROR_ENTRY_NOT_FOUND";
    if (errorCode == -2143617023) return "SCE_HID_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2143617010) return "SCE_HID_ERROR_INVALID_DATA_FORMAT";
    if (errorCode == -2143617022) return "SCE_HID_ERROR_INVALID_HANDLE";
    if (errorCode == -2143617019) return "SCE_HID_ERROR_KPROC_CREATE";
    if (errorCode == -2143617015) return "SCE_HID_ERROR_NOT_INITIALIZED";
    if (errorCode == -2143617020) return "SCE_HID_ERROR_NOT_SUPPORTED";
    if (errorCode == -2143617011) return "SCE_HID_ERROR_REGISTRY_INIT_FAILED";
    if (errorCode == -2143617009) return "SCE_HID_ERROR_REQUEST_TIMEOUT";
    if (errorCode == -2143617014) return "SCE_HID_ERROR_RESOURCE_SHORTAGE";
    if (errorCode == -2142760958) return "SCE_HMAC_ERROR_INVALID_DIGEST_SIZE";
    if (errorCode == -2142760960) return "SCE_HMAC_ERROR_INVALID_POINTER";
    if (errorCode == -2140864494) return "SCE_JPEG_DEC_ERROR_DECODE_ERROR";
    if (errorCode == -2140864480) return "SCE_JPEG_DEC_ERROR_FATAL";
    if (errorCode == -2140864511) return "SCE_JPEG_DEC_ERROR_INVALID_ADDR";
    if (errorCode == -2140864507) return "SCE_JPEG_DEC_ERROR_INVALID_COEF_MEMORY";
    if (errorCode == -2140864496) return "SCE_JPEG_DEC_ERROR_INVALID_DATA";
    if (errorCode == -2140864508) return "SCE_JPEG_DEC_ERROR_INVALID_HANDLE";
    if (errorCode == -2140864509) return "SCE_JPEG_DEC_ERROR_INVALID_PARAM";
    if (errorCode == -2140864510) return "SCE_JPEG_DEC_ERROR_INVALID_SIZE";
    if (errorCode == -2140864506) return "SCE_JPEG_DEC_ERROR_INVALID_WORK_MEMORY";
    if (errorCode == -2140864495) return "SCE_JPEG_DEC_ERROR_UNSUPPORT_DATA";
    if (errorCode == -2140864240) return "SCE_JPEG_ENC_ERROR_DATA_OVERFLOW";
    if (errorCode == -2140864224) return "SCE_JPEG_ENC_ERROR_FATAL";
    if (errorCode == -2140864255) return "SCE_JPEG_ENC_ERROR_INVALID_ADDR";
    if (errorCode == -2140864252) return "SCE_JPEG_ENC_ERROR_INVALID_HANDLE";
    if (errorCode == -2140864253) return "SCE_JPEG_ENC_ERROR_INVALID_PARAM";
    if (errorCode == -2140864254) return "SCE_JPEG_ENC_ERROR_INVALID_SIZE";
    if (errorCode == -2138799855) return "SCE_JSON_ERROR_MULTIPLEINIT";
    if (errorCode == -2138799867) return "SCE_JSON_ERROR_NOBUF";
    if (errorCode == -2138799869) return "SCE_JSON_ERROR_NOFILE";
    if (errorCode == -2138799856) return "SCE_JSON_ERROR_NOINIT";
    if (errorCode == -2138799870) return "SCE_JSON_ERROR_NOMEM";
    if (errorCode == -2138799868) return "SCE_JSON_ERROR_NOROOT";
    if (errorCode == -2138799871) return "SCE_JSON_ERROR_PARSE_INVALID_CHAR";
    if (errorCode == -2147352569) return "SCE_KERNEL_ERROR_E2BIG";
    if (errorCode == -2147352563) return "SCE_KERNEL_ERROR_EACCES";
    if (errorCode == -2147352528) return "SCE_KERNEL_ERROR_EADDRINUSE";
    if (errorCode == -2147352527) return "SCE_KERNEL_ERROR_EADDRNOTAVAIL";
    if (errorCode == -2147352529) return "SCE_KERNEL_ERROR_EAFNOSUPPORT";
    if (errorCode == -2147352541) return "SCE_KERNEL_ERROR_EAGAIN";
    if (errorCode == -2147352539) return "SCE_KERNEL_ERROR_EALREADY";
    if (errorCode == -2147352496) return "SCE_KERNEL_ERROR_EAUTH";
    if (errorCode == -2147352567) return "SCE_KERNEL_ERROR_EBADF";
    if (errorCode == -2147352487) return "SCE_KERNEL_ERROR_EBADMSG";
    if (errorCode == -2147352504) return "SCE_KERNEL_ERROR_EBADRPC";
    if (errorCode == -2147352560) return "SCE_KERNEL_ERROR_EBUSY";
    if (errorCode == -2147352491) return "SCE_KERNEL_ERROR_ECANCELED";
    if (errorCode == -2147352482) return "SCE_KERNEL_ERROR_ECAPMODE";
    if (errorCode == -2147352566) return "SCE_KERNEL_ERROR_ECHILD";
    if (errorCode == -2147352523) return "SCE_KERNEL_ERROR_ECONNABORTED";
    if (errorCode == -2147352515) return "SCE_KERNEL_ERROR_ECONNREFUSED";
    if (errorCode == -2147352522) return "SCE_KERNEL_ERROR_ECONNRESET";
    if (errorCode == -2147352565) return "SCE_KERNEL_ERROR_EDEADLK";
    if (errorCode == -2147352537) return "SCE_KERNEL_ERROR_EDESTADDRREQ";
    if (errorCode == -2147352543) return "SCE_KERNEL_ERROR_EDOM";
    if (errorCode == -2147352488) return "SCE_KERNEL_ERROR_EDOOFUS";
    if (errorCode == -2147352507) return "SCE_KERNEL_ERROR_EDQUOT";
    if (errorCode == -2147352559) return "SCE_KERNEL_ERROR_EEXIST";
    if (errorCode == -2147352562) return "SCE_KERNEL_ERROR_EFAULT";
    if (errorCode == -2147352549) return "SCE_KERNEL_ERROR_EFBIG";
    if (errorCode == -2147352497) return "SCE_KERNEL_ERROR_EFTYPE";
    if (errorCode == -2147352512) return "SCE_KERNEL_ERROR_EHOSTDOWN";
    if (errorCode == -2147352511) return "SCE_KERNEL_ERROR_EHOSTUNREACH";
    if (errorCode == -2147352480) return "SCE_KERNEL_ERROR_EICV";
    if (errorCode == -2147352494) return "SCE_KERNEL_ERROR_EIDRM";
    if (errorCode == -2147352490) return "SCE_KERNEL_ERROR_EILSEQ";
    if (errorCode == -2147352540) return "SCE_KERNEL_ERROR_EINPROGRESS";
    if (errorCode == -2147352572) return "SCE_KERNEL_ERROR_EINTR";
    if (errorCode == -2147352554) return "SCE_KERNEL_ERROR_EINVAL";
    if (errorCode == -2147352571) return "SCE_KERNEL_ERROR_EIO";
    if (errorCode == -2147352520) return "SCE_KERNEL_ERROR_EISCONN";
    if (errorCode == -2147352555) return "SCE_KERNEL_ERROR_EISDIR";
    if (errorCode == -2147352514) return "SCE_KERNEL_ERROR_ELOOP";
    if (errorCode == -2147352552) return "SCE_KERNEL_ERROR_EMFILE";
    if (errorCode == -2147352545) return "SCE_KERNEL_ERROR_EMLINK";
    if (errorCode == -2147352536) return "SCE_KERNEL_ERROR_EMSGSIZE";
    if (errorCode == -2147352486) return "SCE_KERNEL_ERROR_EMULTIHOP";
    if (errorCode == -2147352513) return "SCE_KERNEL_ERROR_ENAMETOOLONG";
    if (errorCode == -2147352495) return "SCE_KERNEL_ERROR_ENEEDAUTH";
    if (errorCode == -2147352526) return "SCE_KERNEL_ERROR_ENETDOWN";
    if (errorCode == -2147352524) return "SCE_KERNEL_ERROR_ENETRESET";
    if (errorCode == -2147352525) return "SCE_KERNEL_ERROR_ENETUNREACH";
    if (errorCode == -2147352553) return "SCE_KERNEL_ERROR_ENFILE";
    if (errorCode == -2147352489) return "SCE_KERNEL_ERROR_ENOATTR";
    if (errorCode == -2147352481) return "SCE_KERNEL_ERROR_ENOBLK";
    if (errorCode == -2147352521) return "SCE_KERNEL_ERROR_ENOBUFS";
    if (errorCode == -2147352557) return "SCE_KERNEL_ERROR_ENODEV";
    if (errorCode == -2147352574) return "SCE_KERNEL_ERROR_ENOENT";
    if (errorCode == -2147352568) return "SCE_KERNEL_ERROR_ENOEXEC";
    if (errorCode == -2147352499) return "SCE_KERNEL_ERROR_ENOLCK";
    if (errorCode == -2147352485) return "SCE_KERNEL_ERROR_ENOLINK";
    if (errorCode == -2147352564) return "SCE_KERNEL_ERROR_ENOMEM";
    if (errorCode == -2147352493) return "SCE_KERNEL_ERROR_ENOMSG";
    if (errorCode == -2147352479) return "SCE_KERNEL_ERROR_ENOPLAYGOENT";
    if (errorCode == -2147352534) return "SCE_KERNEL_ERROR_ENOPROTOOPT";
    if (errorCode == -2147352548) return "SCE_KERNEL_ERROR_ENOSPC";
    if (errorCode == -2147352498) return "SCE_KERNEL_ERROR_ENOSYS";
    if (errorCode == -2147352561) return "SCE_KERNEL_ERROR_ENOTBLK";
    if (errorCode == -2147352483) return "SCE_KERNEL_ERROR_ENOTCAPABLE";
    if (errorCode == -2147352519) return "SCE_KERNEL_ERROR_ENOTCONN";
    if (errorCode == -2147352556) return "SCE_KERNEL_ERROR_ENOTDIR";
    if (errorCode == -2147352510) return "SCE_KERNEL_ERROR_ENOTEMPTY";
    if (errorCode == -2147352538) return "SCE_KERNEL_ERROR_ENOTSOCK";
    if (errorCode == -2147352551) return "SCE_KERNEL_ERROR_ENOTTY";
    if (errorCode == -2147352570) return "SCE_KERNEL_ERROR_ENXIO";
    if (errorCode == -2147352531) return "SCE_KERNEL_ERROR_EOPNOTSUPP";
    if (errorCode == -2147352492) return "SCE_KERNEL_ERROR_EOVERFLOW";
    if (errorCode == -2147352575) return "SCE_KERNEL_ERROR_EPERM";
    if (errorCode == -2147352530) return "SCE_KERNEL_ERROR_EPFNOSUPPORT";
    if (errorCode == -2147352544) return "SCE_KERNEL_ERROR_EPIPE";
    if (errorCode == -2147352509) return "SCE_KERNEL_ERROR_EPROCLIM";
    if (errorCode == -2147352500) return "SCE_KERNEL_ERROR_EPROCUNAVAIL";
    if (errorCode == -2147352501) return "SCE_KERNEL_ERROR_EPROGMISMATCH";
    if (errorCode == -2147352502) return "SCE_KERNEL_ERROR_EPROGUNAVAIL";
    if (errorCode == -2147352484) return "SCE_KERNEL_ERROR_EPROTO";
    if (errorCode == -2147352533) return "SCE_KERNEL_ERROR_EPROTONOSUPPORT";
    if (errorCode == -2147352535) return "SCE_KERNEL_ERROR_EPROTOTYPE";
    if (errorCode == -2147352542) return "SCE_KERNEL_ERROR_ERANGE";
    if (errorCode == -2147352505) return "SCE_KERNEL_ERROR_EREMOTE";
    if (errorCode == -2147352546) return "SCE_KERNEL_ERROR_EROFS";
    if (errorCode == -2147352503) return "SCE_KERNEL_ERROR_ERPCMISMATCH";
    if (errorCode == -2147352518) return "SCE_KERNEL_ERROR_ESHUTDOWN";
    if (errorCode == -2147352532) return "SCE_KERNEL_ERROR_ESOCKTNOSUPPORT";
    if (errorCode == -2147352547) return "SCE_KERNEL_ERROR_ESPIPE";
    if (errorCode == -2147352573) return "SCE_KERNEL_ERROR_ESRCH";
    if (errorCode == -2147352506) return "SCE_KERNEL_ERROR_ESTALE";
    if (errorCode == -2147352516) return "SCE_KERNEL_ERROR_ETIMEDOUT";
    if (errorCode == -2147352517) return "SCE_KERNEL_ERROR_ETOOMANYREFS";
    if (errorCode == -2147352550) return "SCE_KERNEL_ERROR_ETXTBSY";
    if (errorCode == -2147352508) return "SCE_KERNEL_ERROR_EUSERS";
    if (errorCode == -2147352558) return "SCE_KERNEL_ERROR_EXDEV";
    if (errorCode == -2136408064) return "SCE_M4AAC_ENC_ERROR_INTERNAL_ERROR";
    if (errorCode == -2136408059) return "SCE_M4AAC_ENC_ERROR_INVALID_BIT_RATE";
    if (errorCode == -2136408061) return "SCE_M4AAC_ENC_ERROR_INVALID_CHANNEL";
    if (errorCode == -2136408063) return "SCE_M4AAC_ENC_ERROR_INVALID_HANDLE";
    if (errorCode == -2136408058) return "SCE_M4AAC_ENC_ERROR_INVALID_INPUT_FORMAT";
    if (errorCode == -2136408056) return "SCE_M4AAC_ENC_ERROR_INVALID_INPUT_SIZE";
    if (errorCode == -2136408057) return "SCE_M4AAC_ENC_ERROR_INVALID_OUTPUT_FORMAT";
    if (errorCode == -2136408055) return "SCE_M4AAC_ENC_ERROR_INVALID_PREVIOUS_INPUT_SIZE";
    if (errorCode == -2136408062) return "SCE_M4AAC_ENC_ERROR_INVALID_PTR";
    if (errorCode == -2136408060) return "SCE_M4AAC_ENC_ERROR_INVALID_SAMPLING_RATE";
    if (errorCode == -2137325433) return "SCE_MBUS_ERROR_CLIENT_OVER_MAX";
    if (errorCode == -2137325432) return "SCE_MBUS_ERROR_EVENT_RECEIVE_CANCELED";
    if (errorCode == -2137325562) return "SCE_MBUS_ERROR_INVALID_BUS_ID";
    if (errorCode == -2137325563) return "SCE_MBUS_ERROR_INVALID_DEVICE_ID";
    if (errorCode == -2137325561) return "SCE_MBUS_ERROR_INVALID_HANDLE";
    if (errorCode == -2137325559) return "SCE_MBUS_ERROR_INVALID_REQUESTER";
    if (errorCode == -2137325560) return "SCE_MBUS_ERROR_INVALID_SYSTEM_ID";
    if (errorCode == -2142764800) return "SCE_MD5_ERROR_INVALID_POINTER";
    if (errorCode == -2142764799) return "SCE_MD5_ERROR_INVALID_STATE";
    if (errorCode == -2142764798) return "SCE_MD5_ERROR_UNINITIALIZED_CONTEXT";
    if (errorCode == -2132869116) return "SCE_MOUSE_ERROR_ALREADY_OPENED";
    if (errorCode == -2132868865) return "SCE_MOUSE_ERROR_FATAL";
    if (errorCode == -2132869119) return "SCE_MOUSE_ERROR_INVALID_ARG";
    if (errorCode == -2132869117) return "SCE_MOUSE_ERROR_INVALID_HANDLE";
    if (errorCode == -2132869118) return "SCE_MOUSE_ERROR_INVALID_PORT";
    if (errorCode == -2132869115) return "SCE_MOUSE_ERROR_NOT_INITIALIZED";
    if (errorCode == -2131886078) return "SCE_MOVE_ERROR_ALREADY_INIT";
    if (errorCode == -2131886073) return "SCE_MOVE_ERROR_ALREADY_OPENED";
    if (errorCode == -2131885825) return "SCE_MOVE_ERROR_FATAL";
    if (errorCode == -2131886077) return "SCE_MOVE_ERROR_INVALID_ARG";
    if (errorCode == -2131886076) return "SCE_MOVE_ERROR_INVALID_HANDLE";
    if (errorCode == -2131886074) return "SCE_MOVE_ERROR_INVALID_PORT";
    if (errorCode == -2131886075) return "SCE_MOVE_ERROR_MAX_CONTROLLERS_EXCEEDED";
    if (errorCode == -2131886079) return "SCE_MOVE_ERROR_NOT_INIT";
    if (errorCode == -2131820542) return "SCE_MOVE_TRACKER_ERROR_ALREADY_INIT";
    if (errorCode == -2131820541) return "SCE_MOVE_TRACKER_ERROR_INVALID_ARG";
    if (errorCode == -2131820540) return "SCE_MOVE_TRACKER_ERROR_INVALID_HANDLE";
    if (errorCode == -2131820543) return "SCE_MOVE_TRACKER_ERROR_NOT_INIT";
    if (errorCode == -2142699264) return "SCE_MT19937_ERROR_INVALID_POINTER";
    if (errorCode == -2143213170) return "SCE_NET_APCTL_ERROR_AP_DISABLED";
    if (errorCode == -2143213163) return "SCE_NET_APCTL_ERROR_CALLBACK_MAX";
    if (errorCode == -2143213161) return "SCE_NET_APCTL_ERROR_ID_NOT_FOUND";
    if (errorCode == -2143213167) return "SCE_NET_APCTL_ERROR_INVALID_ADDR";
    if (errorCode == -2143213162) return "SCE_NET_APCTL_ERROR_INVALID_ID";
    if (errorCode == -2143213160) return "SCE_NET_APCTL_ERROR_INVALID_SIZE";
    if (errorCode == -2143213168) return "SCE_NET_APCTL_ERROR_INVALID_TYPE";
    if (errorCode == -2143213164) return "SCE_NET_APCTL_ERROR_NOT_INITIALIZED";
    if (errorCode == -2143213169) return "SCE_NET_APCTL_ERROR_NOT_STARTED";
    if (errorCode == -2143213165) return "SCE_NET_APCTL_ERROR_STOP_REQ";
    if (errorCode == -2143213178) return "SCE_NET_APCTL_ERROR_VSH_BUSY";
    if (errorCode == -2143213180) return "SCE_NET_APCTL_ERROR_VSH_CALLBACK_MAX";
    if (errorCode == -2143213166) return "SCE_NET_APCTL_ERROR_VSH_CHANNEL_CONFLICT";
    if (errorCode == -2143213181) return "SCE_NET_APCTL_ERROR_VSH_INVALID_ADDR";
    if (errorCode == -2143213179) return "SCE_NET_APCTL_ERROR_VSH_INVALID_ID";
    if (errorCode == -2143213174) return "SCE_NET_APCTL_ERROR_VSH_INVALID_IPADDR";
    if (errorCode == -2143213171) return "SCE_NET_APCTL_ERROR_VSH_INVALID_SIZE";
    if (errorCode == -2143213173) return "SCE_NET_APCTL_ERROR_VSH_INVALID_SSID";
    if (errorCode == -2143213172) return "SCE_NET_APCTL_ERROR_VSH_INVALID_WIFI_SECURITY_KEY";
    if (errorCode == -2143213176) return "SCE_NET_APCTL_ERROR_VSH_INVALID_WIFI_SECURITY_KEY_LEN";
    if (errorCode == -2143213183) return "SCE_NET_APCTL_ERROR_VSH_NOT_INITIALIZED";
    if (errorCode == -2143213182) return "SCE_NET_APCTL_ERROR_VSH_NOT_TERMINATED";
    if (errorCode == -2143213175) return "SCE_NET_APCTL_ERROR_VSH_UNKNOWN_IP_CONFIG";
    if (errorCode == -2143213177) return "SCE_NET_APCTL_ERROR_VSH_UNKNOWN_WIFI_SECURITY";
    if (errorCode == -2143215357) return "SCE_NET_CTL_ERROR_CALLBACK_MAX";
    if (errorCode == -2143215346) return "SCE_NET_CTL_ERROR_DISCONNECT_REQ";
    if (errorCode == -2143215339) return "SCE_NET_CTL_ERROR_ETHERNET_PLUGOUT";
    if (errorCode == -2143215356) return "SCE_NET_CTL_ERROR_ID_NOT_FOUND";
    if (errorCode == -2143215353) return "SCE_NET_CTL_ERROR_INVALID_ADDR";
    if (errorCode == -2143215354) return "SCE_NET_CTL_ERROR_INVALID_CODE";
    if (errorCode == -2143215355) return "SCE_NET_CTL_ERROR_INVALID_ID";
    if (errorCode == -2143215343) return "SCE_NET_CTL_ERROR_INVALID_SIZE";
    if (errorCode == -2143215345) return "SCE_NET_CTL_ERROR_INVALID_TYPE";
    if (errorCode == -2143215229) return "SCE_NET_CTL_ERROR_IPCINT_OUT_OF_MEMORY";
    if (errorCode == -2143215347) return "SCE_NET_CTL_ERROR_NETWORK_DISABLED";
    if (errorCode == -2143215351) return "SCE_NET_CTL_ERROR_NOT_AVAIL";
    if (errorCode == -2143215352) return "SCE_NET_CTL_ERROR_NOT_CONNECTED";
    if (errorCode == -2143215359) return "SCE_NET_CTL_ERROR_NOT_INITIALIZED";
    if (errorCode == -2143215337) return "SCE_NET_CTL_ERROR_WIFI_BEACON_LOST";
    if (errorCode == -2143215338) return "SCE_NET_CTL_ERROR_WIFI_DEAUTHED";
    if (errorCode == -2143218929) return "SCE_NET_ERROR_CONFIG_ADD_ARP";
    if (errorCode == -2143218928) return "SCE_NET_ERROR_CONFIG_DEL_ARP";
    if (errorCode == -2143218936) return "SCE_NET_ERROR_CONFIG_DEL_IFADDR";
    if (errorCode == -2143218941) return "SCE_NET_ERROR_CONFIG_DOWN_IF";
    if (errorCode == -2143218926) return "SCE_NET_ERROR_CONFIG_GET_ARP";
    if (errorCode == -2143218938) return "SCE_NET_ERROR_CONFIG_GET_IFADDR";
    if (errorCode == -2143218940) return "SCE_NET_ERROR_CONFIG_GET_IFMTU";
    if (errorCode == -2143218934) return "SCE_NET_ERROR_CONFIG_GET_ROUTE";
    if (errorCode == -2143218930) return "SCE_NET_ERROR_CONFIG_INVALID_ARG";
    if (errorCode == -2143218932) return "SCE_NET_ERROR_CONFIG_NO_DEFAULT_ROUTE";
    if (errorCode == -2143218925) return "SCE_NET_ERROR_CONFIG_NO_MEMORY";
    if (errorCode == -2143218924) return "SCE_NET_ERROR_CONFIG_NO_ROUTE";
    if (errorCode == -2143218927) return "SCE_NET_ERROR_CONFIG_SET_ARP";
    if (errorCode == -2143218922) return "SCE_NET_ERROR_CONFIG_SET_DEFAULT_SCOPE";
    if (errorCode == -2143218937) return "SCE_NET_ERROR_CONFIG_SET_IFADDR";
    if (errorCode == -2143218939) return "SCE_NET_ERROR_CONFIG_SET_IFMTU";
    if (errorCode == -2143218935) return "SCE_NET_ERROR_CONFIG_SET_ROUTE";
    if (errorCode == -2143218923) return "SCE_NET_ERROR_CONFIG_SETUP";
    if (errorCode == -2143218943) return "SCE_NET_ERROR_CONFIG_SOCKET";
    if (errorCode == -2143218942) return "SCE_NET_ERROR_CONFIG_UP_IF";
    if (errorCode == -2143218111) return "SCE_NET_ERROR_CONFIG_WLAN_AP_CHANNEL_CONFLICT";
    if (errorCode == -2143218172) return "SCE_NET_ERROR_CONFIG_WLAN_JOIN_ASSOC_RESP_TIMEOUT";
    if (errorCode == -2143218174) return "SCE_NET_ERROR_CONFIG_WLAN_JOIN_AUTH_PROTO_MISMATCH";
    if (errorCode == -2143218173) return "SCE_NET_ERROR_CONFIG_WLAN_JOIN_AUTH_REFUSED";
    if (errorCode == -2143218171) return "SCE_NET_ERROR_CONFIG_WLAN_JOIN_AUTH_RESP_TIMEOUT";
    if (errorCode == -2143218168) return "SCE_NET_ERROR_CONFIG_WLAN_JOIN_DISASSOCIATED";
    if (errorCode == -2143218167) return "SCE_NET_ERROR_CONFIG_WLAN_JOIN_FW_INTERNAL";
    if (errorCode == -2143218162) return "SCE_NET_ERROR_CONFIG_WLAN_JOIN_IEEE_NOT_SUPPORT_ALL_RATES";
    if (errorCode == -2143218164) return "SCE_NET_ERROR_CONFIG_WLAN_JOIN_IEEE_STATUS_CODE";
    if (errorCode == -2143218163) return "SCE_NET_ERROR_CONFIG_WLAN_JOIN_INT_AP_CONNECTED";
    if (errorCode == -2143218169) return "SCE_NET_ERROR_CONFIG_WLAN_JOIN_KEY_EXCHANGE";
    if (errorCode == -2143218175) return "SCE_NET_ERROR_CONFIG_WLAN_JOIN_NOT_FOUND";
    if (errorCode == -2143218166) return "SCE_NET_ERROR_CONFIG_WLAN_JOIN_UNKNOWN";
    if (errorCode == -2143218170) return "SCE_NET_ERROR_CONFIG_WLAN_JOIN_WEP_DECRYPTION";
    if (errorCode == -2143218420) return "SCE_NET_ERROR_DHCP_BUSY";
    if (errorCode == -2143218427) return "SCE_NET_ERROR_DHCP_GET_NAK";
    if (errorCode == -2143218426) return "SCE_NET_ERROR_DHCP_INVALID_ARG";
    if (errorCode == -2143218424) return "SCE_NET_ERROR_DHCP_INVALID_HOSTNAME";
    if (errorCode == -2143218421) return "SCE_NET_ERROR_DHCP_INVALID_IFNAME";
    if (errorCode == -2143218431) return "SCE_NET_ERROR_DHCP_INVALID_PACKET";
    if (errorCode == -2143218419) return "SCE_NET_ERROR_DHCP_INVALID_VENDOR_ID";
    if (errorCode == -2143218428) return "SCE_NET_ERROR_DHCP_LEASE_TIME";
    if (errorCode == -2143218423) return "SCE_NET_ERROR_DHCP_NO_MEMORY";
    if (errorCode == -2143218430) return "SCE_NET_ERROR_DHCP_NO_SERVER";
    if (errorCode == -2143218422) return "SCE_NET_ERROR_DHCP_NOT_INITIALIZED";
    if (errorCode == -2143218425) return "SCE_NET_ERROR_DHCP_NOT_READY";
    if (errorCode == -2143218429) return "SCE_NET_ERROR_DHCP_SENT_DECLINE";
    if (errorCode == -2143217147) return "SCE_NET_ERROR_DUPLICATE_IP_BUSY";
    if (errorCode == -2143217151) return "SCE_NET_ERROR_DUPLICATE_IP_INVALID_ARG";
    if (errorCode == -2143217148) return "SCE_NET_ERROR_DUPLICATE_IP_INVALID_IFNAME";
    if (errorCode == -2143217150) return "SCE_NET_ERROR_DUPLICATE_IP_NO_MEMORY";
    if (errorCode == -2143217149) return "SCE_NET_ERROR_DUPLICATE_IP_NOT_INITIALIZED";
    if (errorCode == -2143217146) return "SCE_NET_ERROR_DUPLICATE_IP_REQUEST_ARP";
    if (errorCode == -2143223545) return "SCE_NET_ERROR_E2BIG";
    if (errorCode == -2143223539) return "SCE_NET_ERROR_EACCES";
    if (errorCode == -2143223504) return "SCE_NET_ERROR_EADDRINUSE";
    if (errorCode == -2143223503) return "SCE_NET_ERROR_EADDRNOTAVAIL";
    if (errorCode == -2143223392) return "SCE_NET_ERROR_EADHOC";
    if (errorCode == -2143223505) return "SCE_NET_ERROR_EAFNOSUPPORT";
    if (errorCode == -2143223517) return "SCE_NET_ERROR_EAGAIN";
    if (errorCode == -2143223515) return "SCE_NET_ERROR_EALREADY";
    if (errorCode == -2143223472) return "SCE_NET_ERROR_EAUTH";
    if (errorCode == -2143223543) return "SCE_NET_ERROR_EBADF";
    if (errorCode == -2143223480) return "SCE_NET_ERROR_EBADRPC";
    if (errorCode == -2143223536) return "SCE_NET_ERROR_EBUSY";
    if (errorCode == -2143223349) return "SCE_NET_ERROR_ECALLBACK";
    if (errorCode == -2143223467) return "SCE_NET_ERROR_ECANCELED";
    if (errorCode == -2143223542) return "SCE_NET_ERROR_ECHILD";
    if (errorCode == -2143223499) return "SCE_NET_ERROR_ECONNABORTED";
    if (errorCode == -2143223491) return "SCE_NET_ERROR_ECONNREFUSED";
    if (errorCode == -2143223498) return "SCE_NET_ERROR_ECONNRESET";
    if (errorCode == -2143223541) return "SCE_NET_ERROR_EDEADLK";
    if (errorCode == -2143223387) return "SCE_NET_ERROR_EDESC";
    if (errorCode == -2143223386) return "SCE_NET_ERROR_EDESCTIMEDOUT";
    if (errorCode == -2143223513) return "SCE_NET_ERROR_EDESTADDRREQ";
    if (errorCode == -2143223519) return "SCE_NET_ERROR_EDOM";
    if (errorCode == -2143223483) return "SCE_NET_ERROR_EDQUOT";
    if (errorCode == -2143223535) return "SCE_NET_ERROR_EEXIST";
    if (errorCode == -2143223538) return "SCE_NET_ERROR_EFAULT";
    if (errorCode == -2143223525) return "SCE_NET_ERROR_EFBIG";
    if (errorCode == -2143223473) return "SCE_NET_ERROR_EFTYPE";
    if (errorCode == -2143223488) return "SCE_NET_ERROR_EHOSTDOWN";
    if (errorCode == -2143223487) return "SCE_NET_ERROR_EHOSTUNREACH";
    if (errorCode == -2143223470) return "SCE_NET_ERROR_EIDRM";
    if (errorCode == -2143223389) return "SCE_NET_ERROR_EINACTIVEDISABLED";
    if (errorCode == -2143223516) return "SCE_NET_ERROR_EINPROGRESS";
    if (errorCode == -2143223348) return "SCE_NET_ERROR_EINTERNAL";
    if (errorCode == -2143223548) return "SCE_NET_ERROR_EINTR";
    if (errorCode == -2143223530) return "SCE_NET_ERROR_EINVAL";
    if (errorCode == -2143223547) return "SCE_NET_ERROR_EIO";
    if (errorCode == -2143223496) return "SCE_NET_ERROR_EISCONN";
    if (errorCode == -2143223531) return "SCE_NET_ERROR_EISDIR";
    if (errorCode == -2143223490) return "SCE_NET_ERROR_ELOOP";
    if (errorCode == -2143223528) return "SCE_NET_ERROR_EMFILE";
    if (errorCode == -2143223521) return "SCE_NET_ERROR_EMLINK";
    if (errorCode == -2143223512) return "SCE_NET_ERROR_EMSGSIZE";
    if (errorCode == -2143223489) return "SCE_NET_ERROR_ENAMETOOLONG";
    if (errorCode == -2143223471) return "SCE_NET_ERROR_ENEEDAUTH";
    if (errorCode == -2143223502) return "SCE_NET_ERROR_ENETDOWN";
    if (errorCode == -2143223385) return "SCE_NET_ERROR_ENETINTR";
    if (errorCode == -2143223500) return "SCE_NET_ERROR_ENETRESET";
    if (errorCode == -2143223501) return "SCE_NET_ERROR_ENETUNREACH";
    if (errorCode == -2143223529) return "SCE_NET_ERROR_ENFILE";
    if (errorCode == -2143223346) return "SCE_NET_ERROR_ENOALLOCMEM";
    if (errorCode == -2143223497) return "SCE_NET_ERROR_ENOBUFS";
    if (errorCode == -2143223388) return "SCE_NET_ERROR_ENODATA";
    if (errorCode == -2143223533) return "SCE_NET_ERROR_ENODEV";
    if (errorCode == -2143223550) return "SCE_NET_ERROR_ENOENT";
    if (errorCode == -2143223544) return "SCE_NET_ERROR_ENOEXEC";
    if (errorCode == -2143223475) return "SCE_NET_ERROR_ENOLCK";
    if (errorCode == -2143223351) return "SCE_NET_ERROR_ENOLIBMEM";
    if (errorCode == -2143223540) return "SCE_NET_ERROR_ENOMEM";
    if (errorCode == -2143223469) return "SCE_NET_ERROR_ENOMS";
    if (errorCode == -2143223510) return "SCE_NET_ERROR_ENOPROTOOPT";
    if (errorCode == -2143223524) return "SCE_NET_ERROR_ENOSPC";
    if (errorCode == -2143223474) return "SCE_NET_ERROR_ENOSYS";
    if (errorCode == -2143223537) return "SCE_NET_ERROR_ENOTBLK";
    if (errorCode == -2143223495) return "SCE_NET_ERROR_ENOTCONN";
    if (errorCode == -2143223532) return "SCE_NET_ERROR_ENOTDIR";
    if (errorCode == -2143223486) return "SCE_NET_ERROR_ENOTEMPTY";
    if (errorCode == -2143223352) return "SCE_NET_ERROR_ENOTINIT";
    if (errorCode == -2143223514) return "SCE_NET_ERROR_ENOTSOCK";
    if (errorCode == -2143223527) return "SCE_NET_ERROR_ENOTTY";
    if (errorCode == -2143223546) return "SCE_NET_ERROR_ENXIO";
    if (errorCode == -2143223507) return "SCE_NET_ERROR_EOPNOTSUPP";
    if (errorCode == -2143223468) return "SCE_NET_ERROR_EOVERFLOW";
    if (errorCode == -2143223551) return "SCE_NET_ERROR_EPERM";
    if (errorCode == -2143223506) return "SCE_NET_ERROR_EPFNOSUPPORT";
    if (errorCode == -2143223520) return "SCE_NET_ERROR_EPIPE";
    if (errorCode == -2143223485) return "SCE_NET_ERROR_EPROCLIM";
    if (errorCode == -2143223476) return "SCE_NET_ERROR_EPROCUNAVAIL";
    if (errorCode == -2143223477) return "SCE_NET_ERROR_EPROGMISMATCH";
    if (errorCode == -2143223478) return "SCE_NET_ERROR_EPROGUNAVAIL";
    if (errorCode == -2143223509) return "SCE_NET_ERROR_EPROTONOSUPPORT";
    if (errorCode == -2143223511) return "SCE_NET_ERROR_EPROTOTYPE";
    if (errorCode == -2143223518) return "SCE_NET_ERROR_ERANGE";
    if (errorCode == -2143223481) return "SCE_NET_ERROR_EREMOTE";
    if (errorCode == -2143223391) return "SCE_NET_ERROR_ERESERVED161";
    if (errorCode == -2143223390) return "SCE_NET_ERROR_ERESERVED162";
    if (errorCode == -2143223350) return "SCE_NET_ERROR_ERESERVED202";
    if (errorCode == -2143223347) return "SCE_NET_ERROR_ERETURN";
    if (errorCode == -2143223522) return "SCE_NET_ERROR_EROFS";
    if (errorCode == -2143223479) return "SCE_NET_ERROR_ERPCMISMATCH";
    if (errorCode == -2143223494) return "SCE_NET_ERROR_ESHUTDOWN";
    if (errorCode == -2143223508) return "SCE_NET_ERROR_ESOCKTNOSUPPORT";
    if (errorCode == -2143223523) return "SCE_NET_ERROR_ESPIPE";
    if (errorCode == -2143223549) return "SCE_NET_ERROR_ESRCH";
    if (errorCode == -2143223482) return "SCE_NET_ERROR_ESTALE";
    if (errorCode == -2143223492) return "SCE_NET_ERROR_ETIMEDOUT";
    if (errorCode == -2143223493) return "SCE_NET_ERROR_ETOOMANYREFS";
    if (errorCode == -2143223526) return "SCE_NET_ERROR_ETXTBSY";
    if (errorCode == -2143223484) return "SCE_NET_ERROR_EUSERS";
    if (errorCode == -2143223534) return "SCE_NET_ERROR_EXDEV";
    if (errorCode == -2143218687) return "SCE_NET_ERROR_PPPOE_ALREADY_STARTED";
    if (errorCode == -2143218667) return "SCE_NET_ERROR_PPPOE_GET_DNS_ADDRS";
    if (errorCode == -2143218681) return "SCE_NET_ERROR_PPPOE_GET_PPP_STATUS";
    if (errorCode == -2143218674) return "SCE_NET_ERROR_PPPOE_GET_SESSION_ERROR";
    if (errorCode == -2143218680) return "SCE_NET_ERROR_PPPOE_GET_SESSION_PHASE";
    if (errorCode == -2143218685) return "SCE_NET_ERROR_PPPOE_IFCREATE";
    if (errorCode == -2143218682) return "SCE_NET_ERROR_PPPOE_NOT_STARTED";
    if (errorCode == -2143218672) return "SCE_NET_ERROR_PPPOE_SESSION_AC_SYSTEM";
    if (errorCode == -2143218671) return "SCE_NET_ERROR_PPPOE_SESSION_GENERIC";
    if (errorCode == -2143218675) return "SCE_NET_ERROR_PPPOE_SESSION_GET_PADT";
    if (errorCode == -2143218679) return "SCE_NET_ERROR_PPPOE_SESSION_INIT";
    if (errorCode == -2143218678) return "SCE_NET_ERROR_PPPOE_SESSION_NO_PADO";
    if (errorCode == -2143218676) return "SCE_NET_ERROR_PPPOE_SESSION_NO_PADR";
    if (errorCode == -2143218677) return "SCE_NET_ERROR_PPPOE_SESSION_NO_PADS";
    if (errorCode == -2143218673) return "SCE_NET_ERROR_PPPOE_SESSION_SERVICE_NAME";
    if (errorCode == -2143218684) return "SCE_NET_ERROR_PPPOE_SET_AUTHCFG";
    if (errorCode == -2143218683) return "SCE_NET_ERROR_PPPOE_SET_DNSOPTS";
    if (errorCode == -2143218666) return "SCE_NET_ERROR_PPPOE_SET_PARAMS";
    if (errorCode == -2143218686) return "SCE_NET_ERROR_PPPOE_SOCKET";
    if (errorCode == -2143218670) return "SCE_NET_ERROR_PPPOE_STATUS_AUTH";
    if (errorCode == -2143218669) return "SCE_NET_ERROR_PPPOE_STATUS_NETWORK";
    if (errorCode == -2143218668) return "SCE_NET_ERROR_PPPOE_STATUS_TERMINATE";
    if (errorCode == -2143223318) return "SCE_NET_ERROR_RESOLVER_EALIGNMENT";
    if (errorCode == -2143223331) return "SCE_NET_ERROR_RESOLVER_EBUSY";
    if (errorCode == -2143223324) return "SCE_NET_ERROR_RESOLVER_EFORMAT";
    if (errorCode == -2143223332) return "SCE_NET_ERROR_RESOLVER_EINTERNAL";
    if (errorCode == -2143223327) return "SCE_NET_ERROR_RESOLVER_ENODNS";
    if (errorCode == -2143223322) return "SCE_NET_ERROR_RESOLVER_ENOHOST";
    if (errorCode == -2143223319) return "SCE_NET_ERROR_RESOLVER_ENORECORD";
    if (errorCode == -2143223330) return "SCE_NET_ERROR_RESOLVER_ENOSPACE";
    if (errorCode == -2143223325) return "SCE_NET_ERROR_RESOLVER_ENOSUPPORT";
    if (errorCode == -2143223321) return "SCE_NET_ERROR_RESOLVER_ENOTIMPLEMENTED";
    if (errorCode == -2143223329) return "SCE_NET_ERROR_RESOLVER_EPACKET";
    if (errorCode == -2143223328) return "SCE_NET_ERROR_RESOLVER_ERESERVED224";
    if (errorCode == -2143223323) return "SCE_NET_ERROR_RESOLVER_ESERVERFAILURE";
    if (errorCode == -2143223320) return "SCE_NET_ERROR_RESOLVER_ESERVERREFUSED";
    if (errorCode == -2143223326) return "SCE_NET_ERROR_RESOLVER_ETIMEDOUT";
    if (errorCode == -2142633461) return "SCE_NGS2_ERROR_BUFFER_BROKEN";
    if (errorCode == -2142631931) return "SCE_NGS2_ERROR_CODEC_DECODE_FAIL";
    if (errorCode == -2142631934) return "SCE_NGS2_ERROR_CODEC_EMPTY_CHANNEL";
    if (errorCode == -2142631935) return "SCE_NGS2_ERROR_CODEC_EMPTY_INSTANCE";
    if (errorCode == -2142631932) return "SCE_NGS2_ERROR_CODEC_RESET_FAIL";
    if (errorCode == -2142631933) return "SCE_NGS2_ERROR_CODEC_SETUP_FAIL";
    if (errorCode == -2142631936) return "SCE_NGS2_ERROR_CODEC_UNKNOWN_WAVEFORM";
    if (errorCode == -2142633205) return "SCE_NGS2_ERROR_DETECTED_CIRCULAR_VOICE_CONTROL";
    if (errorCode == -2142633460) return "SCE_NGS2_ERROR_EMPTY_BUFFER";
    if (errorCode == -2142633210) return "SCE_NGS2_ERROR_EMPTY_CHANNEL_WORK";
    if (errorCode == -2142633209) return "SCE_NGS2_ERROR_EMPTY_CODEC_DECODER";
    if (errorCode == -2142633467) return "SCE_NGS2_ERROR_EMPTY_REPORT_HANDLE";
    if (errorCode == -2142633983) return "SCE_NGS2_ERROR_FAIL";
    if (errorCode == -2142633465) return "SCE_NGS2_ERROR_INVALID_BUFFER_ADDRESS";
    if (errorCode == -2142633464) return "SCE_NGS2_ERROR_INVALID_BUFFER_ALIGN";
    if (errorCode == -2142633462) return "SCE_NGS2_ERROR_INVALID_BUFFER_ALLOCATOR";
    if (errorCode == -2142633466) return "SCE_NGS2_ERROR_INVALID_BUFFER_INFO";
    if (errorCode == -2142633463) return "SCE_NGS2_ERROR_INVALID_BUFFER_SIZE";
    if (errorCode == -2142632652) return "SCE_NGS2_ERROR_INVALID_DELAY_TAP_INFO";
    if (errorCode == -2142632654) return "SCE_NGS2_ERROR_INVALID_DELAY_TYPE";
    if (errorCode == -2142632704) return "SCE_NGS2_ERROR_INVALID_ENVELOPE_CURVE";
    if (errorCode == -2142633643) return "SCE_NGS2_ERROR_INVALID_ENVELOPE_POINT_ADDRESS";
    if (errorCode == -2142633213) return "SCE_NGS2_ERROR_INVALID_EVENT_TYPE";
    if (errorCode == -2142632448) return "SCE_NGS2_ERROR_INVALID_FILTER_INDEX";
    if (errorCode == -2142632446) return "SCE_NGS2_ERROR_INVALID_FILTER_LOCATION";
    if (errorCode == -2142632447) return "SCE_NGS2_ERROR_INVALID_FILTER_TYPE";
    if (errorCode == -2142633472) return "SCE_NGS2_ERROR_INVALID_HANDLE";
    if (errorCode == -2142632445) return "SCE_NGS2_ERROR_INVALID_LFE_FC";
    if (errorCode == -2142632192) return "SCE_NGS2_ERROR_INVALID_MATRIX_INDEX";
    if (errorCode == -2142633645) return "SCE_NGS2_ERROR_INVALID_MATRIX_LEVEL_ADDRESS";
    if (errorCode == -2142633717) return "SCE_NGS2_ERROR_INVALID_MAX_ATRAC9_CHANNEL_WORKS";
    if (errorCode == -2142633718) return "SCE_NGS2_ERROR_INVALID_MAX_ATRAC9_DECODERS";
    if (errorCode == -2142633723) return "SCE_NGS2_ERROR_INVALID_MAX_CHANNEL_WORKS";
    if (errorCode == -2142633724) return "SCE_NGS2_ERROR_INVALID_MAX_CHANNELS";
    if (errorCode == -2142632672) return "SCE_NGS2_ERROR_INVALID_MAX_CHORUS_PHASES";
    if (errorCode == -2142633719) return "SCE_NGS2_ERROR_INVALID_MAX_CODEC_CACHES";
    if (errorCode == -2142632656) return "SCE_NGS2_ERROR_INVALID_MAX_DELAY_LENGTH";
    if (errorCode == -2142632655) return "SCE_NGS2_ERROR_INVALID_MAX_DELAY_TAPS";
    if (errorCode == -2142633721) return "SCE_NGS2_ERROR_INVALID_MAX_ENVELOPE_POINTS";
    if (errorCode == -2142633720) return "SCE_NGS2_ERROR_INVALID_MAX_FILTERS";
    if (errorCode == -2142633904) return "SCE_NGS2_ERROR_INVALID_MAX_GRAIN_SAMPLES";
    if (errorCode == -2142633726) return "SCE_NGS2_ERROR_INVALID_MAX_INPUT_DELAY_BLOCKS";
    if (errorCode == -2142633716) return "SCE_NGS2_ERROR_INVALID_MAX_INPUTS";
    if (errorCode == -2142633728) return "SCE_NGS2_ERROR_INVALID_MAX_MATRICES";
    if (errorCode == -2142633727) return "SCE_NGS2_ERROR_INVALID_MAX_PORTS";
    if (errorCode == -2142633725) return "SCE_NGS2_ERROR_INVALID_MAX_VOICES";
    if (errorCode == -2142633722) return "SCE_NGS2_ERROR_INVALID_MAX_WAVEFORM_BLOCKS";
    if (errorCode == -2142631421) return "SCE_NGS2_ERROR_INVALID_MODULE_BUFFER_ID";
    if (errorCode == -2142631424) return "SCE_NGS2_ERROR_INVALID_MODULE_ID";
    if (errorCode == -2142631168) return "SCE_NGS2_ERROR_INVALID_MODULE_INDEX";
    if (errorCode == -2142631167) return "SCE_NGS2_ERROR_INVALID_MODULE_INFO_SIZE";
    if (errorCode == -2142631420) return "SCE_NGS2_ERROR_INVALID_MODULE_STATE_OFFSET";
    if (errorCode == -2142631419) return "SCE_NGS2_ERROR_INVALID_MODULE_STATE_SIZE";
    if (errorCode == -2142633902) return "SCE_NGS2_ERROR_INVALID_NUM_CHANNELS";
    if (errorCode == -2142632671) return "SCE_NGS2_ERROR_INVALID_NUM_CHORUS_PHASES";
    if (errorCode == -2142632653) return "SCE_NGS2_ERROR_INVALID_NUM_DELAY_TAPS";
    if (errorCode == -2142633646) return "SCE_NGS2_ERROR_INVALID_NUM_ENVELOPE_POINTS";
    if (errorCode == -2142633903) return "SCE_NGS2_ERROR_INVALID_NUM_GRAIN_SAMPLES";
    if (errorCode == -2142633648) return "SCE_NGS2_ERROR_INVALID_NUM_MATRIX_LEVELS";
    if (errorCode == -2142631422) return "SCE_NGS2_ERROR_INVALID_NUM_MODULE_BUFFERS";
    if (errorCode == -2142631423) return "SCE_NGS2_ERROR_INVALID_NUM_MODULES";
    if (errorCode == -2142633642) return "SCE_NGS2_ERROR_INVALID_NUM_PEAKMETER_BLOCKS";
    if (errorCode == -2142633647) return "SCE_NGS2_ERROR_INVALID_NUM_WAVEFORM_BLOCKS";
    if (errorCode == -2142633856) return "SCE_NGS2_ERROR_INVALID_OPTION_ADDRESS";
    if (errorCode == -2142633854) return "SCE_NGS2_ERROR_INVALID_OPTION_FLAG";
    if (errorCode == -2142633855) return "SCE_NGS2_ERROR_INVALID_OPTION_SIZE";
    if (errorCode == -2142633901) return "SCE_NGS2_ERROR_INVALID_OUT_ADDRESS";
    if (errorCode == -2142633900) return "SCE_NGS2_ERROR_INVALID_OUT_SIZE";
    if (errorCode == -2142631662) return "SCE_NGS2_ERROR_INVALID_PAN_MATRIX_FORMAT";
    if (errorCode == -2142631660) return "SCE_NGS2_ERROR_INVALID_PAN_PARAM";
    if (errorCode == -2142631663) return "SCE_NGS2_ERROR_INVALID_PAN_SPEAKER";
    if (errorCode == -2142631664) return "SCE_NGS2_ERROR_INVALID_PAN_UNIT_ANGLE";
    if (errorCode == -2142631661) return "SCE_NGS2_ERROR_INVALID_PAN_WORK";
    if (errorCode == -2142633211) return "SCE_NGS2_ERROR_INVALID_PATCH";
    if (errorCode == -2142632688) return "SCE_NGS2_ERROR_INVALID_PEAKMETER_FLAG";
    if (errorCode == -2142633212) return "SCE_NGS2_ERROR_INVALID_PORT_INDEX";
    if (errorCode == -2142633375) return "SCE_NGS2_ERROR_INVALID_RACK_HANDLE";
    if (errorCode == -2142633376) return "SCE_NGS2_ERROR_INVALID_RACK_ID";
    if (errorCode == -2142633468) return "SCE_NGS2_ERROR_INVALID_REPORT_HANDLE";
    if (errorCode == -2142633469) return "SCE_NGS2_ERROR_INVALID_REPORT_HANDLER";
    if (errorCode == -2142633470) return "SCE_NGS2_ERROR_INVALID_REPORT_TYPE";
    if (errorCode == -2142631680) return "SCE_NGS2_ERROR_INVALID_REVERB_SIZE";
    if (errorCode == -2142633471) return "SCE_NGS2_ERROR_INVALID_SAMPLE_RATE";
    if (errorCode == -2142633424) return "SCE_NGS2_ERROR_INVALID_SYSTEM_HANDLE";
    if (errorCode == -2142632368) return "SCE_NGS2_ERROR_INVALID_USER_FX_PARAM_SIZE";
    if (errorCode == -2142633207) return "SCE_NGS2_ERROR_INVALID_VOICE_CONTROL_ADDRESS";
    if (errorCode == -2142633208) return "SCE_NGS2_ERROR_INVALID_VOICE_CONTROL_ID";
    if (errorCode == -2142633206) return "SCE_NGS2_ERROR_INVALID_VOICE_CONTROL_SIZE";
    if (errorCode == -2142633216) return "SCE_NGS2_ERROR_INVALID_VOICE_HANDLE";
    if (errorCode == -2142633214) return "SCE_NGS2_ERROR_INVALID_VOICE_INDEX";
    if (errorCode == -2142631418) return "SCE_NGS2_ERROR_INVALID_VOICE_STATE_SIZE";
    if (errorCode == -2142632954) return "SCE_NGS2_ERROR_INVALID_WAVEFORM_ADDRESS";
    if (errorCode == -2142633644) return "SCE_NGS2_ERROR_INVALID_WAVEFORM_BLOCK_ADDRESS";
    if (errorCode == -2142632951) return "SCE_NGS2_ERROR_INVALID_WAVEFORM_BLOCK_NUM_REPEATS";
    if (errorCode == -2142632957) return "SCE_NGS2_ERROR_INVALID_WAVEFORM_CONFIG";
    if (errorCode == -2142632952) return "SCE_NGS2_ERROR_INVALID_WAVEFORM_DATA";
    if (errorCode == -2142632960) return "SCE_NGS2_ERROR_INVALID_WAVEFORM_FORMAT";
    if (errorCode == -2142632955) return "SCE_NGS2_ERROR_INVALID_WAVEFORM_FRAME";
    if (errorCode == -2142632956) return "SCE_NGS2_ERROR_INVALID_WAVEFORM_SAMPLE_RATE";
    if (errorCode == -2142632953) return "SCE_NGS2_ERROR_INVALID_WAVEFORM_SIZE";
    if (errorCode == -2142632958) return "SCE_NGS2_ERROR_INVALID_WAVEFORM_TYPE";
    if (errorCode == -2142633215) return "SCE_NGS2_ERROR_UNINIT_VOICE";
    if (errorCode == -2142632959) return "SCE_NGS2_ERROR_UNKNOWN_WAVEFORM_FORMAT";
    if (errorCode == -2137915388) return "SCE_PAD_ERROR_ALREADY_OPENED";
    if (errorCode == -2137915385) return "SCE_PAD_ERROR_DEVICE_NOT_CONNECTED";
    if (errorCode == -2137915137) return "SCE_PAD_ERROR_FATAL";
    if (errorCode == -2137915391) return "SCE_PAD_ERROR_INVALID_ARG";
    if (errorCode == -2137915134) return "SCE_PAD_ERROR_INVALID_BUFFER_LENGTH";
    if (errorCode == -2137915389) return "SCE_PAD_ERROR_INVALID_HANDLE";
    if (errorCode == -2137915386) return "SCE_PAD_ERROR_INVALID_LIGHTBAR_SETTING";
    if (errorCode == -2137915390) return "SCE_PAD_ERROR_INVALID_PORT";
    if (errorCode == -2137915132) return "SCE_PAD_ERROR_INVALID_REPORT_ID";
    if (errorCode == -2137915133) return "SCE_PAD_ERROR_INVALID_REPORT_LENGTH";
    if (errorCode == -2137915387) return "SCE_PAD_ERROR_NOT_INITIALIZED";
    if (errorCode == -2137915135) return "SCE_PAD_ERROR_NOT_PERMITTED";
    if (errorCode == -2134638590) return "SCE_PAD_TRACKER_ERROR_ALREADY_INIT";
    if (errorCode == -2134638589) return "SCE_PAD_TRACKER_ERROR_INVALID_ARG";
    if (errorCode == -2134638588) return "SCE_PAD_TRACKER_ERROR_INVALID_HANDLE";
    if (errorCode == -2134638591) return "SCE_PAD_TRACKER_ERROR_NOT_INIT";
    if (errorCode == -2140602350) return "SCE_PNG_DEC_ERROR_DECODE_ERROR";
    if (errorCode == -2140602336) return "SCE_PNG_DEC_ERROR_FATAL";
    if (errorCode == -2140602367) return "SCE_PNG_DEC_ERROR_INVALID_ADDR";
    if (errorCode == -2140602352) return "SCE_PNG_DEC_ERROR_INVALID_DATA";
    if (errorCode == -2140602364) return "SCE_PNG_DEC_ERROR_INVALID_HANDLE";
    if (errorCode == -2140602365) return "SCE_PNG_DEC_ERROR_INVALID_PARAM";
    if (errorCode == -2140602366) return "SCE_PNG_DEC_ERROR_INVALID_SIZE";
    if (errorCode == -2140602363) return "SCE_PNG_DEC_ERROR_INVALID_WORK_MEMORY";
    if (errorCode == -2140602351) return "SCE_PNG_DEC_ERROR_UNSUPPORT_DATA";
    if (errorCode == -2140602096) return "SCE_PNG_ENC_ERROR_DATA_OVERFLOW";
    if (errorCode == -2140602080) return "SCE_PNG_ENC_ERROR_FATAL";
    if (errorCode == -2140602111) return "SCE_PNG_ENC_ERROR_INVALID_ADDR";
    if (errorCode == -2140602108) return "SCE_PNG_ENC_ERROR_INVALID_HANDLE";
    if (errorCode == -2140602109) return "SCE_PNG_ENC_ERROR_INVALID_PARAM";
    if (errorCode == -2140602110) return "SCE_PNG_ENC_ERROR_INVALID_SIZE";
    if (errorCode == -2131165172) return "SCE_PSVR_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2131165168) return "SCE_PSVR_ERROR_API_CONFLICT";
    if (errorCode == -2131165178) return "SCE_PSVR_ERROR_COMPILE_FAIL";
    if (errorCode == -2131165183) return "SCE_PSVR_ERROR_CREATE_FAIL";
    if (errorCode == -2131165177) return "SCE_PSVR_ERROR_GRAMMAR_FAIL";
    if (errorCode == -2131165175) return "SCE_PSVR_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2131165169) return "SCE_PSVR_ERROR_INVALID_ERROR_MESSAGE";
    if (errorCode == -2131165182) return "SCE_PSVR_ERROR_INVALID_OPTION";
    if (errorCode == -2131165170) return "SCE_PSVR_ERROR_INVALID_PSVR_POINTER";
    if (errorCode == -2131165171) return "SCE_PSVR_ERROR_INVALID_RESULT";
    if (errorCode == -2131165181) return "SCE_PSVR_ERROR_MEMORY_FAIL";
    if (errorCode == -2131165180) return "SCE_PSVR_ERROR_MEMORY_LEAK";
    if (errorCode == -2131165173) return "SCE_PSVR_ERROR_NOT_INITIALIZED";
    if (errorCode == -2131165174) return "SCE_PSVR_ERROR_RESOURCE_INSUFFICIENT";
    if (errorCode == -2131165179) return "SCE_PSVR_ERROR_SAVE_CPR_FAIL";
    if (errorCode == -2131165176) return "SCE_PSVR_ERROR_START_FAIL";
    if (errorCode == -2146631411) return "SCE_REGMGR_ERROR_BKUPLEVEL";
    if (errorCode == -2146598643) return "SCE_REGMGR_ERROR_BKUPLEVEL_I";
    if (errorCode == -2146631133) return "SCE_REGMGR_ERROR_BRK_BKUP_DATA";
    if (errorCode == -2146631134) return "SCE_REGMGR_ERROR_BRK_BKUP_HEAD";
    if (errorCode == -2146631150) return "SCE_REGMGR_ERROR_CACHEAREA";
    if (errorCode == -2146598382) return "SCE_REGMGR_ERROR_CACHEAREA_I";
    if (errorCode == -2146631415) return "SCE_REGMGR_ERROR_CACHEFLAG";
    if (errorCode == -2146598647) return "SCE_REGMGR_ERROR_CACHEFLAG_I";
    if (errorCode == -2146631153) return "SCE_REGMGR_ERROR_COPYIN";
    if (errorCode == -2146598385) return "SCE_REGMGR_ERROR_COPYIN_I";
    if (errorCode == -2146631152) return "SCE_REGMGR_ERROR_COPYOUT";
    if (errorCode == -2146598384) return "SCE_REGMGR_ERROR_COPYOUT_I";
    if (errorCode == -2146631413) return "SCE_REGMGR_ERROR_DBPOS";
    if (errorCode == -2146598645) return "SCE_REGMGR_ERROR_DBPOS_I";
    if (errorCode == -2146630401) return "SCE_REGMGR_ERROR_DRV_BROKEN_MAX";
    if (errorCode == -2146597633) return "SCE_REGMGR_ERROR_DRV_BROKEN_MAX_I";
    if (errorCode == -2146630656) return "SCE_REGMGR_ERROR_DRV_BROKEN_MIN";
    if (errorCode == -2146597888) return "SCE_REGMGR_ERROR_DRV_BROKEN_MIN_I";
    if (errorCode == -2146630655) return "SCE_REGMGR_ERROR_DRV_CONTDATA";
    if (errorCode == -2146597887) return "SCE_REGMGR_ERROR_DRV_CONTDATA_I";
    if (errorCode == -2146630654) return "SCE_REGMGR_ERROR_DRV_DATAFILE";
    if (errorCode == -2146597886) return "SCE_REGMGR_ERROR_DRV_DATAFILE_I";
    if (errorCode == -2146630138) return "SCE_REGMGR_ERROR_DRV_DATASIZE";
    if (errorCode == -2146597370) return "SCE_REGMGR_ERROR_DRV_DATASIZE_I";
    if (errorCode == -2146630137) return "SCE_REGMGR_ERROR_DRV_DATATYPE";
    if (errorCode == -2146597369) return "SCE_REGMGR_ERROR_DRV_DATATYPE_I";
    if (errorCode == -2146630652) return "SCE_REGMGR_ERROR_DRV_ERRIO";
    if (errorCode == -2146597884) return "SCE_REGMGR_ERROR_DRV_ERRIO_I";
    if (errorCode == -2146630142) return "SCE_REGMGR_ERROR_DRV_FILENAME";
    if (errorCode == -2146597374) return "SCE_REGMGR_ERROR_DRV_FILENAME_I";
    if (errorCode == -2146630136) return "SCE_REGMGR_ERROR_DRV_FILEPOS";
    if (errorCode == -2146597368) return "SCE_REGMGR_ERROR_DRV_FILEPOS_I";
    if (errorCode == -2146630649) return "SCE_REGMGR_ERROR_DRV_FLUSH";
    if (errorCode == -2146597881) return "SCE_REGMGR_ERROR_DRV_FLUSH_I";
    if (errorCode == -2146630135) return "SCE_REGMGR_ERROR_DRV_FORMAT";
    if (errorCode == -2146597367) return "SCE_REGMGR_ERROR_DRV_FORMAT_I";
    if (errorCode == -2146630528) return "SCE_REGMGR_ERROR_DRV_IO_BASE";
    if (errorCode == -2146597760) return "SCE_REGMGR_ERROR_DRV_IO_BASE_I";
    if (errorCode == -2146630524) return "SCE_REGMGR_ERROR_DRV_IO_BUG_NOINIT";
    if (errorCode == -2146597756) return "SCE_REGMGR_ERROR_DRV_IO_BUG_NOINIT_I";
    if (errorCode == -2146630525) return "SCE_REGMGR_ERROR_DRV_IO_BUG_NOMEM";
    if (errorCode == -2146597757) return "SCE_REGMGR_ERROR_DRV_IO_BUG_NOMEM_I";
    if (errorCode == -2146630526) return "SCE_REGMGR_ERROR_DRV_IO_BUG_SIZE";
    if (errorCode == -2146597758) return "SCE_REGMGR_ERROR_DRV_IO_BUG_SIZE_I";
    if (errorCode == -2146630523) return "SCE_REGMGR_ERROR_DRV_IO_BUG_TOOBIG";
    if (errorCode == -2146597755) return "SCE_REGMGR_ERROR_DRV_IO_BUG_TOOBIG_I";
    if (errorCode == -2146630527) return "SCE_REGMGR_ERROR_DRV_IO_BUG_WHENCE";
    if (errorCode == -2146597759) return "SCE_REGMGR_ERROR_DRV_IO_BUG_WHENCE_I";
    if (errorCode == -2146630647) return "SCE_REGMGR_ERROR_DRV_MKDIR";
    if (errorCode == -2146597879) return "SCE_REGMGR_ERROR_DRV_MKDIR_I";
    if (errorCode == -2146630653) return "SCE_REGMGR_ERROR_DRV_NOENT";
    if (errorCode == -2146597885) return "SCE_REGMGR_ERROR_DRV_NOENT_I";
    if (errorCode == -2146630141) return "SCE_REGMGR_ERROR_DRV_NOINIT";
    if (errorCode == -2146597373) return "SCE_REGMGR_ERROR_DRV_NOINIT_I";
    if (errorCode == -2146630140) return "SCE_REGMGR_ERROR_DRV_OVERCNT";
    if (errorCode == -2146597372) return "SCE_REGMGR_ERROR_DRV_OVERCNT_I";
    if (errorCode == -2146629889) return "SCE_REGMGR_ERROR_DRV_PRGBUG_MAX";
    if (errorCode == -2146597121) return "SCE_REGMGR_ERROR_DRV_PRGBUG_MAX_I";
    if (errorCode == -2146630144) return "SCE_REGMGR_ERROR_DRV_PRGBUG_MIN";
    if (errorCode == -2146597376) return "SCE_REGMGR_ERROR_DRV_PRGBUG_MIN_I";
    if (errorCode == -2146630651) return "SCE_REGMGR_ERROR_DRV_READ";
    if (errorCode == -2146597883) return "SCE_REGMGR_ERROR_DRV_READ_I";
    if (errorCode == -2146630143) return "SCE_REGMGR_ERROR_DRV_REINIT";
    if (errorCode == -2146597375) return "SCE_REGMGR_ERROR_DRV_REINIT_I";
    if (errorCode == -2146630648) return "SCE_REGMGR_ERROR_DRV_SYNC";
    if (errorCode == -2146597880) return "SCE_REGMGR_ERROR_DRV_SYNC_I";
    if (errorCode == -2146630139) return "SCE_REGMGR_ERROR_DRV_UNIQUEID";
    if (errorCode == -2146597371) return "SCE_REGMGR_ERROR_DRV_UNIQUEID_I";
    if (errorCode == -2146630145) return "SCE_REGMGR_ERROR_DRV_UPDATE_MAX";
    if (errorCode == -2146597377) return "SCE_REGMGR_ERROR_DRV_UPDATE_MAX_I";
    if (errorCode == -2146630400) return "SCE_REGMGR_ERROR_DRV_UPDATE_MIN";
    if (errorCode == -2146597632) return "SCE_REGMGR_ERROR_DRV_UPDATE_MIN_I";
    if (errorCode == -2146630650) return "SCE_REGMGR_ERROR_DRV_WRITE";
    if (errorCode == -2146597882) return "SCE_REGMGR_ERROR_DRV_WRITE_I";
    if (errorCode == -2146631412) return "SCE_REGMGR_ERROR_EAPWRITE";
    if (errorCode == -2146598644) return "SCE_REGMGR_ERROR_EAPWRITE_I";
    if (errorCode == -2146631676) return "SCE_REGMGR_ERROR_ERREAPCONT";
    if (errorCode == -2146598908) return "SCE_REGMGR_ERROR_ERREAPCONT_I";
    if (errorCode == -2146631675) return "SCE_REGMGR_ERROR_ERREAPDATA";
    if (errorCode == -2146598907) return "SCE_REGMGR_ERROR_ERREAPDATA_I";
    if (errorCode == -2146631677) return "SCE_REGMGR_ERROR_ERREAPHEAD";
    if (errorCode == -2146598909) return "SCE_REGMGR_ERROR_ERREAPHEAD_I";
    if (errorCode == -2146631678) return "SCE_REGMGR_ERROR_ERRNVSDATA";
    if (errorCode == -2146598910) return "SCE_REGMGR_ERROR_ERRNVSDATA_I";
    if (errorCode == -2146631421) return "SCE_REGMGR_ERROR_FORMAT";
    if (errorCode == -2146598653) return "SCE_REGMGR_ERROR_FORMAT_I";
    if (errorCode == -2146631410) return "SCE_REGMGR_ERROR_GPSGERR";
    if (errorCode == -2146598642) return "SCE_REGMGR_ERROR_GPSGERR_I";
    if (errorCode == -2146631149) return "SCE_REGMGR_ERROR_HANDLER_REGIST";
    if (errorCode == -2146598381) return "SCE_REGMGR_ERROR_HANDLER_REGIST_I";
    if (errorCode == -2146631408) return "SCE_REGMGR_ERROR_HOSTERR";
    if (errorCode == -2146598640) return "SCE_REGMGR_ERROR_HOSTERR_I";
    if (errorCode == -2146631407) return "SCE_REGMGR_ERROR_HOWTOERR";
    if (errorCode == -2146598639) return "SCE_REGMGR_ERROR_HOWTOERR_I";
    if (errorCode == -2146598912) return "SCE_REGMGR_ERROR_INIT_MASK";
    if (errorCode == -2146631141) return "SCE_REGMGR_ERROR_IO_READ";
    if (errorCode == -2146598373) return "SCE_REGMGR_ERROR_IO_READ_I";
    if (errorCode == -2146631140) return "SCE_REGMGR_ERROR_IO_SEEK";
    if (errorCode == -2146598372) return "SCE_REGMGR_ERROR_IO_SEEK_I";
    if (errorCode == -2146631139) return "SCE_REGMGR_ERROR_IO_WRITE";
    if (errorCode == -2146598371) return "SCE_REGMGR_ERROR_IO_WRITE_I";
    if (errorCode == -2146631414) return "SCE_REGMGR_ERROR_LEVELERR";
    if (errorCode == -2146598646) return "SCE_REGMGR_ERROR_LEVELERR_I";
    if (errorCode == -2146631418) return "SCE_REGMGR_ERROR_MACNERR";
    if (errorCode == -2146598650) return "SCE_REGMGR_ERROR_MACNERR_I";
    if (errorCode == -2146631425) return "SCE_REGMGR_ERROR_MGR_BROKEN_MAX";
    if (errorCode == -2146598657) return "SCE_REGMGR_ERROR_MGR_BROKEN_MAX_I";
    if (errorCode == -2146631680) return "SCE_REGMGR_ERROR_MGR_BROKEN_MIN";
    if (errorCode == -2146630657) return "SCE_REGMGR_ERROR_MGR_PRGBUG_MAX";
    if (errorCode == -2146597889) return "SCE_REGMGR_ERROR_MGR_PRGBUG_MAX_I";
    if (errorCode == -2146631168) return "SCE_REGMGR_ERROR_MGR_PRGBUG_MIN";
    if (errorCode == -2146598400) return "SCE_REGMGR_ERROR_MGR_PRGBUG_MIN_I";
    if (errorCode == -2146631169) return "SCE_REGMGR_ERROR_MGR_UPDATE_MAX";
    if (errorCode == -2146598401) return "SCE_REGMGR_ERROR_MGR_UPDATE_MAX_I";
    if (errorCode == -2146631424) return "SCE_REGMGR_ERROR_MGR_UPDATE_MIN";
    if (errorCode == -2146598656) return "SCE_REGMGR_ERROR_MGR_UPDATE_MIN_I";
    if (errorCode == -2146631142) return "SCE_REGMGR_ERROR_MTX_SLEEP";
    if (errorCode == -2146598374) return "SCE_REGMGR_ERROR_MTX_SLEEP_I";
    if (errorCode == -2146631422) return "SCE_REGMGR_ERROR_NODATA";
    if (errorCode == -2146598654) return "SCE_REGMGR_ERROR_NODATA_I";
    if (errorCode == -2146631423) return "SCE_REGMGR_ERROR_NOINITDB";
    if (errorCode == -2146598655) return "SCE_REGMGR_ERROR_NOINITDB_I";
    if (errorCode == -2146631151) return "SCE_REGMGR_ERROR_NOMEMORY";
    if (errorCode == -2146598383) return "SCE_REGMGR_ERROR_NOMEMORY_I";
    if (errorCode == -2146631679) return "SCE_REGMGR_ERROR_NONVSDATA";
    if (errorCode == -2146598911) return "SCE_REGMGR_ERROR_NONVSDATA_I";
    if (errorCode == -2146631154) return "SCE_REGMGR_ERROR_NOTHING";
    if (errorCode == -2146598386) return "SCE_REGMGR_ERROR_NOTHING_I";
    if (errorCode == -2146631143) return "SCE_REGMGR_ERROR_NOTSUPPORTED";
    if (errorCode == -2146598375) return "SCE_REGMGR_ERROR_NOTSUPPORTED_I";
    if (errorCode == -2146631409) return "SCE_REGMGR_ERROR_NPSGERR";
    if (errorCode == -2146598641) return "SCE_REGMGR_ERROR_NPSGERR_I";
    if (errorCode == -2146631406) return "SCE_REGMGR_ERROR_NUMCATERR";
    if (errorCode == -2146598638) return "SCE_REGMGR_ERROR_NUMCATERR_I";
    if (errorCode == -2146631420) return "SCE_REGMGR_ERROR_OVERCNT";
    if (errorCode == -2146598652) return "SCE_REGMGR_ERROR_OVERCNT_I";
    if (errorCode == -2146631166) return "SCE_REGMGR_ERROR_PARAM";
    if (errorCode == -2146598398) return "SCE_REGMGR_ERROR_PARAM_I";
    if (errorCode == -2146631401) return "SCE_REGMGR_ERROR_PRISTRDIR";
    if (errorCode == -2146598633) return "SCE_REGMGR_ERROR_PRISTRDIR_I";
    if (errorCode == -2146631402) return "SCE_REGMGR_ERROR_PRISTRFIL";
    if (errorCode == -2146598634) return "SCE_REGMGR_ERROR_PRISTRFIL_I";
    if (errorCode == -2146631136) return "SCE_REGMGR_ERROR_PRM_BKUP_ADDR";
    if (errorCode == -2146631135) return "SCE_REGMGR_ERROR_PRM_BKUP_SIZE";
    if (errorCode == -2146631158) return "SCE_REGMGR_ERROR_PRM_BKUPLEVEL";
    if (errorCode == -2146598390) return "SCE_REGMGR_ERROR_PRM_BKUPLEVEL_I";
    if (errorCode == -2146631156) return "SCE_REGMGR_ERROR_PRM_CANTRESET";
    if (errorCode == -2146598388) return "SCE_REGMGR_ERROR_PRM_CANTRESET_I";
    if (errorCode == -2146631155) return "SCE_REGMGR_ERROR_PRM_ERRORCODE";
    if (errorCode == -2146598387) return "SCE_REGMGR_ERROR_PRM_ERRORCODE_I";
    if (errorCode == -2146631164) return "SCE_REGMGR_ERROR_PRM_HASH";
    if (errorCode == -2146598396) return "SCE_REGMGR_ERROR_PRM_HASH_I";
    if (errorCode == -2146631159) return "SCE_REGMGR_ERROR_PRM_INITLEVEL";
    if (errorCode == -2146598391) return "SCE_REGMGR_ERROR_PRM_INITLEVEL_I";
    if (errorCode == -2146631157) return "SCE_REGMGR_ERROR_PRM_PATH";
    if (errorCode == -2146598389) return "SCE_REGMGR_ERROR_PRM_PATH_I";
    if (errorCode == -2146631138) return "SCE_REGMGR_ERROR_PRM_PROC_DISCPLAYER";
    if (errorCode == -2146598370) return "SCE_REGMGR_ERROR_PRM_PROC_DISCPLAYER_I";
    if (errorCode == -2146631148) return "SCE_REGMGR_ERROR_PRM_PROC_GAME_LIB";
    if (errorCode == -2146598380) return "SCE_REGMGR_ERROR_PRM_PROC_GAME_LIB_I";
    if (errorCode == -2146631147) return "SCE_REGMGR_ERROR_PRM_PROC_GAME_SDK";
    if (errorCode == -2146598379) return "SCE_REGMGR_ERROR_PRM_PROC_GAME_SDK_I";
    if (errorCode == -2146631144) return "SCE_REGMGR_ERROR_PRM_PROC_HOST";
    if (errorCode == -2146598376) return "SCE_REGMGR_ERROR_PRM_PROC_HOST_I";
    if (errorCode == -2146631146) return "SCE_REGMGR_ERROR_PRM_PROC_NGAME_LIB";
    if (errorCode == -2146598378) return "SCE_REGMGR_ERROR_PRM_PROC_NGAME_LIB_I";
    if (errorCode == -2146631145) return "SCE_REGMGR_ERROR_PRM_PROC_NGAME_SDK";
    if (errorCode == -2146598377) return "SCE_REGMGR_ERROR_PRM_PROC_NGAME_SDK_I";
    if (errorCode == -2146631163) return "SCE_REGMGR_ERROR_PRM_PROPRG";
    if (errorCode == -2146598395) return "SCE_REGMGR_ERROR_PRM_PROPRG_I";
    if (errorCode == -2146631165) return "SCE_REGMGR_ERROR_PRM_REGID";
    if (errorCode == -2146598397) return "SCE_REGMGR_ERROR_PRM_REGID_I";
    if (errorCode == -2146631162) return "SCE_REGMGR_ERROR_PRM_REGID_NUM";
    if (errorCode == -2146598394) return "SCE_REGMGR_ERROR_PRM_REGID_NUM_I";
    if (errorCode == -2146631160) return "SCE_REGMGR_ERROR_PRM_SIZE";
    if (errorCode == -2146598392) return "SCE_REGMGR_ERROR_PRM_SIZE_I";
    if (errorCode == -2146631161) return "SCE_REGMGR_ERROR_PRM_TYPE";
    if (errorCode == -2146598393) return "SCE_REGMGR_ERROR_PRM_TYPE_I";
    if (errorCode == -2146631404) return "SCE_REGMGR_ERROR_PRODUCTCODE";
    if (errorCode == -2146598636) return "SCE_REGMGR_ERROR_PRODUCTCODE_I";
    if (errorCode == -2146631419) return "SCE_REGMGR_ERROR_REGIDERR";
    if (errorCode == -2146598651) return "SCE_REGMGR_ERROR_REGIDERR_I";
    if (errorCode == -2146631416) return "SCE_REGMGR_ERROR_SIZEERR";
    if (errorCode == -2146598648) return "SCE_REGMGR_ERROR_SIZEERR_I";
    if (errorCode == -2146631403) return "SCE_REGMGR_ERROR_SPSGERR";
    if (errorCode == -2146598635) return "SCE_REGMGR_ERROR_SPSGERR_I";
    if (errorCode == -2146631417) return "SCE_REGMGR_ERROR_TYPEERR";
    if (errorCode == -2146598649) return "SCE_REGMGR_ERROR_TYPEERR_I";
    if (errorCode == -2146631167) return "SCE_REGMGR_ERROR_UNINITIALIZED";
    if (errorCode == -2146598399) return "SCE_REGMGR_ERROR_UNINITIALIZED_I";
    if (errorCode == -2146631405) return "SCE_REGMGR_ERROR_VALUEERR";
    if (errorCode == -2146598637) return "SCE_REGMGR_ERROR_VALUEERR_I";
    if (errorCode == -2135621625) return "SCE_RTC_ERROR_BAD_PARSE";
    if (errorCode == -2135621628) return "SCE_RTC_ERROR_INVALID_ARG";
    if (errorCode == -2135621622) return "SCE_RTC_ERROR_INVALID_DAY";
    if (errorCode == -2135621621) return "SCE_RTC_ERROR_INVALID_HOUR";
    if (errorCode == -2135621618) return "SCE_RTC_ERROR_INVALID_MICROSECOND";
    if (errorCode == -2135621620) return "SCE_RTC_ERROR_INVALID_MINUTE";
    if (errorCode == -2135621623) return "SCE_RTC_ERROR_INVALID_MONTH";
    if (errorCode == -2135621630) return "SCE_RTC_ERROR_INVALID_POINTER";
    if (errorCode == -2135621619) return "SCE_RTC_ERROR_INVALID_SECOND";
    if (errorCode == -2135621629) return "SCE_RTC_ERROR_INVALID_VALUE";
    if (errorCode == -2135621624) return "SCE_RTC_ERROR_INVALID_YEAR";
    if (errorCode == -2135621626) return "SCE_RTC_ERROR_NO_CLOCK";
    if (errorCode == -2135621631) return "SCE_RTC_ERROR_NOT_INITIALIZED";
    if (errorCode == -2135621627) return "SCE_RTC_ERROR_NOT_SUPPORTED";
    if (errorCode == -2135687161) return "SCE_S3D_CONVERSION_ERROR_C_ARG_HDL_INVALID";
    if (errorCode == -2135687162) return "SCE_S3D_CONVERSION_ERROR_C_ARG_HDL_NULL";
    if (errorCode == -2135687160) return "SCE_S3D_CONVERSION_ERROR_C_SEQ";
    if (errorCode == -2135687153) return "SCE_S3D_CONVERSION_ERROR_E_ARG_CTRL_INVALID";
    if (errorCode == -2135687154) return "SCE_S3D_CONVERSION_ERROR_E_ARG_CTRL_NULL";
    if (errorCode == -2135687157) return "SCE_S3D_CONVERSION_ERROR_E_ARG_HDL_INVALID";
    if (errorCode == -2135687158) return "SCE_S3D_CONVERSION_ERROR_E_ARG_HDL_NULL";
    if (errorCode == -2135687155) return "SCE_S3D_CONVERSION_ERROR_E_ARG_INPICINFO_INVALID";
    if (errorCode == -2135687156) return "SCE_S3D_CONVERSION_ERROR_E_ARG_INPICINFO_NULL";
    if (errorCode == -2135687147) return "SCE_S3D_CONVERSION_ERROR_E_ARG_LEFT_RENDERTARGET_INVALID";
    if (errorCode == -2135687148) return "SCE_S3D_CONVERSION_ERROR_E_ARG_LEFT_RENDERTARGET_NULL";
    if (errorCode == -2135687150) return "SCE_S3D_CONVERSION_ERROR_E_ARG_LEFTPICINFO_INVALID";
    if (errorCode == -2135687152) return "SCE_S3D_CONVERSION_ERROR_E_ARG_OUTPICINFO_NULL";
    if (errorCode == -2135687145) return "SCE_S3D_CONVERSION_ERROR_E_ARG_RIGHT_RENDERTARGET_INVALID";
    if (errorCode == -2135687146) return "SCE_S3D_CONVERSION_ERROR_E_ARG_RIGHT_RENDERTARGET_NULL";
    if (errorCode == -2135687149) return "SCE_S3D_CONVERSION_ERROR_E_ARG_RIGHTPICINFO_INVALID";
    if (errorCode == -2135687142) return "SCE_S3D_CONVERSION_ERROR_E_ARG_RSRC_INVALID";
    if (errorCode == -2135687143) return "SCE_S3D_CONVERSION_ERROR_E_ARG_RSRC_NULL";
    if (errorCode == -2135687141) return "SCE_S3D_CONVERSION_ERROR_E_ARG_RSRCMEM_INVALID";
    if (errorCode == -2135687144) return "SCE_S3D_CONVERSION_ERROR_E_SEQ";
    if (errorCode == -2135687164) return "SCE_S3D_CONVERSION_ERROR_O_ARG_HDL_NULL";
    if (errorCode == -2135687165) return "SCE_S3D_CONVERSION_ERROR_O_ARG_RSRC_INVALID";
    if (errorCode == -2135687166) return "SCE_S3D_CONVERSION_ERROR_O_ARG_RSRC_NULL";
    if (errorCode == -2135687163) return "SCE_S3D_CONVERSION_ERROR_O_ARG_RSRCMEM_INVALID";
    if (errorCode == -2135687167) return "SCE_S3D_CONVERSION_ERROR_Q_ARG_ATTR_NULL";
    if (errorCode == -2146497267) return "SCE_SBL_ERROR_ACLIB_EACCES";
    if (errorCode == -2146497269) return "SCE_SBL_ERROR_ACLIB_EAGAIN";
    if (errorCode == -2146497227) return "SCE_SBL_ERROR_ACLIB_EAUTHFAIL";
    if (errorCode == -2146497237) return "SCE_SBL_ERROR_ACLIB_EBADMSG";
    if (errorCode == -2146497264) return "SCE_SBL_ERROR_ACLIB_EBUSY";
    if (errorCode == -2146497231) return "SCE_SBL_ERROR_ACLIB_ECLOCK";
    if (errorCode == -2146497242) return "SCE_SBL_ERROR_ACLIB_EDATA";
    if (errorCode == -2146497263) return "SCE_SBL_ERROR_ACLIB_EEXIST";
    if (errorCode == -2146497266) return "SCE_SBL_ERROR_ACLIB_EFAULT";
    if (errorCode == -2146497245) return "SCE_SBL_ERROR_ACLIB_EFMT";
    if (errorCode == -2146497228) return "SCE_SBL_ERROR_ACLIB_EFORMAT";
    if (errorCode == -2146497276) return "SCE_SBL_ERROR_ACLIB_EINTR";
    if (errorCode == -2146497258) return "SCE_SBL_ERROR_ACLIB_EINVAL";
    if (errorCode == -2146497275) return "SCE_SBL_ERROR_ACLIB_EIO";
    if (errorCode == -2146497221) return "SCE_SBL_ERROR_ACLIB_EMODE";
    if (errorCode == -2146497238) return "SCE_SBL_ERROR_ACLIB_ENEEDAUTH";
    if (errorCode == -2146497235) return "SCE_SBL_ERROR_ACLIB_ENOATTR";
    if (errorCode == -2146497261) return "SCE_SBL_ERROR_ACLIB_ENODEV";
    if (errorCode == -2146497278) return "SCE_SBL_ERROR_ACLIB_ENOENT";
    if (errorCode == -2146497272) return "SCE_SBL_ERROR_ACLIB_ENOEXEC";
    if (errorCode == -2146497268) return "SCE_SBL_ERROR_ACLIB_ENOMEM";
    if (errorCode == -2146497252) return "SCE_SBL_ERROR_ACLIB_ENOSPC";
    if (errorCode == -2146497230) return "SCE_SBL_ERROR_ACLIB_ENOTINITIALIZED";
    if (errorCode == -2146497243) return "SCE_SBL_ERROR_ACLIB_ENOTSUP";
    if (errorCode == -2146497222) return "SCE_SBL_ERROR_ACLIB_EPATH";
    if (errorCode == -2146497279) return "SCE_SBL_ERROR_ACLIB_EPERM";
    if (errorCode == -2146497233) return "SCE_SBL_ERROR_ACLIB_EPLATFORM";
    if (errorCode == -2146497232) return "SCE_SBL_ERROR_ACLIB_EPOWER";
    if (errorCode == -2146497223) return "SCE_SBL_ERROR_ACLIB_EPURPOSE";
    if (errorCode == -2146497220) return "SCE_SBL_ERROR_ACLIB_EQAF";
    if (errorCode == -2146497246) return "SCE_SBL_ERROR_ACLIB_ERANGE";
    if (errorCode == -2146497236) return "SCE_SBL_ERROR_ACLIB_EREVOKED";
    if (errorCode == -2146497244) return "SCE_SBL_ERROR_ACLIB_ESIGN";
    if (errorCode == -2146497277) return "SCE_SBL_ERROR_ACLIB_ESRCH";
    if (errorCode == -2146497239) return "SCE_SBL_ERROR_ACLIB_ESTACK";
    if (errorCode == -2146497240) return "SCE_SBL_ERROR_ACLIB_ESTAT";
    if (errorCode == -2146497224) return "SCE_SBL_ERROR_ACLIB_ESYSEXVER";
    if (errorCode == -2146497225) return "SCE_SBL_ERROR_ACLIB_ESYSVER";
    if (errorCode == -2146497241) return "SCE_SBL_ERROR_ACLIB_ETIMEDOUT";
    if (errorCode == -2146497234) return "SCE_SBL_ERROR_ACLIB_EVER";
    if (errorCode == -2146497229) return "SCE_SBL_ERROR_ACLIB_EXPIRED";
    if (errorCode == -2146497226) return "SCE_SBL_ERROR_ACLIB_KEY_DIFFER";
    if (errorCode == -2146497779) return "SCE_SBL_ERROR_AUTHMGR_EACCES";
    if (errorCode == -2146497781) return "SCE_SBL_ERROR_AUTHMGR_EAGAIN";
    if (errorCode == -2146497739) return "SCE_SBL_ERROR_AUTHMGR_EAUTHFAIL";
    if (errorCode == -2146497749) return "SCE_SBL_ERROR_AUTHMGR_EBADMSG";
    if (errorCode == -2146497776) return "SCE_SBL_ERROR_AUTHMGR_EBUSY";
    if (errorCode == -2146497743) return "SCE_SBL_ERROR_AUTHMGR_ECLOCK";
    if (errorCode == -2146497754) return "SCE_SBL_ERROR_AUTHMGR_EDATA";
    if (errorCode == -2146497775) return "SCE_SBL_ERROR_AUTHMGR_EEXIST";
    if (errorCode == -2146497778) return "SCE_SBL_ERROR_AUTHMGR_EFAULT";
    if (errorCode == -2146497757) return "SCE_SBL_ERROR_AUTHMGR_EFMT";
    if (errorCode == -2146497740) return "SCE_SBL_ERROR_AUTHMGR_EFORMAT";
    if (errorCode == -2146497788) return "SCE_SBL_ERROR_AUTHMGR_EINTR";
    if (errorCode == -2146497770) return "SCE_SBL_ERROR_AUTHMGR_EINVAL";
    if (errorCode == -2146497787) return "SCE_SBL_ERROR_AUTHMGR_EIO";
    if (errorCode == -2146497733) return "SCE_SBL_ERROR_AUTHMGR_EMODE";
    if (errorCode == -2146497750) return "SCE_SBL_ERROR_AUTHMGR_ENEEDAUTH";
    if (errorCode == -2146497747) return "SCE_SBL_ERROR_AUTHMGR_ENOATTR";
    if (errorCode == -2146497773) return "SCE_SBL_ERROR_AUTHMGR_ENODEV";
    if (errorCode == -2146497790) return "SCE_SBL_ERROR_AUTHMGR_ENOENT";
    if (errorCode == -2146497784) return "SCE_SBL_ERROR_AUTHMGR_ENOEXEC";
    if (errorCode == -2146497780) return "SCE_SBL_ERROR_AUTHMGR_ENOMEM";
    if (errorCode == -2146497764) return "SCE_SBL_ERROR_AUTHMGR_ENOSPC";
    if (errorCode == -2146497742) return "SCE_SBL_ERROR_AUTHMGR_ENOTINITIALIZED";
    if (errorCode == -2146497755) return "SCE_SBL_ERROR_AUTHMGR_ENOTSUP";
    if (errorCode == -2146497734) return "SCE_SBL_ERROR_AUTHMGR_EPATH";
    if (errorCode == -2146497791) return "SCE_SBL_ERROR_AUTHMGR_EPERM";
    if (errorCode == -2146497745) return "SCE_SBL_ERROR_AUTHMGR_EPLATFORM";
    if (errorCode == -2146497744) return "SCE_SBL_ERROR_AUTHMGR_EPOWER";
    if (errorCode == -2146497735) return "SCE_SBL_ERROR_AUTHMGR_EPURPOSE";
    if (errorCode == -2146497732) return "SCE_SBL_ERROR_AUTHMGR_EQAF";
    if (errorCode == -2146497758) return "SCE_SBL_ERROR_AUTHMGR_ERANGE";
    if (errorCode == -2146497748) return "SCE_SBL_ERROR_AUTHMGR_EREVOKED";
    if (errorCode == -2146497756) return "SCE_SBL_ERROR_AUTHMGR_ESIGN";
    if (errorCode == -2146497789) return "SCE_SBL_ERROR_AUTHMGR_ESRCH";
    if (errorCode == -2146497751) return "SCE_SBL_ERROR_AUTHMGR_ESTACK";
    if (errorCode == -2146497752) return "SCE_SBL_ERROR_AUTHMGR_ESTAT";
    if (errorCode == -2146497736) return "SCE_SBL_ERROR_AUTHMGR_ESYSEXVER";
    if (errorCode == -2146497737) return "SCE_SBL_ERROR_AUTHMGR_ESYSVER";
    if (errorCode == -2146497753) return "SCE_SBL_ERROR_AUTHMGR_ETIMEDOUT";
    if (errorCode == -2146497746) return "SCE_SBL_ERROR_AUTHMGR_EVER";
    if (errorCode == -2146497741) return "SCE_SBL_ERROR_AUTHMGR_EXPIRED";
    if (errorCode == -2146497738) return "SCE_SBL_ERROR_AUTHMGR_KEY_DIFFER";
    if (errorCode == -2146500595) return "SCE_SBL_ERROR_COMMON_EACCES";
    if (errorCode == -2146500597) return "SCE_SBL_ERROR_COMMON_EAGAIN";
    if (errorCode == -2146500555) return "SCE_SBL_ERROR_COMMON_EAUTHFAIL";
    if (errorCode == -2146500565) return "SCE_SBL_ERROR_COMMON_EBADMSG";
    if (errorCode == -2146500592) return "SCE_SBL_ERROR_COMMON_EBUSY";
    if (errorCode == -2146500559) return "SCE_SBL_ERROR_COMMON_ECLOCK";
    if (errorCode == -2146500570) return "SCE_SBL_ERROR_COMMON_EDATA";
    if (errorCode == -2146500591) return "SCE_SBL_ERROR_COMMON_EEXIST";
    if (errorCode == -2146500594) return "SCE_SBL_ERROR_COMMON_EFAULT";
    if (errorCode == -2146500573) return "SCE_SBL_ERROR_COMMON_EFMT";
    if (errorCode == -2146500556) return "SCE_SBL_ERROR_COMMON_EFORMAT";
    if (errorCode == -2146500604) return "SCE_SBL_ERROR_COMMON_EINTR";
    if (errorCode == -2146500586) return "SCE_SBL_ERROR_COMMON_EINVAL";
    if (errorCode == -2146500603) return "SCE_SBL_ERROR_COMMON_EIO";
    if (errorCode == -2146500549) return "SCE_SBL_ERROR_COMMON_EMODE";
    if (errorCode == -2146500566) return "SCE_SBL_ERROR_COMMON_ENEEDAUTH";
    if (errorCode == -2146500563) return "SCE_SBL_ERROR_COMMON_ENOATTR";
    if (errorCode == -2146500589) return "SCE_SBL_ERROR_COMMON_ENODEV";
    if (errorCode == -2146500606) return "SCE_SBL_ERROR_COMMON_ENOENT";
    if (errorCode == -2146500600) return "SCE_SBL_ERROR_COMMON_ENOEXEC";
    if (errorCode == -2146500596) return "SCE_SBL_ERROR_COMMON_ENOMEM";
    if (errorCode == -2146500580) return "SCE_SBL_ERROR_COMMON_ENOSPC";
    if (errorCode == -2146500558) return "SCE_SBL_ERROR_COMMON_ENOTINITIALIZED";
    if (errorCode == -2146500571) return "SCE_SBL_ERROR_COMMON_ENOTSUP";
    if (errorCode == -2146500550) return "SCE_SBL_ERROR_COMMON_EPATH";
    if (errorCode == -2146500607) return "SCE_SBL_ERROR_COMMON_EPERM";
    if (errorCode == -2146500561) return "SCE_SBL_ERROR_COMMON_EPLATFORM";
    if (errorCode == -2146500560) return "SCE_SBL_ERROR_COMMON_EPOWER";
    if (errorCode == -2146500551) return "SCE_SBL_ERROR_COMMON_EPURPOSE";
    if (errorCode == -2146500548) return "SCE_SBL_ERROR_COMMON_EQAF";
    if (errorCode == -2146500574) return "SCE_SBL_ERROR_COMMON_ERANGE";
    if (errorCode == -2146500564) return "SCE_SBL_ERROR_COMMON_EREVOKED";
    if (errorCode == -2146500572) return "SCE_SBL_ERROR_COMMON_ESIGN";
    if (errorCode == -2146500605) return "SCE_SBL_ERROR_COMMON_ESRCH";
    if (errorCode == -2146500567) return "SCE_SBL_ERROR_COMMON_ESTACK";
    if (errorCode == -2146500568) return "SCE_SBL_ERROR_COMMON_ESTAT";
    if (errorCode == -2146500552) return "SCE_SBL_ERROR_COMMON_ESYSEXVER";
    if (errorCode == -2146500553) return "SCE_SBL_ERROR_COMMON_ESYSVER";
    if (errorCode == -2146500569) return "SCE_SBL_ERROR_COMMON_ETIMEDOUT";
    if (errorCode == -2146500562) return "SCE_SBL_ERROR_COMMON_EVER";
    if (errorCode == -2146500557) return "SCE_SBL_ERROR_COMMON_EXPIRED";
    if (errorCode == -2146500554) return "SCE_SBL_ERROR_COMMON_KEY_DIFFER";
    if (errorCode == -2146499059) return "SCE_SBL_ERROR_DEVACT_EACCES";
    if (errorCode == -2146499061) return "SCE_SBL_ERROR_DEVACT_EAGAIN";
    if (errorCode == -2146499019) return "SCE_SBL_ERROR_DEVACT_EAUTHFAIL";
    if (errorCode == -2146499029) return "SCE_SBL_ERROR_DEVACT_EBADMSG";
    if (errorCode == -2146499056) return "SCE_SBL_ERROR_DEVACT_EBUSY";
    if (errorCode == -2146499023) return "SCE_SBL_ERROR_DEVACT_ECLOCK";
    if (errorCode == -2146499034) return "SCE_SBL_ERROR_DEVACT_EDATA";
    if (errorCode == -2146499055) return "SCE_SBL_ERROR_DEVACT_EEXIST";
    if (errorCode == -2146499058) return "SCE_SBL_ERROR_DEVACT_EFAULT";
    if (errorCode == -2146499037) return "SCE_SBL_ERROR_DEVACT_EFMT";
    if (errorCode == -2146499020) return "SCE_SBL_ERROR_DEVACT_EFORMAT";
    if (errorCode == -2146499068) return "SCE_SBL_ERROR_DEVACT_EINTR";
    if (errorCode == -2146499050) return "SCE_SBL_ERROR_DEVACT_EINVAL";
    if (errorCode == -2146499067) return "SCE_SBL_ERROR_DEVACT_EIO";
    if (errorCode == -2146499013) return "SCE_SBL_ERROR_DEVACT_EMODE";
    if (errorCode == -2146499030) return "SCE_SBL_ERROR_DEVACT_ENEEDAUTH";
    if (errorCode == -2146499027) return "SCE_SBL_ERROR_DEVACT_ENOATTR";
    if (errorCode == -2146499053) return "SCE_SBL_ERROR_DEVACT_ENODEV";
    if (errorCode == -2146499070) return "SCE_SBL_ERROR_DEVACT_ENOENT";
    if (errorCode == -2146499064) return "SCE_SBL_ERROR_DEVACT_ENOEXEC";
    if (errorCode == -2146499060) return "SCE_SBL_ERROR_DEVACT_ENOMEM";
    if (errorCode == -2146499044) return "SCE_SBL_ERROR_DEVACT_ENOSPC";
    if (errorCode == -2146499022) return "SCE_SBL_ERROR_DEVACT_ENOTINITIALIZED";
    if (errorCode == -2146499035) return "SCE_SBL_ERROR_DEVACT_ENOTSUP";
    if (errorCode == -2146499014) return "SCE_SBL_ERROR_DEVACT_EPATH";
    if (errorCode == -2146499071) return "SCE_SBL_ERROR_DEVACT_EPERM";
    if (errorCode == -2146499025) return "SCE_SBL_ERROR_DEVACT_EPLATFORM";
    if (errorCode == -2146499024) return "SCE_SBL_ERROR_DEVACT_EPOWER";
    if (errorCode == -2146499015) return "SCE_SBL_ERROR_DEVACT_EPURPOSE";
    if (errorCode == -2146499012) return "SCE_SBL_ERROR_DEVACT_EQAF";
    if (errorCode == -2146499038) return "SCE_SBL_ERROR_DEVACT_ERANGE";
    if (errorCode == -2146499028) return "SCE_SBL_ERROR_DEVACT_EREVOKED";
    if (errorCode == -2146499036) return "SCE_SBL_ERROR_DEVACT_ESIGN";
    if (errorCode == -2146499069) return "SCE_SBL_ERROR_DEVACT_ESRCH";
    if (errorCode == -2146499031) return "SCE_SBL_ERROR_DEVACT_ESTACK";
    if (errorCode == -2146499032) return "SCE_SBL_ERROR_DEVACT_ESTAT";
    if (errorCode == -2146499016) return "SCE_SBL_ERROR_DEVACT_ESYSEXVER";
    if (errorCode == -2146499017) return "SCE_SBL_ERROR_DEVACT_ESYSVER";
    if (errorCode == -2146499033) return "SCE_SBL_ERROR_DEVACT_ETIMEDOUT";
    if (errorCode == -2146499026) return "SCE_SBL_ERROR_DEVACT_EVER";
    if (errorCode == -2146499021) return "SCE_SBL_ERROR_DEVACT_EXPIRED";
    if (errorCode == -2146499018) return "SCE_SBL_ERROR_DEVACT_KEY_DIFFER";
    if (errorCode == -2146497523) return "SCE_SBL_ERROR_DONGLE_EACCES";
    if (errorCode == -2146497525) return "SCE_SBL_ERROR_DONGLE_EAGAIN";
    if (errorCode == -2146497483) return "SCE_SBL_ERROR_DONGLE_EAUTHFAIL";
    if (errorCode == -2146497493) return "SCE_SBL_ERROR_DONGLE_EBADMSG";
    if (errorCode == -2146497520) return "SCE_SBL_ERROR_DONGLE_EBUSY";
    if (errorCode == -2146497487) return "SCE_SBL_ERROR_DONGLE_ECLOCK";
    if (errorCode == -2146497498) return "SCE_SBL_ERROR_DONGLE_EDATA";
    if (errorCode == -2146497519) return "SCE_SBL_ERROR_DONGLE_EEXIST";
    if (errorCode == -2146497522) return "SCE_SBL_ERROR_DONGLE_EFAULT";
    if (errorCode == -2146497501) return "SCE_SBL_ERROR_DONGLE_EFMT";
    if (errorCode == -2146497484) return "SCE_SBL_ERROR_DONGLE_EFORMAT";
    if (errorCode == -2146497532) return "SCE_SBL_ERROR_DONGLE_EINTR";
    if (errorCode == -2146497514) return "SCE_SBL_ERROR_DONGLE_EINVAL";
    if (errorCode == -2146497531) return "SCE_SBL_ERROR_DONGLE_EIO";
    if (errorCode == -2146497477) return "SCE_SBL_ERROR_DONGLE_EMODE";
    if (errorCode == -2146497494) return "SCE_SBL_ERROR_DONGLE_ENEEDAUTH";
    if (errorCode == -2146497491) return "SCE_SBL_ERROR_DONGLE_ENOATTR";
    if (errorCode == -2146497517) return "SCE_SBL_ERROR_DONGLE_ENODEV";
    if (errorCode == -2146497534) return "SCE_SBL_ERROR_DONGLE_ENOENT";
    if (errorCode == -2146497528) return "SCE_SBL_ERROR_DONGLE_ENOEXEC";
    if (errorCode == -2146497524) return "SCE_SBL_ERROR_DONGLE_ENOMEM";
    if (errorCode == -2146497508) return "SCE_SBL_ERROR_DONGLE_ENOSPC";
    if (errorCode == -2146497486) return "SCE_SBL_ERROR_DONGLE_ENOTINITIALIZED";
    if (errorCode == -2146497499) return "SCE_SBL_ERROR_DONGLE_ENOTSUP";
    if (errorCode == -2146497478) return "SCE_SBL_ERROR_DONGLE_EPATH";
    if (errorCode == -2146497535) return "SCE_SBL_ERROR_DONGLE_EPERM";
    if (errorCode == -2146497489) return "SCE_SBL_ERROR_DONGLE_EPLATFORM";
    if (errorCode == -2146497488) return "SCE_SBL_ERROR_DONGLE_EPOWER";
    if (errorCode == -2146497479) return "SCE_SBL_ERROR_DONGLE_EPURPOSE";
    if (errorCode == -2146497476) return "SCE_SBL_ERROR_DONGLE_EQAF";
    if (errorCode == -2146497502) return "SCE_SBL_ERROR_DONGLE_ERANGE";
    if (errorCode == -2146497492) return "SCE_SBL_ERROR_DONGLE_EREVOKED";
    if (errorCode == -2146497500) return "SCE_SBL_ERROR_DONGLE_ESIGN";
    if (errorCode == -2146497533) return "SCE_SBL_ERROR_DONGLE_ESRCH";
    if (errorCode == -2146497495) return "SCE_SBL_ERROR_DONGLE_ESTACK";
    if (errorCode == -2146497496) return "SCE_SBL_ERROR_DONGLE_ESTAT";
    if (errorCode == -2146497480) return "SCE_SBL_ERROR_DONGLE_ESYSEXVER";
    if (errorCode == -2146497481) return "SCE_SBL_ERROR_DONGLE_ESYSVER";
    if (errorCode == -2146497497) return "SCE_SBL_ERROR_DONGLE_ETIMEDOUT";
    if (errorCode == -2146497490) return "SCE_SBL_ERROR_DONGLE_EVER";
    if (errorCode == -2146497485) return "SCE_SBL_ERROR_DONGLE_EXPIRED";
    if (errorCode == -2146497482) return "SCE_SBL_ERROR_DONGLE_KEY_DIFFER";
    if (errorCode == -2146497011) return "SCE_SBL_ERROR_DRIVEAUTH_EACCES";
    if (errorCode == -2146497013) return "SCE_SBL_ERROR_DRIVEAUTH_EAGAIN";
    if (errorCode == -2146496971) return "SCE_SBL_ERROR_DRIVEAUTH_EAUTHFAIL";
    if (errorCode == -2146496981) return "SCE_SBL_ERROR_DRIVEAUTH_EBADMSG";
    if (errorCode == -2146497008) return "SCE_SBL_ERROR_DRIVEAUTH_EBUSY";
    if (errorCode == -2146496975) return "SCE_SBL_ERROR_DRIVEAUTH_ECLOCK";
    if (errorCode == -2146496986) return "SCE_SBL_ERROR_DRIVEAUTH_EDATA";
    if (errorCode == -2146497007) return "SCE_SBL_ERROR_DRIVEAUTH_EEXIST";
    if (errorCode == -2146497010) return "SCE_SBL_ERROR_DRIVEAUTH_EFAULT";
    if (errorCode == -2146496989) return "SCE_SBL_ERROR_DRIVEAUTH_EFMT";
    if (errorCode == -2146496972) return "SCE_SBL_ERROR_DRIVEAUTH_EFORMAT";
    if (errorCode == -2146497020) return "SCE_SBL_ERROR_DRIVEAUTH_EINTR";
    if (errorCode == -2146497002) return "SCE_SBL_ERROR_DRIVEAUTH_EINVAL";
    if (errorCode == -2146497019) return "SCE_SBL_ERROR_DRIVEAUTH_EIO";
    if (errorCode == -2146496965) return "SCE_SBL_ERROR_DRIVEAUTH_EMODE";
    if (errorCode == -2146496982) return "SCE_SBL_ERROR_DRIVEAUTH_ENEEDAUTH";
    if (errorCode == -2146496979) return "SCE_SBL_ERROR_DRIVEAUTH_ENOATTR";
    if (errorCode == -2146497005) return "SCE_SBL_ERROR_DRIVEAUTH_ENODEV";
    if (errorCode == -2146497022) return "SCE_SBL_ERROR_DRIVEAUTH_ENOENT";
    if (errorCode == -2146497016) return "SCE_SBL_ERROR_DRIVEAUTH_ENOEXEC";
    if (errorCode == -2146497012) return "SCE_SBL_ERROR_DRIVEAUTH_ENOMEM";
    if (errorCode == -2146496996) return "SCE_SBL_ERROR_DRIVEAUTH_ENOSPC";
    if (errorCode == -2146496974) return "SCE_SBL_ERROR_DRIVEAUTH_ENOTINITIALIZED";
    if (errorCode == -2146496987) return "SCE_SBL_ERROR_DRIVEAUTH_ENOTSUP";
    if (errorCode == -2146496966) return "SCE_SBL_ERROR_DRIVEAUTH_EPATH";
    if (errorCode == -2146497023) return "SCE_SBL_ERROR_DRIVEAUTH_EPERM";
    if (errorCode == -2146496977) return "SCE_SBL_ERROR_DRIVEAUTH_EPLATFORM";
    if (errorCode == -2146496976) return "SCE_SBL_ERROR_DRIVEAUTH_EPOWER";
    if (errorCode == -2146496967) return "SCE_SBL_ERROR_DRIVEAUTH_EPURPOSE";
    if (errorCode == -2146496964) return "SCE_SBL_ERROR_DRIVEAUTH_EQAF";
    if (errorCode == -2146496990) return "SCE_SBL_ERROR_DRIVEAUTH_ERANGE";
    if (errorCode == -2146496980) return "SCE_SBL_ERROR_DRIVEAUTH_EREVOKED";
    if (errorCode == -2146496988) return "SCE_SBL_ERROR_DRIVEAUTH_ESIGN";
    if (errorCode == -2146497021) return "SCE_SBL_ERROR_DRIVEAUTH_ESRCH";
    if (errorCode == -2146496983) return "SCE_SBL_ERROR_DRIVEAUTH_ESTACK";
    if (errorCode == -2146496984) return "SCE_SBL_ERROR_DRIVEAUTH_ESTAT";
    if (errorCode == -2146496968) return "SCE_SBL_ERROR_DRIVEAUTH_ESYSEXVER";
    if (errorCode == -2146496969) return "SCE_SBL_ERROR_DRIVEAUTH_ESYSVER";
    if (errorCode == -2146496985) return "SCE_SBL_ERROR_DRIVEAUTH_ETIMEDOUT";
    if (errorCode == -2146496978) return "SCE_SBL_ERROR_DRIVEAUTH_EVER";
    if (errorCode == -2146496973) return "SCE_SBL_ERROR_DRIVEAUTH_EXPIRED";
    if (errorCode == -2146496970) return "SCE_SBL_ERROR_DRIVEAUTH_KEY_DIFFER";
    if (errorCode == -2146499827) return "SCE_SBL_ERROR_DRV_EACCES";
    if (errorCode == -2146499829) return "SCE_SBL_ERROR_DRV_EAGAIN";
    if (errorCode == -2146499787) return "SCE_SBL_ERROR_DRV_EAUTHFAIL";
    if (errorCode == -2146499797) return "SCE_SBL_ERROR_DRV_EBADMSG";
    if (errorCode == -2146499824) return "SCE_SBL_ERROR_DRV_EBUSY";
    if (errorCode == -2146499791) return "SCE_SBL_ERROR_DRV_ECLOCK";
    if (errorCode == -2146499802) return "SCE_SBL_ERROR_DRV_EDATA";
    if (errorCode == -2146499823) return "SCE_SBL_ERROR_DRV_EEXIST";
    if (errorCode == -2146499826) return "SCE_SBL_ERROR_DRV_EFAULT";
    if (errorCode == -2146499805) return "SCE_SBL_ERROR_DRV_EFMT";
    if (errorCode == -2146499788) return "SCE_SBL_ERROR_DRV_EFORMAT";
    if (errorCode == -2146499836) return "SCE_SBL_ERROR_DRV_EINTR";
    if (errorCode == -2146499818) return "SCE_SBL_ERROR_DRV_EINVAL";
    if (errorCode == -2146499835) return "SCE_SBL_ERROR_DRV_EIO";
    if (errorCode == -2146499781) return "SCE_SBL_ERROR_DRV_EMODE";
    if (errorCode == -2146499798) return "SCE_SBL_ERROR_DRV_ENEEDAUTH";
    if (errorCode == -2146499795) return "SCE_SBL_ERROR_DRV_ENOATTR";
    if (errorCode == -2146499821) return "SCE_SBL_ERROR_DRV_ENODEV";
    if (errorCode == -2146499838) return "SCE_SBL_ERROR_DRV_ENOENT";
    if (errorCode == -2146499832) return "SCE_SBL_ERROR_DRV_ENOEXEC";
    if (errorCode == -2146499828) return "SCE_SBL_ERROR_DRV_ENOMEM";
    if (errorCode == -2146499812) return "SCE_SBL_ERROR_DRV_ENOSPC";
    if (errorCode == -2146499790) return "SCE_SBL_ERROR_DRV_ENOTINITIALIZED";
    if (errorCode == -2146499803) return "SCE_SBL_ERROR_DRV_ENOTSUP";
    if (errorCode == -2146499782) return "SCE_SBL_ERROR_DRV_EPATH";
    if (errorCode == -2146499839) return "SCE_SBL_ERROR_DRV_EPERM";
    if (errorCode == -2146499793) return "SCE_SBL_ERROR_DRV_EPLATFORM";
    if (errorCode == -2146499792) return "SCE_SBL_ERROR_DRV_EPOWER";
    if (errorCode == -2146499783) return "SCE_SBL_ERROR_DRV_EPURPOSE";
    if (errorCode == -2146499780) return "SCE_SBL_ERROR_DRV_EQAF";
    if (errorCode == -2146499806) return "SCE_SBL_ERROR_DRV_ERANGE";
    if (errorCode == -2146499796) return "SCE_SBL_ERROR_DRV_EREVOKED";
    if (errorCode == -2146499804) return "SCE_SBL_ERROR_DRV_ESIGN";
    if (errorCode == -2146499837) return "SCE_SBL_ERROR_DRV_ESRCH";
    if (errorCode == -2146499799) return "SCE_SBL_ERROR_DRV_ESTACK";
    if (errorCode == -2146499800) return "SCE_SBL_ERROR_DRV_ESTAT";
    if (errorCode == -2146499784) return "SCE_SBL_ERROR_DRV_ESYSEXVER";
    if (errorCode == -2146499785) return "SCE_SBL_ERROR_DRV_ESYSVER";
    if (errorCode == -2146499801) return "SCE_SBL_ERROR_DRV_ETIMEDOUT";
    if (errorCode == -2146499794) return "SCE_SBL_ERROR_DRV_EVER";
    if (errorCode == -2146499789) return "SCE_SBL_ERROR_DRV_EXPIRED";
    if (errorCode == -2146499786) return "SCE_SBL_ERROR_DRV_KEY_DIFFER";
    if (errorCode == -2146498547) return "SCE_SBL_ERROR_IDATA_EACCES";
    if (errorCode == -2146498549) return "SCE_SBL_ERROR_IDATA_EAGAIN";
    if (errorCode == -2146498507) return "SCE_SBL_ERROR_IDATA_EAUTHFAIL";
    if (errorCode == -2146498517) return "SCE_SBL_ERROR_IDATA_EBADMSG";
    if (errorCode == -2146498544) return "SCE_SBL_ERROR_IDATA_EBUSY";
    if (errorCode == -2146498511) return "SCE_SBL_ERROR_IDATA_ECLOCK";
    if (errorCode == -2146498522) return "SCE_SBL_ERROR_IDATA_EDATA";
    if (errorCode == -2146498543) return "SCE_SBL_ERROR_IDATA_EEXIST";
    if (errorCode == -2146498546) return "SCE_SBL_ERROR_IDATA_EFAULT";
    if (errorCode == -2146498525) return "SCE_SBL_ERROR_IDATA_EFMT";
    if (errorCode == -2146498508) return "SCE_SBL_ERROR_IDATA_EFORMAT";
    if (errorCode == -2146498556) return "SCE_SBL_ERROR_IDATA_EINTR";
    if (errorCode == -2146498538) return "SCE_SBL_ERROR_IDATA_EINVAL";
    if (errorCode == -2146498555) return "SCE_SBL_ERROR_IDATA_EIO";
    if (errorCode == -2146498501) return "SCE_SBL_ERROR_IDATA_EMODE";
    if (errorCode == -2146498518) return "SCE_SBL_ERROR_IDATA_ENEEDAUTH";
    if (errorCode == -2146498515) return "SCE_SBL_ERROR_IDATA_ENOATTR";
    if (errorCode == -2146498541) return "SCE_SBL_ERROR_IDATA_ENODEV";
    if (errorCode == -2146498558) return "SCE_SBL_ERROR_IDATA_ENOENT";
    if (errorCode == -2146498552) return "SCE_SBL_ERROR_IDATA_ENOEXEC";
    if (errorCode == -2146498548) return "SCE_SBL_ERROR_IDATA_ENOMEM";
    if (errorCode == -2146498532) return "SCE_SBL_ERROR_IDATA_ENOSPC";
    if (errorCode == -2146498510) return "SCE_SBL_ERROR_IDATA_ENOTINITIALIZED";
    if (errorCode == -2146498523) return "SCE_SBL_ERROR_IDATA_ENOTSUP";
    if (errorCode == -2146498502) return "SCE_SBL_ERROR_IDATA_EPATH";
    if (errorCode == -2146498559) return "SCE_SBL_ERROR_IDATA_EPERM";
    if (errorCode == -2146498513) return "SCE_SBL_ERROR_IDATA_EPLATFORM";
    if (errorCode == -2146498512) return "SCE_SBL_ERROR_IDATA_EPOWER";
    if (errorCode == -2146498503) return "SCE_SBL_ERROR_IDATA_EPURPOSE";
    if (errorCode == -2146498500) return "SCE_SBL_ERROR_IDATA_EQAF";
    if (errorCode == -2146498526) return "SCE_SBL_ERROR_IDATA_ERANGE";
    if (errorCode == -2146498516) return "SCE_SBL_ERROR_IDATA_EREVOKED";
    if (errorCode == -2146498524) return "SCE_SBL_ERROR_IDATA_ESIGN";
    if (errorCode == -2146498557) return "SCE_SBL_ERROR_IDATA_ESRCH";
    if (errorCode == -2146498519) return "SCE_SBL_ERROR_IDATA_ESTACK";
    if (errorCode == -2146498520) return "SCE_SBL_ERROR_IDATA_ESTAT";
    if (errorCode == -2146498504) return "SCE_SBL_ERROR_IDATA_ESYSEXVER";
    if (errorCode == -2146498505) return "SCE_SBL_ERROR_IDATA_ESYSVER";
    if (errorCode == -2146498521) return "SCE_SBL_ERROR_IDATA_ETIMEDOUT";
    if (errorCode == -2146498514) return "SCE_SBL_ERROR_IDATA_EVER";
    if (errorCode == -2146498509) return "SCE_SBL_ERROR_IDATA_EXPIRED";
    if (errorCode == -2146498506) return "SCE_SBL_ERROR_IDATA_KEY_DIFFER";
    if (errorCode == -2146498035) return "SCE_SBL_ERROR_NPDRM_EACCES";
    if (errorCode == -2146498037) return "SCE_SBL_ERROR_NPDRM_EAGAIN";
    if (errorCode == -2146497995) return "SCE_SBL_ERROR_NPDRM_EAUTHFAIL";
    if (errorCode == -2146498005) return "SCE_SBL_ERROR_NPDRM_EBADMSG";
    if (errorCode == -2146498032) return "SCE_SBL_ERROR_NPDRM_EBUSY";
    if (errorCode == -2146497999) return "SCE_SBL_ERROR_NPDRM_ECLOCK";
    if (errorCode == -2146498010) return "SCE_SBL_ERROR_NPDRM_EDATA";
    if (errorCode == -2146498031) return "SCE_SBL_ERROR_NPDRM_EEXIST";
    if (errorCode == -2146498034) return "SCE_SBL_ERROR_NPDRM_EFAULT";
    if (errorCode == -2146498013) return "SCE_SBL_ERROR_NPDRM_EFMT";
    if (errorCode == -2146497996) return "SCE_SBL_ERROR_NPDRM_EFORMAT";
    if (errorCode == -2146498044) return "SCE_SBL_ERROR_NPDRM_EINTR";
    if (errorCode == -2146498026) return "SCE_SBL_ERROR_NPDRM_EINVAL";
    if (errorCode == -2146498043) return "SCE_SBL_ERROR_NPDRM_EIO";
    if (errorCode == -2146497989) return "SCE_SBL_ERROR_NPDRM_EMODE";
    if (errorCode == -2146498006) return "SCE_SBL_ERROR_NPDRM_ENEEDAUTH";
    if (errorCode == -2146498003) return "SCE_SBL_ERROR_NPDRM_ENOATTR";
    if (errorCode == -2146498029) return "SCE_SBL_ERROR_NPDRM_ENODEV";
    if (errorCode == -2146498046) return "SCE_SBL_ERROR_NPDRM_ENOENT";
    if (errorCode == -2146498040) return "SCE_SBL_ERROR_NPDRM_ENOEXEC";
    if (errorCode == -2146498036) return "SCE_SBL_ERROR_NPDRM_ENOMEM";
    if (errorCode == -2146498020) return "SCE_SBL_ERROR_NPDRM_ENOSPC";
    if (errorCode == -2146497998) return "SCE_SBL_ERROR_NPDRM_ENOTINITIALIZED";
    if (errorCode == -2146498011) return "SCE_SBL_ERROR_NPDRM_ENOTSUP";
    if (errorCode == -2146497990) return "SCE_SBL_ERROR_NPDRM_EPATH";
    if (errorCode == -2146498047) return "SCE_SBL_ERROR_NPDRM_EPERM";
    if (errorCode == -2146498001) return "SCE_SBL_ERROR_NPDRM_EPLATFORM";
    if (errorCode == -2146498000) return "SCE_SBL_ERROR_NPDRM_EPOWER";
    if (errorCode == -2146497991) return "SCE_SBL_ERROR_NPDRM_EPURPOSE";
    if (errorCode == -2146497988) return "SCE_SBL_ERROR_NPDRM_EQAF";
    if (errorCode == -2146498014) return "SCE_SBL_ERROR_NPDRM_ERANGE";
    if (errorCode == -2146498004) return "SCE_SBL_ERROR_NPDRM_EREVOKED";
    if (errorCode == -2146498012) return "SCE_SBL_ERROR_NPDRM_ESIGN";
    if (errorCode == -2146498045) return "SCE_SBL_ERROR_NPDRM_ESRCH";
    if (errorCode == -2146498007) return "SCE_SBL_ERROR_NPDRM_ESTACK";
    if (errorCode == -2146498008) return "SCE_SBL_ERROR_NPDRM_ESTAT";
    if (errorCode == -2146497992) return "SCE_SBL_ERROR_NPDRM_ESYSEXVER";
    if (errorCode == -2146497993) return "SCE_SBL_ERROR_NPDRM_ESYSVER";
    if (errorCode == -2146498009) return "SCE_SBL_ERROR_NPDRM_ETIMEDOUT";
    if (errorCode == -2146498002) return "SCE_SBL_ERROR_NPDRM_EVER";
    if (errorCode == -2146497997) return "SCE_SBL_ERROR_NPDRM_EXPIRED";
    if (errorCode == -2146497994) return "SCE_SBL_ERROR_NPDRM_KEY_DIFFER";
    if (errorCode == -2146498291) return "SCE_SBL_ERROR_RNG_EACCES";
    if (errorCode == -2146498293) return "SCE_SBL_ERROR_RNG_EAGAIN";
    if (errorCode == -2146498251) return "SCE_SBL_ERROR_RNG_EAUTHFAIL";
    if (errorCode == -2146498261) return "SCE_SBL_ERROR_RNG_EBADMSG";
    if (errorCode == -2146498288) return "SCE_SBL_ERROR_RNG_EBUSY";
    if (errorCode == -2146498255) return "SCE_SBL_ERROR_RNG_ECLOCK";
    if (errorCode == -2146498266) return "SCE_SBL_ERROR_RNG_EDATA";
    if (errorCode == -2146498287) return "SCE_SBL_ERROR_RNG_EEXIST";
    if (errorCode == -2146498290) return "SCE_SBL_ERROR_RNG_EFAULT";
    if (errorCode == -2146498269) return "SCE_SBL_ERROR_RNG_EFMT";
    if (errorCode == -2146498252) return "SCE_SBL_ERROR_RNG_EFORMAT";
    if (errorCode == -2146498300) return "SCE_SBL_ERROR_RNG_EINTR";
    if (errorCode == -2146498282) return "SCE_SBL_ERROR_RNG_EINVAL";
    if (errorCode == -2146498299) return "SCE_SBL_ERROR_RNG_EIO";
    if (errorCode == -2146498245) return "SCE_SBL_ERROR_RNG_EMODE";
    if (errorCode == -2146498262) return "SCE_SBL_ERROR_RNG_ENEEDAUTH";
    if (errorCode == -2146498259) return "SCE_SBL_ERROR_RNG_ENOATTR";
    if (errorCode == -2146498285) return "SCE_SBL_ERROR_RNG_ENODEV";
    if (errorCode == -2146498302) return "SCE_SBL_ERROR_RNG_ENOENT";
    if (errorCode == -2146498296) return "SCE_SBL_ERROR_RNG_ENOEXEC";
    if (errorCode == -2146498292) return "SCE_SBL_ERROR_RNG_ENOMEM";
    if (errorCode == -2146498276) return "SCE_SBL_ERROR_RNG_ENOSPC";
    if (errorCode == -2146498254) return "SCE_SBL_ERROR_RNG_ENOTINITIALIZED";
    if (errorCode == -2146498267) return "SCE_SBL_ERROR_RNG_ENOTSUP";
    if (errorCode == -2146498246) return "SCE_SBL_ERROR_RNG_EPATH";
    if (errorCode == -2146498303) return "SCE_SBL_ERROR_RNG_EPERM";
    if (errorCode == -2146498257) return "SCE_SBL_ERROR_RNG_EPLATFORM";
    if (errorCode == -2146498256) return "SCE_SBL_ERROR_RNG_EPOWER";
    if (errorCode == -2146498247) return "SCE_SBL_ERROR_RNG_EPURPOSE";
    if (errorCode == -2146498244) return "SCE_SBL_ERROR_RNG_EQAF";
    if (errorCode == -2146498270) return "SCE_SBL_ERROR_RNG_ERANGE";
    if (errorCode == -2146498260) return "SCE_SBL_ERROR_RNG_EREVOKED";
    if (errorCode == -2146498268) return "SCE_SBL_ERROR_RNG_ESIGN";
    if (errorCode == -2146498301) return "SCE_SBL_ERROR_RNG_ESRCH";
    if (errorCode == -2146498263) return "SCE_SBL_ERROR_RNG_ESTACK";
    if (errorCode == -2146498264) return "SCE_SBL_ERROR_RNG_ESTAT";
    if (errorCode == -2146498248) return "SCE_SBL_ERROR_RNG_ESYSEXVER";
    if (errorCode == -2146498249) return "SCE_SBL_ERROR_RNG_ESYSVER";
    if (errorCode == -2146498265) return "SCE_SBL_ERROR_RNG_ETIMEDOUT";
    if (errorCode == -2146498258) return "SCE_SBL_ERROR_RNG_EVER";
    if (errorCode == -2146498253) return "SCE_SBL_ERROR_RNG_EXPIRED";
    if (errorCode == -2146498250) return "SCE_SBL_ERROR_RNG_KEY_DIFFER";
    if (errorCode == -2146499571) return "SCE_SBL_ERROR_SERV_EACCES";
    if (errorCode == -2146499573) return "SCE_SBL_ERROR_SERV_EAGAIN";
    if (errorCode == -2146499531) return "SCE_SBL_ERROR_SERV_EAUTHFAIL";
    if (errorCode == -2146499541) return "SCE_SBL_ERROR_SERV_EBADMSG";
    if (errorCode == -2146499568) return "SCE_SBL_ERROR_SERV_EBUSY";
    if (errorCode == -2146499535) return "SCE_SBL_ERROR_SERV_ECLOCK";
    if (errorCode == -2146499546) return "SCE_SBL_ERROR_SERV_EDATA";
    if (errorCode == -2146499567) return "SCE_SBL_ERROR_SERV_EEXIST";
    if (errorCode == -2146499570) return "SCE_SBL_ERROR_SERV_EFAULT";
    if (errorCode == -2146499549) return "SCE_SBL_ERROR_SERV_EFMT";
    if (errorCode == -2146499532) return "SCE_SBL_ERROR_SERV_EFORMAT";
    if (errorCode == -2146499580) return "SCE_SBL_ERROR_SERV_EINTR";
    if (errorCode == -2146499562) return "SCE_SBL_ERROR_SERV_EINVAL";
    if (errorCode == -2146499579) return "SCE_SBL_ERROR_SERV_EIO";
    if (errorCode == -2146499525) return "SCE_SBL_ERROR_SERV_EMODE";
    if (errorCode == -2146499542) return "SCE_SBL_ERROR_SERV_ENEEDAUTH";
    if (errorCode == -2146499539) return "SCE_SBL_ERROR_SERV_ENOATTR";
    if (errorCode == -2146499565) return "SCE_SBL_ERROR_SERV_ENODEV";
    if (errorCode == -2146499582) return "SCE_SBL_ERROR_SERV_ENOENT";
    if (errorCode == -2146499576) return "SCE_SBL_ERROR_SERV_ENOEXEC";
    if (errorCode == -2146499572) return "SCE_SBL_ERROR_SERV_ENOMEM";
    if (errorCode == -2146499556) return "SCE_SBL_ERROR_SERV_ENOSPC";
    if (errorCode == -2146499534) return "SCE_SBL_ERROR_SERV_ENOTINITIALIZED";
    if (errorCode == -2146499547) return "SCE_SBL_ERROR_SERV_ENOTSUP";
    if (errorCode == -2146499526) return "SCE_SBL_ERROR_SERV_EPATH";
    if (errorCode == -2146499583) return "SCE_SBL_ERROR_SERV_EPERM";
    if (errorCode == -2146499537) return "SCE_SBL_ERROR_SERV_EPLATFORM";
    if (errorCode == -2146499536) return "SCE_SBL_ERROR_SERV_EPOWER";
    if (errorCode == -2146499527) return "SCE_SBL_ERROR_SERV_EPURPOSE";
    if (errorCode == -2146499524) return "SCE_SBL_ERROR_SERV_EQAF";
    if (errorCode == -2146499550) return "SCE_SBL_ERROR_SERV_ERANGE";
    if (errorCode == -2146499540) return "SCE_SBL_ERROR_SERV_EREVOKED";
    if (errorCode == -2146499548) return "SCE_SBL_ERROR_SERV_ESIGN";
    if (errorCode == -2146499581) return "SCE_SBL_ERROR_SERV_ESRCH";
    if (errorCode == -2146499543) return "SCE_SBL_ERROR_SERV_ESTACK";
    if (errorCode == -2146499544) return "SCE_SBL_ERROR_SERV_ESTAT";
    if (errorCode == -2146499528) return "SCE_SBL_ERROR_SERV_ESYSEXVER";
    if (errorCode == -2146499529) return "SCE_SBL_ERROR_SERV_ESYSVER";
    if (errorCode == -2146499545) return "SCE_SBL_ERROR_SERV_ETIMEDOUT";
    if (errorCode == -2146499538) return "SCE_SBL_ERROR_SERV_EVER";
    if (errorCode == -2146499533) return "SCE_SBL_ERROR_SERV_EXPIRED";
    if (errorCode == -2146499530) return "SCE_SBL_ERROR_SERV_KEY_DIFFER";
    if (errorCode == -2146500339) return "SCE_SBL_ERROR_SK_EACCES";
    if (errorCode == -2146500341) return "SCE_SBL_ERROR_SK_EAGAIN";
    if (errorCode == -2146500299) return "SCE_SBL_ERROR_SK_EAUTHFAIL";
    if (errorCode == -2146500309) return "SCE_SBL_ERROR_SK_EBADMSG";
    if (errorCode == -2146500336) return "SCE_SBL_ERROR_SK_EBUSY";
    if (errorCode == -2146500303) return "SCE_SBL_ERROR_SK_ECLOCK";
    if (errorCode == -2146500314) return "SCE_SBL_ERROR_SK_EDATA";
    if (errorCode == -2146500335) return "SCE_SBL_ERROR_SK_EEXIST";
    if (errorCode == -2146500338) return "SCE_SBL_ERROR_SK_EFAULT";
    if (errorCode == -2146500317) return "SCE_SBL_ERROR_SK_EFMT";
    if (errorCode == -2146500300) return "SCE_SBL_ERROR_SK_EFORMAT";
    if (errorCode == -2146500348) return "SCE_SBL_ERROR_SK_EINTR";
    if (errorCode == -2146500330) return "SCE_SBL_ERROR_SK_EINVAL";
    if (errorCode == -2146500347) return "SCE_SBL_ERROR_SK_EIO";
    if (errorCode == -2146500293) return "SCE_SBL_ERROR_SK_EMODE";
    if (errorCode == -2146500310) return "SCE_SBL_ERROR_SK_ENEEDAUTH";
    if (errorCode == -2146500307) return "SCE_SBL_ERROR_SK_ENOATTR";
    if (errorCode == -2146500333) return "SCE_SBL_ERROR_SK_ENODEV";
    if (errorCode == -2146500350) return "SCE_SBL_ERROR_SK_ENOENT";
    if (errorCode == -2146500344) return "SCE_SBL_ERROR_SK_ENOEXEC";
    if (errorCode == -2146500340) return "SCE_SBL_ERROR_SK_ENOMEM";
    if (errorCode == -2146500324) return "SCE_SBL_ERROR_SK_ENOSPC";
    if (errorCode == -2146500302) return "SCE_SBL_ERROR_SK_ENOTINITIALIZED";
    if (errorCode == -2146500315) return "SCE_SBL_ERROR_SK_ENOTSUP";
    if (errorCode == -2146500294) return "SCE_SBL_ERROR_SK_EPATH";
    if (errorCode == -2146500351) return "SCE_SBL_ERROR_SK_EPERM";
    if (errorCode == -2146500305) return "SCE_SBL_ERROR_SK_EPLATFORM";
    if (errorCode == -2146500304) return "SCE_SBL_ERROR_SK_EPOWER";
    if (errorCode == -2146500295) return "SCE_SBL_ERROR_SK_EPURPOSE";
    if (errorCode == -2146500292) return "SCE_SBL_ERROR_SK_EQAF";
    if (errorCode == -2146500318) return "SCE_SBL_ERROR_SK_ERANGE";
    if (errorCode == -2146500308) return "SCE_SBL_ERROR_SK_EREVOKED";
    if (errorCode == -2146500316) return "SCE_SBL_ERROR_SK_ESIGN";
    if (errorCode == -2146500349) return "SCE_SBL_ERROR_SK_ESRCH";
    if (errorCode == -2146500311) return "SCE_SBL_ERROR_SK_ESTACK";
    if (errorCode == -2146500312) return "SCE_SBL_ERROR_SK_ESTAT";
    if (errorCode == -2146500296) return "SCE_SBL_ERROR_SK_ESYSEXVER";
    if (errorCode == -2146500297) return "SCE_SBL_ERROR_SK_ESYSVER";
    if (errorCode == -2146500313) return "SCE_SBL_ERROR_SK_ETIMEDOUT";
    if (errorCode == -2146500306) return "SCE_SBL_ERROR_SK_EVER";
    if (errorCode == -2146500301) return "SCE_SBL_ERROR_SK_EXPIRED";
    if (errorCode == -2146500298) return "SCE_SBL_ERROR_SK_KEY_DIFFER";
    if (errorCode == -2146500083) return "SCE_SBL_ERROR_SL_EACCES";
    if (errorCode == -2146500085) return "SCE_SBL_ERROR_SL_EAGAIN";
    if (errorCode == -2146500043) return "SCE_SBL_ERROR_SL_EAUTHFAIL";
    if (errorCode == -2146500053) return "SCE_SBL_ERROR_SL_EBADMSG";
    if (errorCode == -2146500080) return "SCE_SBL_ERROR_SL_EBUSY";
    if (errorCode == -2146500047) return "SCE_SBL_ERROR_SL_ECLOCK";
    if (errorCode == -2146500058) return "SCE_SBL_ERROR_SL_EDATA";
    if (errorCode == -2146500079) return "SCE_SBL_ERROR_SL_EEXIST";
    if (errorCode == -2146500082) return "SCE_SBL_ERROR_SL_EFAULT";
    if (errorCode == -2146500061) return "SCE_SBL_ERROR_SL_EFMT";
    if (errorCode == -2146500044) return "SCE_SBL_ERROR_SL_EFORMAT";
    if (errorCode == -2146500092) return "SCE_SBL_ERROR_SL_EINTR";
    if (errorCode == -2146500074) return "SCE_SBL_ERROR_SL_EINVAL";
    if (errorCode == -2146500091) return "SCE_SBL_ERROR_SL_EIO";
    if (errorCode == -2146500037) return "SCE_SBL_ERROR_SL_EMODE";
    if (errorCode == -2146500054) return "SCE_SBL_ERROR_SL_ENEEDAUTH";
    if (errorCode == -2146500051) return "SCE_SBL_ERROR_SL_ENOATTR";
    if (errorCode == -2146500077) return "SCE_SBL_ERROR_SL_ENODEV";
    if (errorCode == -2146500094) return "SCE_SBL_ERROR_SL_ENOENT";
    if (errorCode == -2146500088) return "SCE_SBL_ERROR_SL_ENOEXEC";
    if (errorCode == -2146500084) return "SCE_SBL_ERROR_SL_ENOMEM";
    if (errorCode == -2146500068) return "SCE_SBL_ERROR_SL_ENOSPC";
    if (errorCode == -2146500046) return "SCE_SBL_ERROR_SL_ENOTINITIALIZED";
    if (errorCode == -2146500059) return "SCE_SBL_ERROR_SL_ENOTSUP";
    if (errorCode == -2146500038) return "SCE_SBL_ERROR_SL_EPATH";
    if (errorCode == -2146500095) return "SCE_SBL_ERROR_SL_EPERM";
    if (errorCode == -2146500049) return "SCE_SBL_ERROR_SL_EPLATFORM";
    if (errorCode == -2146500048) return "SCE_SBL_ERROR_SL_EPOWER";
    if (errorCode == -2146500039) return "SCE_SBL_ERROR_SL_EPURPOSE";
    if (errorCode == -2146500036) return "SCE_SBL_ERROR_SL_EQAF";
    if (errorCode == -2146500062) return "SCE_SBL_ERROR_SL_ERANGE";
    if (errorCode == -2146500052) return "SCE_SBL_ERROR_SL_EREVOKED";
    if (errorCode == -2146500060) return "SCE_SBL_ERROR_SL_ESIGN";
    if (errorCode == -2146500093) return "SCE_SBL_ERROR_SL_ESRCH";
    if (errorCode == -2146500055) return "SCE_SBL_ERROR_SL_ESTACK";
    if (errorCode == -2146500056) return "SCE_SBL_ERROR_SL_ESTAT";
    if (errorCode == -2146500040) return "SCE_SBL_ERROR_SL_ESYSEXVER";
    if (errorCode == -2146500041) return "SCE_SBL_ERROR_SL_ESYSVER";
    if (errorCode == -2146500057) return "SCE_SBL_ERROR_SL_ETIMEDOUT";
    if (errorCode == -2146500050) return "SCE_SBL_ERROR_SL_EVER";
    if (errorCode == -2146500045) return "SCE_SBL_ERROR_SL_EXPIRED";
    if (errorCode == -2146500042) return "SCE_SBL_ERROR_SL_KEY_DIFFER";
    if (errorCode == -2146499315) return "SCE_SBL_ERROR_SRTC_EACCES";
    if (errorCode == -2146499317) return "SCE_SBL_ERROR_SRTC_EAGAIN";
    if (errorCode == -2146499275) return "SCE_SBL_ERROR_SRTC_EAUTHFAIL";
    if (errorCode == -2146499285) return "SCE_SBL_ERROR_SRTC_EBADMSG";
    if (errorCode == -2146499312) return "SCE_SBL_ERROR_SRTC_EBUSY";
    if (errorCode == -2146499279) return "SCE_SBL_ERROR_SRTC_ECLOCK";
    if (errorCode == -2146499290) return "SCE_SBL_ERROR_SRTC_EDATA";
    if (errorCode == -2146499311) return "SCE_SBL_ERROR_SRTC_EEXIST";
    if (errorCode == -2146499314) return "SCE_SBL_ERROR_SRTC_EFAULT";
    if (errorCode == -2146499293) return "SCE_SBL_ERROR_SRTC_EFMT";
    if (errorCode == -2146499276) return "SCE_SBL_ERROR_SRTC_EFORMAT";
    if (errorCode == -2146499324) return "SCE_SBL_ERROR_SRTC_EINTR";
    if (errorCode == -2146499306) return "SCE_SBL_ERROR_SRTC_EINVAL";
    if (errorCode == -2146499323) return "SCE_SBL_ERROR_SRTC_EIO";
    if (errorCode == -2146499269) return "SCE_SBL_ERROR_SRTC_EMODE";
    if (errorCode == -2146499286) return "SCE_SBL_ERROR_SRTC_ENEEDAUTH";
    if (errorCode == -2146499283) return "SCE_SBL_ERROR_SRTC_ENOATTR";
    if (errorCode == -2146499309) return "SCE_SBL_ERROR_SRTC_ENODEV";
    if (errorCode == -2146499326) return "SCE_SBL_ERROR_SRTC_ENOENT";
    if (errorCode == -2146499320) return "SCE_SBL_ERROR_SRTC_ENOEXEC";
    if (errorCode == -2146499316) return "SCE_SBL_ERROR_SRTC_ENOMEM";
    if (errorCode == -2146499300) return "SCE_SBL_ERROR_SRTC_ENOSPC";
    if (errorCode == -2146499278) return "SCE_SBL_ERROR_SRTC_ENOTINITIALIZED";
    if (errorCode == -2146499291) return "SCE_SBL_ERROR_SRTC_ENOTSUP";
    if (errorCode == -2146499270) return "SCE_SBL_ERROR_SRTC_EPATH";
    if (errorCode == -2146499327) return "SCE_SBL_ERROR_SRTC_EPERM";
    if (errorCode == -2146499281) return "SCE_SBL_ERROR_SRTC_EPLATFORM";
    if (errorCode == -2146499280) return "SCE_SBL_ERROR_SRTC_EPOWER";
    if (errorCode == -2146499271) return "SCE_SBL_ERROR_SRTC_EPURPOSE";
    if (errorCode == -2146499268) return "SCE_SBL_ERROR_SRTC_EQAF";
    if (errorCode == -2146499294) return "SCE_SBL_ERROR_SRTC_ERANGE";
    if (errorCode == -2146499284) return "SCE_SBL_ERROR_SRTC_EREVOKED";
    if (errorCode == -2146499292) return "SCE_SBL_ERROR_SRTC_ESIGN";
    if (errorCode == -2146499325) return "SCE_SBL_ERROR_SRTC_ESRCH";
    if (errorCode == -2146499287) return "SCE_SBL_ERROR_SRTC_ESTACK";
    if (errorCode == -2146499288) return "SCE_SBL_ERROR_SRTC_ESTAT";
    if (errorCode == -2146499272) return "SCE_SBL_ERROR_SRTC_ESYSEXVER";
    if (errorCode == -2146499273) return "SCE_SBL_ERROR_SRTC_ESYSVER";
    if (errorCode == -2146499289) return "SCE_SBL_ERROR_SRTC_ETIMEDOUT";
    if (errorCode == -2146499282) return "SCE_SBL_ERROR_SRTC_EVER";
    if (errorCode == -2146499277) return "SCE_SBL_ERROR_SRTC_EXPIRED";
    if (errorCode == -2146499274) return "SCE_SBL_ERROR_SRTC_KEY_DIFFER";
    if (errorCode == -2146498803) return "SCE_SBL_ERROR_VTRM_EACCES";
    if (errorCode == -2146498805) return "SCE_SBL_ERROR_VTRM_EAGAIN";
    if (errorCode == -2146498763) return "SCE_SBL_ERROR_VTRM_EAUTHFAIL";
    if (errorCode == -2146498773) return "SCE_SBL_ERROR_VTRM_EBADMSG";
    if (errorCode == -2146498800) return "SCE_SBL_ERROR_VTRM_EBUSY";
    if (errorCode == -2146498767) return "SCE_SBL_ERROR_VTRM_ECLOCK";
    if (errorCode == -2146498778) return "SCE_SBL_ERROR_VTRM_EDATA";
    if (errorCode == -2146498799) return "SCE_SBL_ERROR_VTRM_EEXIST";
    if (errorCode == -2146498802) return "SCE_SBL_ERROR_VTRM_EFAULT";
    if (errorCode == -2146498781) return "SCE_SBL_ERROR_VTRM_EFMT";
    if (errorCode == -2146498764) return "SCE_SBL_ERROR_VTRM_EFORMAT";
    if (errorCode == -2146498812) return "SCE_SBL_ERROR_VTRM_EINTR";
    if (errorCode == -2146498794) return "SCE_SBL_ERROR_VTRM_EINVAL";
    if (errorCode == -2146498811) return "SCE_SBL_ERROR_VTRM_EIO";
    if (errorCode == -2146498757) return "SCE_SBL_ERROR_VTRM_EMODE";
    if (errorCode == -2146498774) return "SCE_SBL_ERROR_VTRM_ENEEDAUTH";
    if (errorCode == -2146498771) return "SCE_SBL_ERROR_VTRM_ENOATTR";
    if (errorCode == -2146498797) return "SCE_SBL_ERROR_VTRM_ENODEV";
    if (errorCode == -2146498814) return "SCE_SBL_ERROR_VTRM_ENOENT";
    if (errorCode == -2146498808) return "SCE_SBL_ERROR_VTRM_ENOEXEC";
    if (errorCode == -2146498804) return "SCE_SBL_ERROR_VTRM_ENOMEM";
    if (errorCode == -2146498788) return "SCE_SBL_ERROR_VTRM_ENOSPC";
    if (errorCode == -2146498766) return "SCE_SBL_ERROR_VTRM_ENOTINITIALIZED";
    if (errorCode == -2146498779) return "SCE_SBL_ERROR_VTRM_ENOTSUP";
    if (errorCode == -2146498758) return "SCE_SBL_ERROR_VTRM_EPATH";
    if (errorCode == -2146498815) return "SCE_SBL_ERROR_VTRM_EPERM";
    if (errorCode == -2146498769) return "SCE_SBL_ERROR_VTRM_EPLATFORM";
    if (errorCode == -2146498768) return "SCE_SBL_ERROR_VTRM_EPOWER";
    if (errorCode == -2146498759) return "SCE_SBL_ERROR_VTRM_EPURPOSE";
    if (errorCode == -2146498756) return "SCE_SBL_ERROR_VTRM_EQAF";
    if (errorCode == -2146498782) return "SCE_SBL_ERROR_VTRM_ERANGE";
    if (errorCode == -2146498772) return "SCE_SBL_ERROR_VTRM_EREVOKED";
    if (errorCode == -2146498780) return "SCE_SBL_ERROR_VTRM_ESIGN";
    if (errorCode == -2146498813) return "SCE_SBL_ERROR_VTRM_ESRCH";
    if (errorCode == -2146498775) return "SCE_SBL_ERROR_VTRM_ESTACK";
    if (errorCode == -2146498776) return "SCE_SBL_ERROR_VTRM_ESTAT";
    if (errorCode == -2146498760) return "SCE_SBL_ERROR_VTRM_ESYSEXVER";
    if (errorCode == -2146498761) return "SCE_SBL_ERROR_VTRM_ESYSVER";
    if (errorCode == -2146498777) return "SCE_SBL_ERROR_VTRM_ETIMEDOUT";
    if (errorCode == -2146498770) return "SCE_SBL_ERROR_VTRM_EVER";
    if (errorCode == -2146498765) return "SCE_SBL_ERROR_VTRM_EXPIRED";
    if (errorCode == -2146498762) return "SCE_SBL_ERROR_VTRM_KEY_DIFFER";
    if (errorCode == -2134703359) return "SCE_SCREENSHOT_SYS_ERROR_DISPLAY_BUFFER_NOT_IN_USE";
    if (errorCode == -2134703357) return "SCE_SCREENSHOT_SYS_ERROR_DISPLAY_BUFFER_ON_MUTE";
    if (errorCode == -2134703358) return "SCE_SCREENSHOT_SYS_ERROR_DISPLAY_BUFFER_RETRY_COUNT_MAX";
    if (errorCode == -2134703356) return "SCE_SCREENSHOT_SYS_ERROR_DISPLAY_BUFFER_TOO_BIG";
    if (errorCode == -2134704126) return "SCE_SCREENSHOT_SYS_ERROR_FATAL";
    if (errorCode == -2134703871) return "SCE_SCREENSHOT_SYS_ERROR_GOTO_PROCESS_SUSPEND";
    if (errorCode == -2134702847) return "SCE_SCREENSHOT_SYS_ERROR_LOCK_RESOURCE";
    if (errorCode == -2134703615) return "SCE_SCREENSHOT_SYS_ERROR_MAP_ADDRESS";
    if (errorCode == -2134703613) return "SCE_SCREENSHOT_SYS_ERROR_REMAP_TO_VMID0";
    if (errorCode == -2134703103) return "SCE_SCREENSHOT_SYS_ERROR_SDMA_COPY";
    if (errorCode == -2134704127) return "SCE_SCREENSHOT_SYS_ERROR_UNKNOWN";
    if (errorCode == -2134703614) return "SCE_SCREENSHOT_SYS_ERROR_UNMAP_ADDRESS";
    if (errorCode == -2132082429) return "SCE_SCREENSHOT_UTIL_ERROR_ABORT";
    if (errorCode == -2132082679) return "SCE_SCREENSHOT_UTIL_ERROR_CAPTURE_BUSY";
    if (errorCode == -2132082678) return "SCE_SCREENSHOT_UTIL_ERROR_CAPTURE_CANCELED";
    if (errorCode == -2132082680) return "SCE_SCREENSHOT_UTIL_ERROR_CAPTURE_FAILED";
    if (errorCode == -2132082676) return "SCE_SCREENSHOT_UTIL_ERROR_CONTENT_FULL";
    if (errorCode == -2132082381) return "SCE_SCREENSHOT_UTIL_ERROR_DISPLAY_BUFFER_NOT_IN_USE";
    if (errorCode == -2132082379) return "SCE_SCREENSHOT_UTIL_ERROR_DISPLAY_BUFFER_ON_MUTE";
    if (errorCode == -2132082380) return "SCE_SCREENSHOT_UTIL_ERROR_DISPLAY_BUFFER_RETRY_COUNT_MAX";
    if (errorCode == -2132082685) return "SCE_SCREENSHOT_UTIL_ERROR_FILE_NOT_FOUND";
    if (errorCode == -2132082382) return "SCE_SCREENSHOT_UTIL_ERROR_GOTO_PROCESS_SUSPEND";
    if (errorCode == -2132082682) return "SCE_SCREENSHOT_UTIL_ERROR_INTERNAL";
    if (errorCode == -2132082687) return "SCE_SCREENSHOT_UTIL_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2132082675) return "SCE_SCREENSHOT_UTIL_ERROR_INVALID_DATA";
    if (errorCode == -2132082428) return "SCE_SCREENSHOT_UTIL_ERROR_MAIN_THREAD_CALL";
    if (errorCode == -2132082683) return "SCE_SCREENSHOT_UTIL_ERROR_MEDIA_FULL";
    if (errorCode == -2132082677) return "SCE_SCREENSHOT_UTIL_ERROR_MEDIA_NOT_EXIST";
    if (errorCode == -2132082686) return "SCE_SCREENSHOT_UTIL_ERROR_NO_MEMORY";
    if (errorCode == -2132082674) return "SCE_SCREENSHOT_UTIL_ERROR_NOT_SUPPORTED_DATA";
    if (errorCode == -2132082684) return "SCE_SCREENSHOT_UTIL_ERROR_NOT_SUPPORTED_FORMAT";
    if (errorCode == -2132082367) return "SCE_SCREENSHOT_UTIL_ERROR_NOT_SUPPORTED_PLATFORM";
    if (errorCode == -2132082681) return "SCE_SCREENSHOT_UTIL_ERROR_SCREENSHOT_DISABLED";
    if (errorCode == -2132082399) return "SCE_SCREENSHOT_UTIL_ERROR_SERVER_BUSY";
    if (errorCode == -2132082397) return "SCE_SCREENSHOT_UTIL_ERROR_SERVER_NO_MEMORY";
    if (errorCode == -2132082398) return "SCE_SCREENSHOT_UTIL_ERROR_SERVER_NOT_EXIST";
    if (errorCode == -2132082383) return "SCE_SCREENSHOT_UTIL_ERROR_SYS_FATAL_ERROR";
    if (errorCode == -2142697984) return "SCE_SFMT11213_ERROR_INVALID_POINTER";
    if (errorCode == -2142697982) return "SCE_SFMT11213_ERROR_INVALID_SIZE";
    if (errorCode == -2142697983) return "SCE_SFMT11213_ERROR_INVALID_STATE";
    if (errorCode == -2142698752) return "SCE_SFMT1279_ERROR_INVALID_POINTER";
    if (errorCode == -2142698750) return "SCE_SFMT1279_ERROR_INVALID_SIZE";
    if (errorCode == -2142698751) return "SCE_SFMT1279_ERROR_INVALID_STATE";
    if (errorCode == -2142696960) return "SCE_SFMT132049_ERROR_INVALID_POINTER";
    if (errorCode == -2142696958) return "SCE_SFMT132049_ERROR_INVALID_SIZE";
    if (errorCode == -2142696959) return "SCE_SFMT132049_ERROR_INVALID_STATE";
    if (errorCode == -2142697728) return "SCE_SFMT19937_ERROR_INVALID_POINTER";
    if (errorCode == -2142697726) return "SCE_SFMT19937_ERROR_INVALID_SIZE";
    if (errorCode == -2142697727) return "SCE_SFMT19937_ERROR_INVALID_STATE";
    if (errorCode == -2142696704) return "SCE_SFMT216091_ERROR_INVALID_POINTER";
    if (errorCode == -2142696702) return "SCE_SFMT216091_ERROR_INVALID_SIZE";
    if (errorCode == -2142696703) return "SCE_SFMT216091_ERROR_INVALID_STATE";
    if (errorCode == -2142698496) return "SCE_SFMT2281_ERROR_INVALID_POINTER";
    if (errorCode == -2142698494) return "SCE_SFMT2281_ERROR_INVALID_SIZE";
    if (errorCode == -2142698495) return "SCE_SFMT2281_ERROR_INVALID_STATE";
    if (errorCode == -2142698240) return "SCE_SFMT4253_ERROR_INVALID_POINTER";
    if (errorCode == -2142698238) return "SCE_SFMT4253_ERROR_INVALID_SIZE";
    if (errorCode == -2142698239) return "SCE_SFMT4253_ERROR_INVALID_STATE";
    if (errorCode == -2142697472) return "SCE_SFMT44497_ERROR_INVALID_POINTER";
    if (errorCode == -2142697470) return "SCE_SFMT44497_ERROR_INVALID_SIZE";
    if (errorCode == -2142697471) return "SCE_SFMT44497_ERROR_INVALID_STATE";
    if (errorCode == -2142699008) return "SCE_SFMT607_ERROR_INVALID_POINTER";
    if (errorCode == -2142699006) return "SCE_SFMT607_ERROR_INVALID_SIZE";
    if (errorCode == -2142699007) return "SCE_SFMT607_ERROR_INVALID_STATE";
    if (errorCode == -2142697216) return "SCE_SFMT86243_ERROR_INVALID_POINTER";
    if (errorCode == -2142697214) return "SCE_SFMT86243_ERROR_INVALID_SIZE";
    if (errorCode == -2142697215) return "SCE_SFMT86243_ERROR_INVALID_STATE";
    if (errorCode == -2142764544) return "SCE_SHA0_ERROR_INVALID_POINTER";
    if (errorCode == -2142764543) return "SCE_SHA0_ERROR_INVALID_STATE";
    if (errorCode == -2142764542) return "SCE_SHA0_ERROR_UNINITIALIZED_CONTEXT";
    if (errorCode == -2142764288) return "SCE_SHA1_ERROR_INVALID_POINTER";
    if (errorCode == -2142764287) return "SCE_SHA1_ERROR_INVALID_STATE";
    if (errorCode == -2142764286) return "SCE_SHA1_ERROR_UNINITIALIZED_CONTEXT";
    if (errorCode == -2142764032) return "SCE_SHA224_ERROR_INVALID_POINTER";
    if (errorCode == -2142764031) return "SCE_SHA224_ERROR_INVALID_STATE";
    if (errorCode == -2142764030) return "SCE_SHA224_ERROR_UNINITIALIZED_CONTEXT";
    if (errorCode == -2142763776) return "SCE_SHA256_ERROR_INVALID_POINTER";
    if (errorCode == -2142763775) return "SCE_SHA256_ERROR_INVALID_STATE";
    if (errorCode == -2142763774) return "SCE_SHA256_ERROR_UNINITIALIZED_CONTEXT";
    if (errorCode == -2142763520) return "SCE_SHA384_ERROR_INVALID_POINTER";
    if (errorCode == -2142763519) return "SCE_SHA384_ERROR_INVALID_STATE";
    if (errorCode == -2142763518) return "SCE_SHA384_ERROR_UNINITIALIZED_CONTEXT";
    if (errorCode == -2142763264) return "SCE_SHA512_ERROR_INVALID_POINTER";
    if (errorCode == -2142763263) return "SCE_SHA512_ERROR_INVALID_STATE";
    if (errorCode == -2142763262) return "SCE_SHA512_ERROR_UNINITIALIZED_CONTEXT";
    if (errorCode == -2142763006) return "SCE_SHA512T_ERROR_INVALID_DIGEST_SIZE";
    if (errorCode == -2142763008) return "SCE_SHA512T_ERROR_INVALID_POINTER";
    if (errorCode == -2142763007) return "SCE_SHA512T_ERROR_INVALID_STATE";
    if (errorCode == -2142763005) return "SCE_SHA512T_ERROR_UNINITIALIZED_CONTEXT";
    if (errorCode == -2137980927) return "SCE_SHADER_BINARY_ERROR_INVALID_ADDR";
    if (errorCode == -2137980926) return "SCE_SHADER_BINARY_ERROR_INVALID_SIZE";
    if (errorCode == -2142437375) return "SCE_SULPHA_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2142437365) return "SCE_SULPHA_ERROR_CAPTURE_STARTED";
    if (errorCode == -2142437369) return "SCE_SULPHA_ERROR_CONNECTION";
    if (errorCode == -2142437363) return "SCE_SULPHA_ERROR_CONNECTION_TIMEOUT";
    if (errorCode == -2142437367) return "SCE_SULPHA_ERROR_INVALID_AGENT";
    if (errorCode == -2142437372) return "SCE_SULPHA_ERROR_INVALID_ALIGNMENT";
    if (errorCode == -2142437373) return "SCE_SULPHA_ERROR_INVALID_ARG";
    if (errorCode == -2142437368) return "SCE_SULPHA_ERROR_NETWORK_OWNERSHIP";
    if (errorCode == -2142437366) return "SCE_SULPHA_ERROR_NOT_CONNECTED";
    if (errorCode == -2142437364) return "SCE_SULPHA_ERROR_OUT_OF_BOOKMARKS";
    if (errorCode == -2142437371) return "SCE_SULPHA_ERROR_OUT_OF_MEMORY";
    if (errorCode == -2142437374) return "SCE_SULPHA_ERROR_UNINITIALIZED";
    if (errorCode == -2142437370) return "SCE_SULPHA_ERROR_UNSUPPORTED";
    if (errorCode == -2136342513) return "SCE_SYSCORE_ERROR_ALREADY_RUNNING";
    if (errorCode == -2136342508) return "SCE_SYSCORE_ERROR_APPLICATION_ALREADY_RESUMED";
    if (errorCode == -2136342509) return "SCE_SYSCORE_ERROR_APPLICATION_ALREADY_SUSPENDED";
    if (errorCode == -2136342507) return "SCE_SYSCORE_ERROR_APPLICATION_NOT_FOUND";
    if (errorCode == -2136342511) return "SCE_SYSCORE_ERROR_APPLICATION_SUSPENDED";
    if (errorCode == -2136342514) return "SCE_SYSCORE_ERROR_DEVKIT_EXPIRED";
    if (errorCode == -2136342526) return "SCE_SYSCORE_ERROR_INVALID";
    if (errorCode == -2136342510) return "SCE_SYSCORE_ERROR_INVALID_TITLE_ID";
    if (errorCode == -2136342518) return "SCE_SYSCORE_ERROR_LNC_INVALID_STATE";
    if (errorCode == -2136342521) return "SCE_SYSCORE_ERROR_MAX_APP_NUM";
    if (errorCode == -2136342520) return "SCE_SYSCORE_ERROR_MAX_PROCESS_NUM_PER_APP";
    if (errorCode == -2136342515) return "SCE_SYSCORE_ERROR_NO_LOGIN_USER";
    if (errorCode == -2136342516) return "SCE_SYSCORE_ERROR_NOEXIST_APP";
    if (errorCode == -2136342512) return "SCE_SYSCORE_ERROR_NOEXIST_PROCESS";
    if (errorCode == -2136342524) return "SCE_SYSCORE_ERROR_NOT_INITIALIZE";
    if (errorCode == -2136342527) return "SCE_SYSCORE_ERROR_NULL";
    if (errorCode == -2136342517) return "SCE_SYSCORE_ERROR_PERMISSION";
    if (errorCode == -2136342519) return "SCE_SYSCORE_ERROR_PROCESS_SETUP_WORKDIR";
    if (errorCode == -2136342523) return "SCE_SYSCORE_ERROR_QUEUE_EMPTY";
    if (errorCode == -2136342522) return "SCE_SYSCORE_ERROR_QUEUE_FULL";
    if (errorCode == -2136342525) return "SCE_SYSCORE_ERROR_STATE";
    if (errorCode == -2141581057) return "SCE_SYSMODULE_ERROR_FATAL";
    if (errorCode == -2141581312) return "SCE_SYSMODULE_ERROR_INVALID_VALUE";
    if (errorCode == -2141581311) return "SCE_SYSMODULE_ERROR_UNLOADED";
    if (errorCode == -2138505206) return "SCE_SYSTEM_GESTURE_ERROR_ALREADY_OPENED";
    if (errorCode == -2138505211) return "SCE_SYSTEM_GESTURE_ERROR_EVENT_DATA_NOT_FOUND";
    if (errorCode == -2138505212) return "SCE_SYSTEM_GESTURE_ERROR_INDEX_OUT_OF_ARRAY";
    if (errorCode == -2138505215) return "SCE_SYSTEM_GESTURE_ERROR_INVALID_ARGUMENT";
    if (errorCode == -2138505210) return "SCE_SYSTEM_GESTURE_ERROR_INVALID_HANDLE";
    if (errorCode == -2138505209) return "SCE_SYSTEM_GESTURE_ERROR_INVALID_TOUCH_AREA";
    if (errorCode == -2138505208) return "SCE_SYSTEM_GESTURE_ERROR_NO_TOUCH_AREA_INFORMATION";
    if (errorCode == -2138505213) return "SCE_SYSTEM_GESTURE_ERROR_NOT_INITIALIZED";
    if (errorCode == -2138505214) return "SCE_SYSTEM_GESTURE_ERROR_NOT_SUPPORTED_GESTURE";
    if (errorCode == -2138505207) return "SCE_SYSTEM_GESTURE_ERROR_OUT_OF_RECOGNIZER";
    if (errorCode == -2136932351) return "SCE_SYSTEM_SERVICE_ERROR_INTERNAL";
    if (errorCode == -2136932345) return "SCE_SYSTEM_SERVICE_ERROR_INVALID_URI_LEN";
    if (errorCode == -2136932344) return "SCE_SYSTEM_SERVICE_ERROR_INVALID_URI_SCHEME";
    if (errorCode == -2136932346) return "SCE_SYSTEM_SERVICE_ERROR_NEED_DISPLAY_SAFE_AREA_SETTINGS";
    if (errorCode == -2136932343) return "SCE_SYSTEM_SERVICE_ERROR_NO_APP_INFO";
    if (errorCode == -2136932348) return "SCE_SYSTEM_SERVICE_ERROR_NO_EVENT";
    if (errorCode == -2136932349) return "SCE_SYSTEM_SERVICE_ERROR_PARAMETER";
    if (errorCode == -2136932347) return "SCE_SYSTEM_SERVICE_ERROR_REJECTED";
    if (errorCode == -2136932350) return "SCE_SYSTEM_SERVICE_ERROR_UNAVAILABLE";
    if (errorCode == -2133393403) return "SCE_TEXTURE_TOOL_ERROR_COMPUTE_COMPRESS_ALLOCATE_FAILURE_FROM_DCB";
    if (errorCode == -2133393406) return "SCE_TEXTURE_TOOL_ERROR_COMPUTE_COMPRESS_BUFFER_SIZE";
    if (errorCode == -2133393407) return "SCE_TEXTURE_TOOL_ERROR_COMPUTE_COMPRESS_INVALID_BC_ENCODER";
    if (errorCode == -2133393408) return "SCE_TEXTURE_TOOL_ERROR_COMPUTE_COMPRESS_INVALID_FORMAT";
    if (errorCode == -2133393405) return "SCE_TEXTURE_TOOL_ERROR_COMPUTE_COMPRESS_INVALID_POINTER_OR_ENCODER";
    if (errorCode == -2133393404) return "SCE_TEXTURE_TOOL_ERROR_COMPUTE_COMPRESS_INVALID_TEXTURE";
    if (errorCode == -2133393147) return "SCE_TEXTURE_TOOL_ERROR_GNF_ALIGNMENT_OUT_OF_RANGE";
    if (errorCode == -2133393145) return "SCE_TEXTURE_TOOL_ERROR_GNF_CANNOT_OPEN_FILE_FOR_READ";
    if (errorCode == -2133393146) return "SCE_TEXTURE_TOOL_ERROR_GNF_CONTENTS_SIZE_MISMATCH";
    if (errorCode == -2133393150) return "SCE_TEXTURE_TOOL_ERROR_GNF_CORRUPT_HEADER";
    if (errorCode == -2133393149) return "SCE_TEXTURE_TOOL_ERROR_GNF_FILE_IS_TOO_SHORT";
    if (errorCode == -2133393152) return "SCE_TEXTURE_TOOL_ERROR_GNF_INVALID_POINTER";
    if (errorCode == -2133393151) return "SCE_TEXTURE_TOOL_ERROR_GNF_NOT_GNF_FILE";
    if (errorCode == -2133393144) return "SCE_TEXTURE_TOOL_ERROR_GNF_PIXEL_DATA_SIZE_MISMATCH";
    if (errorCode == -2133393148) return "SCE_TEXTURE_TOOL_ERROR_GNF_VERSION_MISMATCH";
    if (errorCode == -2139029496) return "SCE_ULT_ERROR_AGAIN";
    if (errorCode == -2139029502) return "SCE_ULT_ERROR_ALIGNMENT";
    if (errorCode == -2139029497) return "SCE_ULT_ERROR_BUSY";
    if (errorCode == -2139029495) return "SCE_ULT_ERROR_FATAL";
    if (errorCode == -2139029500) return "SCE_ULT_ERROR_INVALID";
    if (errorCode == -2139029494) return "SCE_ULT_ERROR_NOT_INITIALIZE";
    if (errorCode == -2139029503) return "SCE_ULT_ERROR_NULL";
    if (errorCode == -2139029499) return "SCE_ULT_ERROR_PERMISSION";
    if (errorCode == -2139029501) return "SCE_ULT_ERROR_RANGE";
    if (errorCode == -2139029498) return "SCE_ULT_ERROR_STATE";
    if (errorCode == -2145124349) return "SCE_USBD_ERROR_ACCESS";
    if (errorCode == -2145124346) return "SCE_USBD_ERROR_BUSY";
    if (errorCode == -2145124097) return "SCE_USBD_ERROR_FATAL";
    if (errorCode == -2145124342) return "SCE_USBD_ERROR_INTERRUPTED";
    if (errorCode == -2145124350) return "SCE_USBD_ERROR_INVALID_ARG";
    if (errorCode == -2145124351) return "SCE_USBD_ERROR_IO";
    if (errorCode == -2145124348) return "SCE_USBD_ERROR_NO_DEVICE";
    if (errorCode == -2145124341) return "SCE_USBD_ERROR_NO_MEM";
    if (errorCode == -2145124347) return "SCE_USBD_ERROR_NOT_FOUND";
    if (errorCode == -2145124340) return "SCE_USBD_ERROR_NOT_SUPPORTED";
    if (errorCode == -2145124344) return "SCE_USBD_ERROR_OVERFLOW";
    if (errorCode == -2145124343) return "SCE_USBD_ERROR_PIPE";
    if (errorCode == -2145124345) return "SCE_USBD_ERROR_TIMEOUT";
    if (errorCode == -2134900735) return "SCE_VDEC_CORE_ERROR_API_FAIL";
    if (errorCode == -2134900733) return "SCE_VDEC_CORE_ERROR_CODEC_TYPE";
    if (errorCode == -2134900714) return "SCE_VDEC_CORE_ERROR_COMPUTE_PIPE_ID";
    if (errorCode == -2134900734) return "SCE_VDEC_CORE_ERROR_CORE_TYPE";
    if (errorCode == -2134900727) return "SCE_VDEC_CORE_ERROR_CPU_GPU_MEMORY_SIZE";
    if (errorCode == -2134900728) return "SCE_VDEC_CORE_ERROR_CPU_MEMORY_SIZE";
    if (errorCode == -2134900731) return "SCE_VDEC_CORE_ERROR_DECODE_MODE";
    if (errorCode == -2134900719) return "SCE_VDEC_CORE_ERROR_EXCEED_INSTANCE";
    if (errorCode == -2134900725) return "SCE_VDEC_CORE_ERROR_FRAME_BUFFER_ALIGNMENT";
    if (errorCode == -2134900726) return "SCE_VDEC_CORE_ERROR_FRAME_BUFFER_SIZE";
    if (errorCode == -2134900723) return "SCE_VDEC_CORE_ERROR_FRAME_FORMAT";
    if (errorCode == -2134900724) return "SCE_VDEC_CORE_ERROR_FRAME_WIDTH_ALIGNMENT";
    if (errorCode == -2134900736) return "SCE_VDEC_CORE_ERROR_HANDLE";
    if (errorCode == -2134900718) return "SCE_VDEC_CORE_ERROR_INPUT_AU";
    if (errorCode == -2134900722) return "SCE_VDEC_CORE_ERROR_INPUT_FULL";
    if (errorCode == -2134900717) return "SCE_VDEC_CORE_ERROR_INPUT_STREAM";
    if (errorCode == -2134900720) return "SCE_VDEC_CORE_ERROR_INVALID_SEQUENCE";
    if (errorCode == -2134900715) return "SCE_VDEC_CORE_ERROR_MAP_COUNT";
    if (errorCode == -2134900730) return "SCE_VDEC_CORE_ERROR_MAX_FRAME_SIZE";
    if (errorCode == -2134900729) return "SCE_VDEC_CORE_ERROR_MEMORY_POINTER";
    if (errorCode == -2134900732) return "SCE_VDEC_CORE_ERROR_MEMORY_TYPE";
    if (errorCode == -2134900721) return "SCE_VDEC_CORE_ERROR_NEW_SEQUENCE";
    if (errorCode == -2134900716) return "SCE_VDEC_CORE_ERROR_RESET_DATA";
    if (errorCode == -2134966271) return "SCE_VENC_CORE_ERROR_API_FAIL";
    if (errorCode == -2134966270) return "SCE_VENC_CORE_ERROR_CORE_TYPE";
    if (errorCode == -2134966264) return "SCE_VENC_CORE_ERROR_CPU_GPU_MEMORY_SIZE";
    if (errorCode == -2134966265) return "SCE_VENC_CORE_ERROR_CPU_MEMORY_SIZE";
    if (errorCode == -2134966262) return "SCE_VENC_CORE_ERROR_FRAME_BUFFER_ALIGNMENT";
    if (errorCode == -2134966263) return "SCE_VENC_CORE_ERROR_FRAME_BUFFER_SIZE";
    if (errorCode == -2134966267) return "SCE_VENC_CORE_ERROR_FRAME_FORMAT";
    if (errorCode == -2134966272) return "SCE_VENC_CORE_ERROR_HANDLE";
    if (errorCode == -2134966260) return "SCE_VENC_CORE_ERROR_MAP_COUNT";
    if (errorCode == -2134966266) return "SCE_VENC_CORE_ERROR_MEMORY_POINTER";
    if (errorCode == -2134966261) return "SCE_VENC_CORE_ERROR_MEMORY_TYPE";
    if (errorCode == -2134966269) return "SCE_VENC_CORE_ERROR_PRESET_BASE";
    if (errorCode == -2134966268) return "SCE_VENC_CORE_ERROR_PRESET_MODE";
    if (errorCode == -2144792564) return "SCE_VIDEO_OUT_ERROR_ENOMEM";
    if (errorCode == -2144796417) return "SCE_VIDEO_OUT_ERROR_FATAL";
    if (errorCode == -2144796654) return "SCE_VIDEO_OUT_ERROR_FLIP_QUEUE_FULL";
    if (errorCode == -2144796670) return "SCE_VIDEO_OUT_ERROR_INVALID_ADDRESS";
    if (errorCode == -2144796664) return "SCE_VIDEO_OUT_ERROR_INVALID_ASPECT_RATIO";
    if (errorCode == -2144796659) return "SCE_VIDEO_OUT_ERROR_INVALID_EVENT";
    if (errorCode == -2144796660) return "SCE_VIDEO_OUT_ERROR_INVALID_EVENT_QUEUE";
    if (errorCode == -2144796666) return "SCE_VIDEO_OUT_ERROR_INVALID_FLIP_MODE";
    if (errorCode == -2144796661) return "SCE_VIDEO_OUT_ERROR_INVALID_HANDLE";
    if (errorCode == -2144796662) return "SCE_VIDEO_OUT_ERROR_INVALID_INDEX";
    if (errorCode == -2144796653) return "SCE_VIDEO_OUT_ERROR_INVALID_MEMORY";
    if (errorCode == -2144796668) return "SCE_VIDEO_OUT_ERROR_INVALID_PITCH";
    if (errorCode == -2144796669) return "SCE_VIDEO_OUT_ERROR_INVALID_PIXEL_FORMAT";
    if (errorCode == -2144796667) return "SCE_VIDEO_OUT_ERROR_INVALID_RESOLUTION";
    if (errorCode == -2144796665) return "SCE_VIDEO_OUT_ERROR_INVALID_TILING_MODE";
    if (errorCode == -2144796671) return "SCE_VIDEO_OUT_ERROR_INVALID_VALUE";
    if (errorCode == -2144796651) return "SCE_VIDEO_OUT_ERROR_MEMORY_INVALID_ALIGNMENT";
    if (errorCode == -2144796652) return "SCE_VIDEO_OUT_ERROR_MEMORY_NOT_PHYSICALLY_CONTIGUOUS";
    if (errorCode == -2144796648) return "SCE_VIDEO_OUT_ERROR_NO_DEVICE";
    if (errorCode == -2144796657) return "SCE_VIDEO_OUT_ERROR_NO_EMPTY_SLOT";
    if (errorCode == -2144796649) return "SCE_VIDEO_OUT_ERROR_OVERFLOW";
    if (errorCode == -2144796663) return "SCE_VIDEO_OUT_ERROR_RESOURCE_BUSY";
    if (errorCode == -2144796656) return "SCE_VIDEO_OUT_ERROR_SLOT_OCCUPIED";
    if (errorCode == -2144796647) return "SCE_VIDEO_OUT_ERROR_UNAVAILABLE_OUTPUT_MODE";
    if (errorCode == -2144796418) return "SCE_VIDEO_OUT_ERROR_UNKNOWN";
    if (errorCode == -2144796650) return "SCE_VIDEO_OUT_ERROR_UNSUPPORTED_OUTPUT_MODE";
    if (errorCode == -2133065703) return "SCE_VIDEOCORE_ERROR_CODE_BACKGROUND";
    if (errorCode == -2133063424) return "SCE_VIDEOCORE_ERROR_CODE_ENABLE_RAZOR";
    if (errorCode == -2133032705) return "SCE_VIDEOCORE_ERROR_CODE_INTERNAL";
    if (errorCode == -2133000448) return "SCE_VIDEOCORE_ERROR_CODE_INTERNAL_CORE";
    if (errorCode == -2133065727) return "SCE_VIDEOCORE_ERROR_CODE_INVALID_PARAM";
    if (errorCode == -2133065472) return "SCE_VIDEOCORE_ERROR_CODE_INVALID_PARAM_CORE";
    if (errorCode == -2133032958) return "SCE_VIDEOCORE_ERROR_CODE_INVALID_PARAM_COREIF";
    if (errorCode == -2133065725) return "SCE_VIDEOCORE_ERROR_CODE_INVALID_STATUS";
    if (errorCode == -2133032448) return "SCE_VIDEOCORE_ERROR_CODE_INVALID_STATUS_CORE";
    if (errorCode == -2133065724) return "SCE_VIDEOCORE_ERROR_CODE_INVALID_STATUS_COREIF";
    if (errorCode == -2133032949) return "SCE_VIDEOCORE_ERROR_CODE_IPMI";
    if (errorCode == -2133030912) return "SCE_VIDEOCORE_ERROR_CODE_IPMI_CORE";
    if (errorCode == -2133032948) return "SCE_VIDEOCORE_ERROR_CODE_IPMI_COREIF";
    if (errorCode == -2133032950) return "SCE_VIDEOCORE_ERROR_CODE_KERNEL_FUNCTION";
    if (errorCode == -2133031168) return "SCE_VIDEOCORE_ERROR_CODE_KERNEL_FUNCTION_CORE";
    if (errorCode == -2133065715) return "SCE_VIDEOCORE_ERROR_CODE_NO_ALLOCATE_MEMORY";
    if (errorCode == -2133065706) return "SCE_VIDEOCORE_ERROR_CODE_NO_DECODER_RESOURCE";
    if (errorCode == -2133064704) return "SCE_VIDEOCORE_ERROR_CODE_NOPLAYABLE";
    if (errorCode == -2133065710) return "SCE_VIDEOCORE_ERROR_CODE_NOT_EXIST_REQUESTID";
    if (errorCode == -2133065707) return "SCE_VIDEOCORE_ERROR_CODE_NOT_EXIST_RESOURCE_HANDLE";
    if (errorCode == -2133064960) return "SCE_VIDEOCORE_ERROR_CODE_NOT_EXIST_STREAM";
    if (errorCode == -2133065722) return "SCE_VIDEOCORE_ERROR_CODE_NOT_EXIST_STREAMID";
    if (errorCode == -2133065709) return "SCE_VIDEOCORE_ERROR_CODE_REGISTERED_CALLBACK_FULL";
    if (errorCode == -2133065711) return "SCE_VIDEOCORE_ERROR_CODE_REQUEST_FULL";
    if (errorCode == -2133065708) return "SCE_VIDEOCORE_ERROR_CODE_RESOURCE_HANDLE_FULL";
    if (errorCode == -2133065712) return "SCE_VIDEOCORE_ERROR_CODE_RESULT_TIMEOUT";
    if (errorCode == -2133032951) return "SCE_VIDEOCORE_ERROR_CODE_SCE_FUNCTION";
    if (errorCode == -2133031424) return "SCE_VIDEOCORE_ERROR_CODE_SCE_FUNCTION_CORE";
    if (errorCode == -2133064448) return "SCE_VIDEOCORE_ERROR_CODE_STOP";
    if (errorCode == -2133065704) return "SCE_VIDEOCORE_ERROR_CODE_STREAM_ABORTED";
    if (errorCode == -2133065723) return "SCE_VIDEOCORE_ERROR_CODE_STREAM_FULL";
    if (errorCode == -2133065705) return "SCE_VIDEOCORE_ERROR_CODE_STREAM_SUSPENDED";
    if (errorCode == -2133065714) return "SCE_VIDEOCORE_ERROR_CODE_UNUSABLE_THIS_API";
    if (errorCode == -2133032952) return "SCE_VIDEOCORE_ERROR_CODE_VIDEOCORE_FUNCTION";
    if (errorCode == -2134835200) return "SCE_VIDEODEC_ERROR_API_FAIL";
    if (errorCode == -2134835185) return "SCE_VIDEODEC_ERROR_ARGUMENT_POINTER";
    if (errorCode == -2134835190) return "SCE_VIDEODEC_ERROR_AU_POINTER";
    if (errorCode == -2134835191) return "SCE_VIDEODEC_ERROR_AU_SIZE";
    if (errorCode == -2134835199) return "SCE_VIDEODEC_ERROR_CODEC_TYPE";
    if (errorCode == -2134835186) return "SCE_VIDEODEC_ERROR_CONFIG_INFO";
    if (errorCode == -2134835193) return "SCE_VIDEODEC_ERROR_CPU_GPU_MEMORY_POINTER";
    if (errorCode == -2134835194) return "SCE_VIDEODEC_ERROR_CPU_GPU_MEMORY_SIZE";
    if (errorCode == -2134835195) return "SCE_VIDEODEC_ERROR_CPU_MEMORY_POINTER";
    if (errorCode == -2134835196) return "SCE_VIDEODEC_ERROR_CPU_MEMORY_SIZE";
    if (errorCode == -2134835187) return "SCE_VIDEODEC_ERROR_FRAME_BUFFER_ALIGNMENT";
    if (errorCode == -2134835188) return "SCE_VIDEODEC_ERROR_FRAME_BUFFER_POINTER";
    if (errorCode == -2134835189) return "SCE_VIDEODEC_ERROR_FRAME_BUFFER_SIZE";
    if (errorCode == -2134835197) return "SCE_VIDEODEC_ERROR_HANDLE";
    if (errorCode == -2134835192) return "SCE_VIDEODEC_ERROR_SHADER_CONTEXT_POINTER";
    if (errorCode == -2134835198) return "SCE_VIDEODEC_ERROR_STRUCT_SIZE";
    if (errorCode == -2128805888) return "SCE_VIDEODEC2_ERROR_API_FAIL";
    if (errorCode == -2128805873) return "SCE_VIDEODEC2_ERROR_ARGUMENT_POINTER";
    if (errorCode == -2128805878) return "SCE_VIDEODEC2_ERROR_AU_POINTER";
    if (errorCode == -2128805879) return "SCE_VIDEODEC2_ERROR_AU_SIZE";
    if (errorCode == -2128805887) return "SCE_VIDEODEC2_ERROR_CODEC_TYPE";
    if (errorCode == -2128805874) return "SCE_VIDEODEC2_ERROR_CONFIG_INFO";
    if (errorCode == -2128805881) return "SCE_VIDEODEC2_ERROR_CPU_GPU_MEMORY_POINTER";
    if (errorCode == -2128805882) return "SCE_VIDEODEC2_ERROR_CPU_GPU_MEMORY_SIZE";
    if (errorCode == -2128805883) return "SCE_VIDEODEC2_ERROR_CPU_MEMORY_POINTER";
    if (errorCode == -2128805884) return "SCE_VIDEODEC2_ERROR_CPU_MEMORY_SIZE";
    if (errorCode == -2128805875) return "SCE_VIDEODEC2_ERROR_FRAME_BUFFER_ALIGNMENT";
    if (errorCode == -2128805876) return "SCE_VIDEODEC2_ERROR_FRAME_BUFFER_POINTER";
    if (errorCode == -2128805877) return "SCE_VIDEODEC2_ERROR_FRAME_BUFFER_SIZE";
    if (errorCode == -2128805885) return "SCE_VIDEODEC2_ERROR_HANDLE";
    if (errorCode == -2128805880) return "SCE_VIDEODEC2_ERROR_SHADER_CONTEXT_POINTER";
    if (errorCode == -2128805886) return "SCE_VIDEODEC2_ERROR_STRUCT_SIZE";
    if (errorCode == -2132344831) return "SCE_VISION_MANAGER_ERROR_ALREADY_INIT";
    if (errorCode == -2132344800) return "SCE_VISION_MANAGER_ERROR_FACE_RECOG_DICT_NO_EXIST";
    if (errorCode == -2132344577) return "SCE_VISION_MANAGER_ERROR_FATAL";
    if (errorCode == -2132344813) return "SCE_VISION_MANAGER_ERROR_FLEXIBLE_MEMORY_NOT_ENOUGH";
    if (errorCode == -2132344825) return "SCE_VISION_MANAGER_ERROR_NO_EXIST_TARGET";
    if (errorCode == -2132344827) return "SCE_VISION_MANAGER_ERROR_NOMEM";
    if (errorCode == -2132344829) return "SCE_VISION_MANAGER_ERROR_NOT_CAMERA_CONNECTED";
    if (errorCode == -2132344830) return "SCE_VISION_MANAGER_ERROR_NOT_INIT";
    if (errorCode == -2132344828) return "SCE_VISION_MANAGER_ERROR_NOT_SUPPORTED";
    if (errorCode == -2132344826) return "SCE_VISION_MANAGER_ERROR_OTHER_PROCESS_RUNNING";
    if (errorCode == -2132344832) return "SCE_VISION_MANAGER_ERROR_PARAM";
    if (errorCode == -2132344824) return "SCE_VISION_MANAGER_ERROR_RECEIVE_CANCEL_REQUEST";
    if (errorCode == -2132344815) return "SCE_VISION_MANAGER_ERROR_SYSTEM_SHARED_MEMORY_NOT_ENOUGH";
    if (errorCode == -2132344823) return "SCE_VISION_MANAGER_ERROR_UNEXPECTED_INTERNAL_STATUS";
    if (errorCode == -2132344810) return "SCE_VISION_MANAGER_ERROR_UNEXPECTED_RECV_MSG_TYPE_FROM_CAMERA";
    if (errorCode == -2132344811) return "SCE_VISION_MANAGER_ERROR_UNEXPECTED_RECV_MSG_TYPE_FROM_CORE";
    if (errorCode == -2132344809) return "SCE_VISION_MANAGER_ERROR_UNEXPECTED_RECV_MSG_TYPE_FROM_DEPTH";
    if (errorCode == -2132344807) return "SCE_VISION_MANAGER_ERROR_UNEXPECTED_RECV_MSG_TYPE_FROM_FACE";
    if (errorCode == -2132344812) return "SCE_VISION_MANAGER_ERROR_UNEXPECTED_RECV_MSG_TYPE_FROM_MAIN";
    if (errorCode == -2132344808) return "SCE_VISION_MANAGER_ERROR_UNEXPECTED_RECV_MSG_TYPE_FROM_PAD_TRACKER";
    if (errorCode == -2132344816) return "SCE_VISION_MANAGER_ERROR_UNEXPECTED_RECV_MSG_WAIT";
    if (errorCode == -2132344799) return "SCE_VISION_MANAGER_ERROR_UNEXPECTED_REGISTER_USER_DATA_VERSION";
    if (errorCode == -2132344814) return "SCE_VISION_MANAGER_ERROR_VIDEO_SHARED_MEMORY_NOT_ENOUGH";
    if (errorCode == -2142369787) return "SCE_VOICE_ERROR_ARGUMENT_INVALID";
    if (errorCode == -2142369786) return "SCE_VOICE_ERROR_CONTAINER_INVALID";
    if (errorCode == -2142369789) return "SCE_VOICE_ERROR_GENERAL";
    if (errorCode == -2142369790) return "SCE_VOICE_ERROR_LIBVOICE_INITIALIZED";
    if (errorCode == -2142369791) return "SCE_VOICE_ERROR_LIBVOICE_NOT_INIT";
    if (errorCode == -2142369534) return "SCE_VOICE_ERROR_LIBVOICEQOS_ARGUMENT_INVALID";
    if (errorCode == -2142369531) return "SCE_VOICE_ERROR_LIBVOICEQOS_INITIALIZED";
    if (errorCode == -2142369532) return "SCE_VOICE_ERROR_LIBVOICEQOS_INTERNAL_UNRECOVERABLE";
    if (errorCode == -2142369535) return "SCE_VOICE_ERROR_LIBVOICEQOS_NOT_INIT";
    if (errorCode == -2142369533) return "SCE_VOICE_ERROR_LIBVOICEQOS_PACKET_INVALID";
    if (errorCode == -2142369529) return "SCE_VOICE_ERROR_LIBVOICEQOS_RESOURCE_USED";
    if (errorCode == -2142369530) return "SCE_VOICE_ERROR_LIBVOICEQOS_SYSTEM";
    if (errorCode == -2142369788) return "SCE_VOICE_ERROR_PORT_INVALID";
    if (errorCode == -2142369784) return "SCE_VOICE_ERROR_RESOURCE_INSUFFICIENT";
    if (errorCode == -2142369781) return "SCE_VOICE_ERROR_SERVICE_ATTACHED";
    if (errorCode == -2142369782) return "SCE_VOICE_ERROR_SERVICE_DETACHED";
    if (errorCode == -2142369785) return "SCE_VOICE_ERROR_TOPOLOGY";
    if (errorCode == -2129526773) return "SCE_ZLIB_ERROR_AGAIN";
    if (errorCode == -2129526733) return "SCE_ZLIB_ERROR_ALREADY_INITIALIZED";
    if (errorCode == -2129526529) return "SCE_ZLIB_ERROR_FATAL";
    if (errorCode == -2129526770) return "SCE_ZLIB_ERROR_FAULT";
    if (errorCode == -2129526762) return "SCE_ZLIB_ERROR_INVALID";
    if (errorCode == -2129526782) return "SCE_ZLIB_ERROR_NOT_FOUND";
    if (errorCode == -2129526734) return "SCE_ZLIB_ERROR_NOT_INITIALIZED";
    if (errorCode == -2129526745) return "SCE_ZLIB_ERROR_TIMEDOUT";
    if (errorCode == -2141901824) return "Missing Long Name";
    if (errorCode == -2141901823) return "Missing Long Name";
    if (errorCode == -2141901822) return "Missing Long Name";
    if (errorCode == -2141901821) return "Missing Long Name";
    if (errorCode == -2141901820) return "Missing Long Name";
    if (errorCode == -2141901819) return "Missing Long Name";
    if (errorCode == -2141901818) return "Missing Long Name";
    if (errorCode == -2141901817) return "Missing Long Name";
    if (errorCode == -2141901816) return "Missing Long Name";
    if (errorCode == -2141901815) return "Missing Long Name";
    if (errorCode == -2141901814) return "Missing Long Name";
    if (errorCode == -2141901813) return "Missing Long Name";
    if (errorCode == -2141901812) return "Missing Long Name";
    if (errorCode == -2141901811) return "Missing Long Name";
    if (errorCode == -2141901810) return "Missing Long Name";
    if (errorCode == -2141901809) return "Missing Long Name";
    if (errorCode == -2141901808) return "Missing Long Name";
    if (errorCode == -2141901807) return "Missing Long Name";
    if (errorCode == -2141901806) return "Missing Long Name";
    if (errorCode == -2141901805) return "Missing Long Name";
    if (errorCode == -2141901804) return "Missing Long Name";
    if (errorCode == -2141901803) return "Missing Long Name";
    if (errorCode == -2141901802) return "Missing Long Name";
    if (errorCode == -2141901801) return "Missing Long Name";
    if (errorCode == -2141901800) return "Missing Long Name";
    if (errorCode == -2141901799) return "Missing Long Name";
    if (errorCode == -2141901798) return "Missing Long Name";
    if (errorCode == -2141901797) return "Missing Long Name";
    if (errorCode == -2141901796) return "Missing Long Name";
    if (errorCode == -2141901795) return "Missing Long Name";
    if (errorCode == -2141901794) return "Missing Long Name";
    if (errorCode == -2141901793) return "Missing Long Name";
    if (errorCode == -2141901792) return "Missing Long Name";
    if (errorCode == -2141901791) return "Missing Long Name";
    if (errorCode == -2141901776) return "Missing Long Name";
    if (errorCode == -2141901775) return "Missing Long Name";
    if (errorCode == -2141901774) return "Missing Long Name";
    if (errorCode == -2141901773) return "Missing Long Name";
    if (errorCode == -2141901772) return "Missing Long Name";
    if (errorCode == -2141901771) return "Missing Long Name";
    if (errorCode == -2141901770) return "Missing Long Name";
    if (errorCode == -2141901769) return "Missing Long Name";
    if (errorCode == -2141901768) return "Missing Long Name";
    if (errorCode == -2141901767) return "Missing Long Name";
    if (errorCode == -2141901766) return "Missing Long Name";
    if (errorCode == -2141901765) return "Missing Long Name";
    if (errorCode == -2141901764) return "Missing Long Name";
    if (errorCode == -2141901763) return "Missing Long Name";
    if (errorCode == -2141901762) return "Missing Long Name";
    if (errorCode == -2141901761) return "Missing Long Name";
    if (errorCode == -2141901760) return "Missing Long Name";
    if (errorCode == -2141901759) return "Missing Long Name";
    if (errorCode == -2141901758) return "Missing Long Name";
    if (errorCode == -2141901757) return "Missing Long Name";
    if (errorCode == -2141901756) return "Missing Long Name";
    if (errorCode == -2141901755) return "Missing Long Name";
    if (errorCode == -2141901754) return "Missing Long Name";
    if (errorCode == -2141901753) return "Missing Long Name";
    if (errorCode == -2141901752) return "Missing Long Name";
    if (errorCode == -2141901751) return "Missing Long Name";
    if (errorCode == -2141901750) return "Missing Long Name";
    if (errorCode == -2141901749) return "Missing Long Name";
    if (errorCode == -2141901748) return "Missing Long Name";
    if (errorCode == -2141901747) return "Missing Long Name";
    if (errorCode == -2141901746) return "Missing Long Name";
    if (errorCode == -2141901745) return "Missing Long Name";
    if (errorCode == -2141901744) return "Missing Long Name";
    if (errorCode == -2141901743) return "Missing Long Name";
    if (errorCode == -2141901742) return "Missing Long Name";
    if (errorCode == -2141901741) return "Missing Long Name";
    if (errorCode == -2141901740) return "Missing Long Name";
    if (errorCode == -2141901739) return "Missing Long Name";
    if (errorCode == -2141901738) return "Missing Long Name";
    if (errorCode == -2141901737) return "Missing Long Name";
    if (errorCode == -2141901736) return "Missing Long Name";
    if (errorCode == -2141901728) return "Missing Long Name";
    if (errorCode == -2141901727) return "Missing Long Name";
    if (errorCode == -2141901726) return "Missing Long Name";
    if (errorCode == -2141901725) return "Missing Long Name";
    if (errorCode == -2141901724) return "Missing Long Name";
    if (errorCode == -2141901723) return "Missing Long Name";
    if (errorCode == -2141901722) return "Missing Long Name";
    if (errorCode == -2141901721) return "Missing Long Name";
    if (errorCode == -2141901712) return "Missing Long Name";
    if (errorCode == -2141901711) return "Missing Long Name";
    if (errorCode == -2141901710) return "Missing Long Name";
    if (errorCode == -2141901709) return "Missing Long Name";
    if (errorCode == -2141901708) return "Missing Long Name";
    if (errorCode == -2141901707) return "Missing Long Name";
    if (errorCode == -2141901706) return "Missing Long Name";
    if (errorCode == -2141901705) return "Missing Long Name";
    if (errorCode == -2141901704) return "Missing Long Name";
    if (errorCode == -2141901703) return "Missing Long Name";
    if (errorCode == -2141901702) return "Missing Long Name";
    if (errorCode == -2141901701) return "Missing Long Name";
    if (errorCode == -2141901700) return "Missing Long Name";
    if (errorCode == -2141901699) return "Missing Long Name";
    if (errorCode == -2141901698) return "Missing Long Name";
    if (errorCode == -2141901697) return "Missing Long Name";
    if (errorCode == -2141901696) return "Missing Long Name";
    if (errorCode == -2141901695) return "Missing Long Name";
    if (errorCode == -2141901694) return "Missing Long Name";
    if (errorCode == -2141901693) return "Missing Long Name";
    if (errorCode == -2141901692) return "Missing Long Name";
    if (errorCode == -2141901691) return "Missing Long Name";
    if (errorCode == -2141901690) return "Missing Long Name";
    if (errorCode == -2141901689) return "Missing Long Name";
    if (errorCode == -2141901688) return "Missing Long Name";
    if (errorCode == -2141901687) return "Missing Long Name";
    if (errorCode == -2141901686) return "Missing Long Name";
    if (errorCode == -2141901685) return "Missing Long Name";
    if (errorCode == -2141901684) return "Missing Long Name";
    if (errorCode == -2141901683) return "Missing Long Name";
    if (errorCode == -2141901682) return "Missing Long Name";
    if (errorCode == -2141901681) return "Missing Long Name";
    if (errorCode == -2141901680) return "Missing Long Name";
    if (errorCode == -2141901679) return "Missing Long Name";
    if (errorCode == -2141901678) return "Missing Long Name";
    if (errorCode == -2141901677) return "Missing Long Name";
    if (errorCode == -2141901676) return "Missing Long Name";
    if (errorCode == -2141901675) return "Missing Long Name";
    if (errorCode == -2141901674) return "Missing Long Name";
    if (errorCode == -2141901673) return "Missing Long Name";
    if (errorCode == -2141901672) return "Missing Long Name";
    if (errorCode == -2141901671) return "Missing Long Name";
    if (errorCode == -2141901670) return "Missing Long Name";
    if (errorCode == -2141901669) return "Missing Long Name";
    if (errorCode == -2141901668) return "Missing Long Name";
    if (errorCode == -2141901667) return "Missing Long Name";
    if (errorCode == -2141901666) return "Missing Long Name";
    if (errorCode == -2141901664) return "Missing Long Name";
    if (errorCode == -2141901663) return "Missing Long Name";
    if (errorCode == -2141901662) return "Missing Long Name";
    if (errorCode == -2141901661) return "Missing Long Name";
    if (errorCode == -2141901660) return "Missing Long Name";
    if (errorCode == -2141901659) return "Missing Long Name";
    if (errorCode == -2141901658) return "Missing Long Name";
    if (errorCode == -2141901657) return "Missing Long Name";
    if (errorCode == -2141901656) return "Missing Long Name";
    if (errorCode == -2141901654) return "Missing Long Name";
    if (errorCode == -2141901653) return "Missing Long Name";
    if (errorCode == -2141901616) return "Missing Long Name";
    if (errorCode == -2141901615) return "Missing Long Name";
    if (errorCode == -2141901614) return "Missing Long Name";
    if (errorCode == -2141901613) return "Missing Long Name";
    if (errorCode == -2141901612) return "Missing Long Name";
    if (errorCode == -2141901611) return "Missing Long Name";
    if (errorCode == -2141901610) return "Missing Long Name";
    if (errorCode == -2141901609) return "Missing Long Name";
    if (errorCode == -2141901608) return "Missing Long Name";
    if (errorCode == -2141901607) return "Missing Long Name";
    if (errorCode == -2141901606) return "Missing Long Name";
    if (errorCode == -2141901605) return "Missing Long Name";
    if (errorCode == -2141901604) return "Missing Long Name";
    if (errorCode == -2141901603) return "Missing Long Name";
    if (errorCode == -2141901602) return "Missing Long Name";
    if (errorCode == -2141901601) return "Missing Long Name";
    if (errorCode == -2141901600) return "Missing Long Name";
    if (errorCode == -2141901599) return "Missing Long Name";
    if (errorCode == -2141901598) return "Missing Long Name";
    if (errorCode == -2141901597) return "Missing Long Name";
    if (errorCode == -2141901596) return "Missing Long Name";
    if (errorCode == -2141901595) return "Missing Long Name";
    if (errorCode == -2141901594) return "Missing Long Name";
    if (errorCode == -2141901593) return "Missing Long Name";
    if (errorCode == -2141901592) return "Missing Long Name";
    if (errorCode == -2138374143) return "Missing Long Name";
    if (errorCode == -2138374142) return "Missing Long Name";
    if (errorCode == -2138374141) return "Missing Long Name";
    if (errorCode == -2138374140) return "Missing Long Name";
    if (errorCode == -2138374139) return "Missing Long Name";
    if (errorCode == -2138374138) return "Missing Long Name";
    if (errorCode == -2138308608) return "Missing Long Name";
    if (errorCode == -2138308607) return "Missing Long Name";
    if (errorCode == -2138308606) return "Missing Long Name";
    if (errorCode == -2138308605) return "Missing Long Name";
    if (errorCode == -2138308604) return "Missing Long Name";
    if (errorCode == -2138308603) return "Missing Long Name";
    if (errorCode == -2138308602) return "Missing Long Name";
    if (errorCode == -2138308601) return "Missing Long Name";
    if (errorCode == -2138308600) return "Missing Long Name";
    if (errorCode == -2138308599) return "Missing Long Name";
    if (errorCode == -2138308598) return "Missing Long Name";
    if (errorCode == -2138308597) return "Missing Long Name";
    if (errorCode == -2138308596) return "Missing Long Name";
    if (errorCode == -2138308595) return "Missing Long Name";
    if (errorCode == -2138308594) return "Missing Long Name";
    if (errorCode == -2138308593) return "Missing Long Name";
    if (errorCode == -2138308592) return "Missing Long Name";
    if (errorCode == -2135752703) return "Missing Long Name";
    if (errorCode == -2135752702) return "Missing Long Name";
    if (errorCode == -2135752701) return "Missing Long Name";
    if (errorCode == -2135752700) return "Missing Long Name";
    if (errorCode == -2135752699) return "Missing Long Name";
    if (errorCode == -2135752698) return "Missing Long Name";
    if (errorCode == -2135752697) return "Missing Long Name";
    if (errorCode == -2135752696) return "Missing Long Name";
    if (errorCode == -2135752688) return "Missing Long Name";
    if (errorCode == -2135752687) return "Missing Long Name";
    if (errorCode == -2135752686) return "Missing Long Name";
    if (errorCode == -2135752685) return "Missing Long Name";
    if (errorCode == -2135752671) return "Missing Long Name";
    if (errorCode == -2135752670) return "Missing Long Name";
    if (errorCode == -2135752669) return "Missing Long Name";
    if (errorCode == -2135752668) return "Missing Long Name";
    if (errorCode == -2135752667) return "Missing Long Name";
    if (errorCode == -2135752665) return "Missing Long Name";
    if (errorCode == -2135752664) return "Missing Long Name";
    if (errorCode == -2135752656) return "Missing Long Name";
    if (errorCode == -2135750911) return "Missing Long Name";
    if (errorCode == -2135750910) return "Missing Long Name";
    if (errorCode == -2135732223) return "Missing Long Name";
    if (errorCode == -2135732222) return "Missing Long Name";
    if (errorCode == -2135732221) return "Missing Long Name";
    if (errorCode == -2135732220) return "Missing Long Name";
    if (errorCode == -2135732219) return "Missing Long Name";
    if (errorCode == -2135732191) return "Missing Long Name";
    if (errorCode == -2135732190) return "Missing Long Name";
    if (errorCode == -2135732189) return "Missing Long Name";
    if (errorCode == -2135732188) return "Missing Long Name";
    if (errorCode == -2135732187) return "Missing Long Name";
    if (errorCode == -2135732186) return "Missing Long Name";
    if (errorCode == -2135732185) return "Missing Long Name";
    if (errorCode == -2135732184) return "Missing Long Name";
    if (errorCode == -2135732183) return "Missing Long Name";
    if (errorCode == -2135732159) return "Missing Long Name";
    if (errorCode == -2135732158) return "Missing Long Name";
    if (errorCode == -2135732143) return "Missing Long Name";
    if (errorCode == -2135732142) return "Missing Long Name";
    if (errorCode == -2135730944) return "Missing Long Name";
    if (errorCode == -2135730943) return "Missing Long Name";
    if (errorCode == -2135730942) return "Missing Long Name";
    if (errorCode == -2135730941) return "Missing Long Name";
    if (errorCode == -2135730940) return "Missing Long Name";
    if (errorCode == -2135730939) return "Missing Long Name";
    if (errorCode == -2135730938) return "Missing Long Name";
    if (errorCode == -2135730937) return "Missing Long Name";
    if (errorCode == -2135730936) return "Missing Long Name";
    if (errorCode == -2135730688) return "Missing Long Name";
    if (errorCode == -2135730432) return "Missing Long Name";
    if (errorCode == -2135730431) return "Missing Long Name";
    if (errorCode == -2135730430) return "Missing Long Name";
    if (errorCode == -2135730429) return "Missing Long Name";
    if (errorCode == -2135730428) return "Missing Long Name";
    if (errorCode == -2135728128) return "Missing Long Name";
    if (errorCode == -2135728127) return "Missing Long Name";
    if (errorCode == -2135728126) return "Missing Long Name";
    if (errorCode == -2135728124) return "Missing Long Name";
    if (errorCode == -2135359487) return "Missing Long Name";
    if (errorCode == -2135359486) return "Missing Long Name";
    if (errorCode == -2135359485) return "Missing Long Name";
    if (errorCode == -2135359483) return "Missing Long Name";
    if (errorCode == -2130706432) return "Missing Long Name";
    if (errorCode == -2130706431) return "Missing Long Name";
    if (errorCode == -2130706430) return "Missing Long Name";
    if (errorCode == -2130706429) return "Missing Long Name";
    if (errorCode == -2130706428) return "Missing Long Name";
    if (errorCode == -2130706427) return "Missing Long Name";
    if (errorCode == -2130706175) return "Missing Long Name";
    if (errorCode == -2130706174) return "Missing Long Name";
    if (errorCode == -2130706173) return "Missing Long Name";
    if (errorCode == -2130706172) return "Missing Long Name";
    if (errorCode == -2130705920) return "Missing Long Name";
    if (errorCode == -2130705919) return "Missing Long Name";
    if (errorCode == -2130705918) return "Missing Long Name";
    if (errorCode == -2130705917) return "Missing Long Name";
    if (errorCode == -2130705916) return "Missing Long Name";
    if (errorCode == -2130705663) return "Missing Long Name";
    if (errorCode == -2130705662) return "Missing Long Name";
    if (errorCode == -2130705661) return "Missing Long Name";
    if (errorCode == -2130705660) return "Missing Long Name";
    if (errorCode == -2130705659) return "Missing Long Name";
    if (errorCode == -2130705658) return "Missing Long Name";
    if (errorCode == -2130705657) return "Missing Long Name";
    if (errorCode == -2130705656) return "Missing Long Name";
    if (errorCode == -2130705655) return "Missing Long Name";
    if (errorCode == -2130705654) return "Missing Long Name";
    if (errorCode == -2130705653) return "Missing Long Name";
    if (errorCode == -2130705652) return "Missing Long Name";
    if (errorCode == -2130705651) return "Missing Long Name";
    if (errorCode == -2130705650) return "Missing Long Name";
    if (errorCode == -2130705649) return "Missing Long Name";
    if (errorCode == -2130705648) return "Missing Long Name";
    if (errorCode == -2130705408) return "Missing Long Name";
    if (errorCode == -2130705151) return "Missing Long Name";
    if (errorCode == -2130705150) return "Missing Long Name";
    if (errorCode == -2130705149) return "Missing Long Name";
    if (errorCode == -2130704896) return "Missing Long Name";
    if (errorCode == -2130704895) return "Missing Long Name";
    if (errorCode == -2130704894) return "Missing Long Name";
    if (errorCode == -2130704893) return "Missing Long Name";
    if (errorCode == -2130704892) return "Missing Long Name";
    if (errorCode == -2130704891) return "Missing Long Name";
    return "";
}